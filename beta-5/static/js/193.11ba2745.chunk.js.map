{"version":3,"file":"static/js/193.11ba2745.chunk.js","mappings":"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+0B,IACnC,IAEA1E,EAAU5wB,UAAUi3B,QAAU,WAC5B,OAAO12B,KAAK20B,WAAW/N,OAAO5mB,KAAKy2B,WACrC,EAEApG,EAAU5wB,UAAUk3B,MAAQ,WAC1B,OAAO1T,EAAMnkB,OAAOkB,KAAK02B,UAAW,OAAOp4B,aAC7C,EAEAU,EAAOvD,QAAU40B,oBChEjBrxB,EAAOvD,QAAU,CACfkpB,QAAS,CACPI,KAAM,EACNK,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINP,IAAK,CACH5L,IAAK,EACLmM,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,0GCrwBR,IAAInC,EAAQxnB,EACRkE,EAAKY,EAAQ,MACbq2B,EA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AG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GA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ACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,S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","sources":["../node_modules/bech32/dist/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/brorand/index.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../node_modules/graphql-request/src/createRequestBody.ts","../node_modules/graphql-request/src/defaultJsonSerializer.ts","../node_modules/graphql-request/src/graphql-ws.ts","../node_modules/graphql-request/src/index.ts","../node_modules/graphql-request/src/parseArgs.ts","../node_modules/graphql-request/src/types.ts","../node_modules/graphql-request/node_modules/extract-files/public/ReactNativeFile.js","../node_modules/graphql-request/node_modules/extract-files/public/extractFiles.js","../node_modules/graphql-request/node_modules/extract-files/public/index.js","../node_modules/graphql-request/node_modules/extract-files/public/isExtractableFile.js","../node_modules/graphql-request/node_modules/form-data/lib/browser.js","../node_modules/hash.js/lib/hash.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/inherits/inherits_browser.js","../node_modules/long/src/long.js","../node_modules/lru-cache/index.js","../node_modules/minimalistic-assert/index.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js","../node_modules/tai64/lib/TAI64.js","../node_modules/tai64/lib/index.js","../node_modules/tai64/lib/leapSeconds.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/@babel/runtime/helpers/esm/classPrivateMethodGet.js","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","../node_modules/@fuel-ts/versions/src/index.ts","../node_modules/@fuel-ts/versions/src/lib/getBuiltinVersions.ts","../node_modules/@fuel-ts/errors/src/error-codes.ts","../node_modules/@fuel-ts/errors/src/fuel-error.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/ethers/src.ts/utils/properties.ts","../node_modules/ethers/src.ts/utils/errors.ts","../node_modules/ethers/src.ts/_version.ts","../node_modules/ethers/src.ts/utils/data.ts","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/constants.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/debug.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/re.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/parse-options.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/internal/identifiers.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/semver.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/parse.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/valid.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/clean.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/inc.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/eq.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/diff.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/major.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/minor.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/patch.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/prerelease.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rcompare.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-loose.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/compare-build.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/sort.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/rsort.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gt.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lt.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/neq.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/gte.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/lte.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/cmp.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/coerce.js","../node_modules/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js","../node_modules/node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js","../node_modules/node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/range.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/classes/comparator.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/functions/satisfies.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/to-comparators.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/max-satisfying.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-satisfying.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/min-version.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/valid.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/outside.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/gtr.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/ltr.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/intersects.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/simplify.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/ranges/subset.js","../node_modules/node_modules/.pnpm/semver@7.3.8/node_modules/semver/index.js","../node_modules/@fuel-ts/utils/src/utils/chunkAndPadBytes.ts","../node_modules/@fuel-ts/utils/src/utils/concat.ts","../node_modules/@fuel-ts/versions/src/lib/checkFuelCoreVersionCompatibility.ts","../node_modules/@fuel-ts/utils/src/utils/normalizeString.ts","../node_modules/@fuel-ts/math/src/bn.ts","../node_modules/@fuel-ts/math/src/configs.ts","../node_modules/@fuel-ts/math/src/decimal.ts","../node_modules/@fuel-ts/math/src/functional.ts","../node_modules/@fuel-ts/math/src/math.ts","../node_modules/ethers/src.ts/utils/utf8.ts","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@noble/hashes/src/scrypt.ts","../node_modules/ethereum-cryptography/esm/utils.js","../node_modules/ethereum-cryptography/esm/scrypt.js","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/ethereum-cryptography/esm/keccak.js","../node_modules/ethers/node_modules/@noble/hashes/src/_assert.ts","../node_modules/ethers/node_modules/@noble/hashes/src/utils.ts","../node_modules/ethers/node_modules/@noble/hashes/src/hmac.ts","../node_modules/ethers/node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/ethers/node_modules/@noble/hashes/src/_sha2.ts","../node_modules/ethers/node_modules/@noble/hashes/src/sha256.ts","../node_modules/ethers/node_modules/@noble/hashes/src/_u64.ts","../node_modules/ethers/node_modules/@noble/hashes/src/sha512.ts","../node_modules/ethers/src.ts/crypto/crypto-browser.ts","../node_modules/ethers/src.ts/crypto/pbkdf2.ts","../node_modules/@fuel-ts/crypto/src/shared/scrypt.ts","../node_modules/@fuel-ts/crypto/src/browser/bufferFromString.ts","../node_modules/@fuel-ts/crypto/src/browser/crypto.ts","../node_modules/@fuel-ts/crypto/src/browser/randomBytes.ts","../node_modules/@fuel-ts/crypto/src/browser/stringFromBuffer.ts","../node_modules/@fuel-ts/crypto/src/browser/aes-ctr.ts","../node_modules/@fuel-ts/crypto/src/browser/encryptJsonWalletData.ts","../node_modules/@fuel-ts/crypto/src/browser/index.ts","../node_modules/@fuel-ts/crypto/src/shared/keccak256.ts","../node_modules/@fuel-ts/crypto/src/index.browser.ts","../node_modules/ethers/src.ts/crypto/sha2.ts","../node_modules/@fuel-ts/abi-coder/src/coders/abstract-coder.ts","../node_modules/@fuel-ts/abi-coder/src/coders/u64.ts","../node_modules/@fuel-ts/abi-coder/src/constants.ts","../node_modules/@fuel-ts/abi-coder/src/utilities.ts","../node_modules/@fuel-ts/abi-coder/src/coders/array.ts","../node_modules/@fuel-ts/abi-coder/src/coders/b256.ts","../node_modules/@fuel-ts/abi-coder/src/coders/b512.ts","../node_modules/@fuel-ts/abi-coder/src/coders/boolean.ts","../node_modules/@fuel-ts/abi-coder/src/coders/enum.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@fuel-ts/abi-coder/src/coders/number.ts","../node_modules/@fuel-ts/abi-coder/src/coders/byte.ts","../node_modules/@fuel-ts/abi-coder/src/coders/string.ts","../node_modules/@fuel-ts/abi-coder/src/coders/option.ts","../node_modules/@fuel-ts/abi-coder/src/coders/struct.ts","../node_modules/@fuel-ts/abi-coder/src/coders/tuple.ts","../node_modules/@fuel-ts/abi-coder/src/coders/vec.ts","../node_modules/@fuel-ts/abi-coder/src/coders/raw-slice.ts","../node_modules/@fuel-ts/abi-coder/src/coders/stdString.ts","../node_modules/@fuel-ts/abi-coder/src/resolved-abi-type.ts","../node_modules/@fuel-ts/abi-coder/src/abi-coder.ts","../node_modules/@fuel-ts/abi-coder/src/function-fragment.ts","../node_modules/@fuel-ts/abi-coder/src/interface.ts","../node_modules/@fuel-ts/interfaces/src/index.ts","../node_modules/@fuel-ts/transactions/src/coders/byte-array.ts","../node_modules/@fuel-ts/transactions/src/coders/tx-pointer.ts","../node_modules/@fuel-ts/transactions/src/coders/input.ts","../node_modules/@fuel-ts/transactions/src/coders/output.ts","../node_modules/@fuel-ts/transactions/src/coders/policy.ts","../node_modules/@fuel-ts/transactions/src/coders/receipt.ts","../node_modules/@fuel-ts/transactions/src/coders/storage-slot.ts","../node_modules/@fuel-ts/transactions/src/coders/witness.ts","../node_modules/@fuel-ts/transactions/src/coders/transaction.ts","../node_modules/@fuel-ts/transactions/src/configs.ts","../node_modules/@fuel-ts/address/src/configs.ts","../node_modules/@fuel-ts/address/src/utils.ts","../node_modules/ethers/node_modules/@noble/hashes/src/sha3.ts","../node_modules/@fuel-ts/address/src/address.ts","../node_modules/ethers/src.ts/crypto/keccak.ts","../node_modules/ethers/src.ts/address/address.ts","../node_modules/ethers/src.ts/transaction/accesslist.ts","../node_modules/ethers/src.ts/utils/maths.ts","../node_modules/ethers/src.ts/providers/plugins-network.ts","../node_modules/ethers/src.ts/providers/network.ts","../node_modules/@fuel-ts/providers/node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/@fuel-ts/providers/node_modules/ramda/es/internal/_curry1.js","../node_modules/@fuel-ts/providers/node_modules/ramda/es/type.js","../node_modules/@fuel-ts/providers/node_modules/ramda/es/internal/_clone.js","../node_modules/@fuel-ts/providers/node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/@fuel-ts/providers/node_modules/ramda/es/clone.js","../node_modules/@fuel-ts/hasher/src/hasher.ts","../node_modules/@fuel-ts/providers/src/coin-quantity.ts","../node_modules/@fuel-ts/providers/src/__generated__/operations.ts","../node_modules/@fuel-ts/providers/src/memory-cache.ts","../node_modules/@fuel-ts/providers/src/transaction-request/input.ts","../node_modules/@fuel-ts/providers/src/transaction-request/output.ts","../node_modules/@fuel-ts/providers/src/resource.ts","../node_modules/@fuel-ts/providers/src/utils/receipts.ts","../node_modules/@fuel-ts/providers/src/utils/block-explorer.ts","../node_modules/@fuel-ts/providers/src/utils/gas.ts","../node_modules/@fuel-ts/providers/src/utils/json.ts","../node_modules/@fuel-ts/providers/src/utils/sleep.ts","../node_modules/@fuel-ts/providers/src/transaction-request/errors.ts","../node_modules/@fuel-ts/providers/src/utils/time.ts","../node_modules/@fuel-ts/providers/src/transaction-request/witness.ts","../node_modules/@fuel-ts/providers/src/transaction-request/transaction-request.ts","../node_modules/@fuel-ts/providers/src/transaction-request/hash-transaction.ts","../node_modules/@fuel-ts/providers/src/transaction-request/storage-slot.ts","../node_modules/@fuel-ts/providers/src/transaction-request/create-transaction-request.ts","../node_modules/@fuel-ts/providers/src/transaction-request/scripts.ts","../node_modules/@fuel-ts/providers/src/transaction-request/script-transaction-request.ts","../node_modules/@fuel-ts/providers/src/transaction-request/utils.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/input.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/output.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/operations.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/call.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/receipt.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/status.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/assemble-transaction-summary.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/calculate-transaction-fee.ts","../node_modules/@fuel-ts/providers/src/transaction-summary/date.ts","../node_modules/@fuel-ts/providers/src/transaction-response/transaction-response.ts","../node_modules/@fuel-ts/providers/src/utils/merge-quantities.ts","../node_modules/@fuel-ts/providers/src/provider.ts","../node_modules/@fuels/vm-asm/dist/web/index.mjs","../node_modules/@fuel-ts/program/src/configs.ts","../node_modules/@fuel-ts/program/src/utils.ts","../node_modules/@fuel-ts/program/src/revert/revert-error.ts","../node_modules/@fuel-ts/program/src/revert/revert-error-codes.ts","../node_modules/@fuel-ts/program/src/errors.ts","../node_modules/@fuel-ts/program/src/instruction-set.ts","../node_modules/@fuel-ts/program/src/script-request.ts","../node_modules/@fuel-ts/script/src/scripts.ts","../node_modules/@fuel-ts/merkle/src/common/cryptography.ts","../node_modules/@fuel-ts/merkle/src/binary/types/node.ts","../node_modules/@fuel-ts/merkle/src/binary/binaryMerkleTree.ts","../node_modules/@fuel-ts/merkle/src/common/common.ts","../node_modules/@fuel-ts/merkle/src/sparse/treeHasher.ts","../node_modules/@fuel-ts/merkle/src/sparse/types/sparseCompactMerkleProof.ts","../node_modules/@fuel-ts/merkle/src/sparse/types/sparseMerkleProof.ts","../node_modules/@fuel-ts/merkle/src/sparse/utils.ts","../node_modules/@fuel-ts/merkle/src/sparse/sparseMerkleTree.ts","../node_modules/@fuel-ts/merkle/src/sparse/proofs.ts","../node_modules/@fuel-ts/contract/src/util.ts","../node_modules/@fuel-ts/wordlists/src/words/english.ts","../node_modules/ethers/src.ts/crypto/hmac.ts","../node_modules/ethers/src.ts/utils/base58.ts","../node_modules/@fuel-ts/mnemonic/src/utils.ts","../node_modules/@fuel-ts/mnemonic/src/mnemonic.ts","../node_modules/@fuel-ts/signer/src/signer.ts","../node_modules/@fuel-ts/wallet/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/@fuel-ts/wallet/node_modules/uuid/dist/esm-browser/native.js","../node_modules/@fuel-ts/wallet/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/ethers/node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/@fuel-ts/wallet/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/ethers/src.ts/crypto/ripemd160.ts","../node_modules/@fuel-ts/hdwallet/src/hdwallet.ts","../node_modules/@fuel-ts/wallet/src/utils.ts","../node_modules/@fuel-ts/wallet/src/account.ts","../node_modules/@fuel-ts/wallet/src/keystore-wallet.ts","../node_modules/@fuel-ts/wallet/src/base-unlocked-wallet.ts","../node_modules/@fuel-ts/wallet/src/wallets.ts","../node_modules/@fuel-ts/wallet/src/wallet.ts","../node_modules/@fuel-ts/predicate/src/utils/getPredicateRoot.ts","../node_modules/@fuel-ts/wallet/src/configs.ts"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import { isExtractableFile, extractFiles, ExtractableFile } from 'extract-files'\nimport FormDataNode from 'form-data'\nimport { defaultJsonSerializer } from './defaultJsonSerializer'\n\nimport { Variables } from './types'\n\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nconst isExtractableFileEnhanced = (value: any): value is ExtractableFile | { pipe: Function } =>\n  isExtractableFile(value) ||\n  (value !== null && typeof value === 'object' && typeof value.pipe === 'function')\n\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nexport default function createRequestBody(\n  query: string | string[],\n  variables?: Variables | Variables[],\n  operationName?: string,\n  jsonSerializer = defaultJsonSerializer\n): string | FormData {\n  const { clone, files } = extractFiles({ query, variables, operationName }, '', isExtractableFileEnhanced)\n\n  if (files.size === 0) {\n    if (!Array.isArray(query)) {\n      return jsonSerializer.stringify(clone)\n    }\n\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n      throw new Error('Cannot create request body with given variable type, array expected')\n    }\n\n    // Batch support\n    const payload = query.reduce<{ query: string; variables: Variables | undefined }[]>(\n      (accu, currentQuery, index) => {\n        accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined })\n        return accu\n      },\n      []\n    )\n\n    return jsonSerializer.stringify(payload)\n  }\n\n  const Form = typeof FormData === 'undefined' ? FormDataNode : FormData\n\n  const form = new Form()\n\n  form.append('operations', jsonSerializer.stringify(clone))\n\n  const map: { [key: number]: string[] } = {}\n  let i = 0\n  files.forEach((paths) => {\n    map[++i] = paths\n  })\n  form.append('map', jsonSerializer.stringify(map))\n\n  i = 0\n  files.forEach((paths, file) => {\n    form.append(`${++i}`, file as any)\n  })\n\n  return form as FormData\n}\n","import { JsonSerializer } from './types.dom'\n\nexport const defaultJsonSerializer: JsonSerializer = {\n  parse: JSON.parse,\n  stringify: JSON.stringify,\n}\n","import { ClientError, RequestDocument, Variables } from './types'\nimport * as Dom from './types.dom'\nimport { resolveRequestDocument } from '.'\n\nconst CONNECTION_INIT = 'connection_init'\nconst CONNECTION_ACK = 'connection_ack'\nconst PING = 'ping'\nconst PONG = 'pong'\nconst SUBSCRIBE = 'subscribe'\nconst NEXT = 'next'\nconst ERROR = 'error'\nconst COMPLETE = 'complete'\n\ntype MessagePayload = { [key: string]: any }\n\ntype SubscribePayload<V = Variables, E = any> = {\n  operationName?: string | null\n  query: string\n  variables?: V\n  extensions?: E\n}\n\nclass GraphQLWebSocketMessage<A = MessagePayload> {\n  private _type: string\n  private _id?: string\n  private _payload?: A\n\n  public get type(): string {\n    return this._type\n  }\n  public get id(): string | undefined {\n    return this._id\n  }\n  public get payload(): A | undefined {\n    return this._payload\n  }\n\n  constructor(type: string, payload?: A, id?: string) {\n    this._type = type\n    this._payload = payload\n    this._id = id\n  }\n\n  public get text(): string {\n    const result: any = { type: this.type }\n    if (this.id != null && this.id != undefined) result.id = this.id\n    if (this.payload != null && this.payload != undefined) result.payload = this.payload\n    return JSON.stringify(result)\n  }\n\n  static parse<A>(data: string, f: (payload: any) => A): GraphQLWebSocketMessage<A> {\n    const { type, payload, id }: { type: string; payload: any; id: string } = JSON.parse(data)\n    return new GraphQLWebSocketMessage(type, f(payload), id)\n  }\n}\n\nexport type SocketHandler = {\n  onInit?: <T>() => Promise<T>\n  onAcknowledged?: <A>(payload?: A) => Promise<void>\n  onPing?: <In, Out>(payload: In) => Promise<Out>\n  onPong?: <T>(payload: T) => any\n  onClose?: () => any\n}\n\nexport type UnsubscribeCallback = () => void\n\nexport interface GraphQLSubscriber<T, E = unknown> {\n  next?(data: T, extensions?: E): void\n  error?(errorValue: ClientError): void\n  complete?(): void\n}\n\ntype SubscriptionRecord = {\n  subscriber: GraphQLSubscriber<unknown, unknown>\n  query: string\n  variables: Variables\n}\n\ntype SocketState = {\n  acknowledged: boolean\n  lastRequestId: number\n  subscriptions: { [key: string]: SubscriptionRecord }\n}\n\nexport class GraphQLWebSocketClient {\n  static PROTOCOL: string = 'graphql-transport-ws'\n\n  private socket: WebSocket\n  private socketState: SocketState = { acknowledged: false, lastRequestId: 0, subscriptions: {} }\n\n  constructor(socket: WebSocket, { onInit, onAcknowledged, onPing, onPong }: SocketHandler) {\n    this.socket = socket\n\n    socket.onopen = async (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n      socket.send(ConnectionInit(onInit ? await onInit() : null).text)\n    }\n\n    socket.onclose = (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n    }\n\n    socket.onerror = (e) => {\n      console.error(e)\n    }\n\n    socket.onmessage = (e) => {\n      try {\n        const message = parseMessage(e.data)\n        switch (message.type) {\n          case CONNECTION_ACK: {\n            if (this.socketState.acknowledged) {\n              console.warn('Duplicate CONNECTION_ACK message ignored')\n            } else {\n              this.socketState.acknowledged = true\n              if (onAcknowledged) onAcknowledged(message.payload)\n            }\n            return\n          }\n          case PING: {\n            if (onPing) onPing(message.payload).then((r) => socket.send(Pong(r).text))\n            else socket.send(Pong(null).text)\n            return\n          }\n          case PONG: {\n            if (onPong) onPong(message.payload)\n            return\n          }\n        }\n\n        if (!this.socketState.acknowledged) {\n          // Web-socket connection not acknowledged\n          return\n        }\n\n        if (message.id === undefined || message.id === null || !this.socketState.subscriptions[message.id]) {\n          // No subscription identifer or subscription indentifier is not found\n          return\n        }\n        const { query, variables, subscriber } = this.socketState.subscriptions[message.id]\n\n        switch (message.type) {\n          case NEXT: {\n            if (!message.payload.errors && message.payload.data) {\n              subscriber.next && subscriber.next(message.payload.data)\n            }\n            if (message.payload.errors) {\n              subscriber.error &&\n                subscriber.error(new ClientError({ ...message.payload, status: 200 }, { query, variables }))\n            } else {\n            }\n            return\n          }\n\n          case ERROR: {\n            subscriber.error &&\n              subscriber.error(\n                new ClientError({ errors: message.payload, status: 200 }, { query, variables })\n              )\n            return\n          }\n\n          case COMPLETE: {\n            subscriber.complete && subscriber.complete()\n            delete this.socketState.subscriptions[message.id]\n            return\n          }\n        }\n      } catch (e) {\n        // Unexpected errors while handling graphql-ws message\n        console.error(e)\n        socket.close(1006)\n      }\n      socket.close(4400, 'Unknown graphql-ws message.')\n    }\n  }\n\n  private makeSubscribe<T, V, E>(\n    query: string,\n    operationName: string | undefined,\n    variables: V,\n    subscriber: GraphQLSubscriber<T, E>\n  ): UnsubscribeCallback {\n    const subscriptionId = (this.socketState.lastRequestId++).toString()\n    this.socketState.subscriptions[subscriptionId] = { query, variables, subscriber }\n    this.socket.send(Subscribe(subscriptionId, { query, operationName, variables }).text)\n    return () => {\n      this.socket.send(Complete(subscriptionId).text)\n      delete this.socketState.subscriptions[subscriptionId]\n    }\n  }\n\n  rawRequest<T = any, V = Variables, E = any>(\n    query: string,\n    variables?: V\n  ): Promise<{ data: T; extensions?: E }> {\n    return new Promise<{ data: T; extensions?: E; headers?: Dom.Headers; status?: number }>(\n      (resolve, reject) => {\n        let result: { data: T; extensions?: E }\n        this.rawSubscribe(\n          query,\n          {\n            next: (data: T, extensions: E) => (result = { data, extensions }),\n            error: reject,\n            complete: () => resolve(result),\n          },\n          variables\n        )\n      }\n    )\n  }\n\n  request<T = any, V = Variables>(document: RequestDocument, variables?: V): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      let result: T\n      this.subscribe(\n        document,\n        {\n          next: (data: T) => (result = data),\n          error: reject,\n          complete: () => resolve(result),\n        },\n        variables\n      )\n    })\n  }\n\n  subscribe<T = any, V = Variables, E = any>(\n    document: RequestDocument,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const { query, operationName } = resolveRequestDocument(document)\n    return this.makeSubscribe(query, operationName, variables, subscriber)\n  }\n\n  rawSubscribe<T = any, V = Variables, E = any>(\n    query: string,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    return this.makeSubscribe(query, undefined, variables, subscriber)\n  }\n\n  ping(payload: Variables) {\n    this.socket.send(Ping(payload).text)\n  }\n\n  close() {\n    this.socket.close(1000)\n  }\n}\n\n// Helper functions\n\nfunction parseMessage<A = any>(data: string, f: (payload: any) => A = (a) => a): GraphQLWebSocketMessage<A> {\n  const m = GraphQLWebSocketMessage.parse<A>(data, f)\n  return m\n}\n\nfunction ConnectionInit<A>(payload?: A) {\n  return new GraphQLWebSocketMessage(CONNECTION_INIT, payload)\n}\n\nfunction Ping(payload: any) {\n  return new GraphQLWebSocketMessage(PING, payload, undefined)\n}\nfunction Pong(payload: any) {\n  return new GraphQLWebSocketMessage(PONG, payload, undefined)\n}\n\nfunction Subscribe(id: string, payload: SubscribePayload) {\n  return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id)\n}\n\nfunction Complete(id: string) {\n  return new GraphQLWebSocketMessage(COMPLETE, undefined, id)\n}\n","import crossFetch, * as CrossFetch from 'cross-fetch'\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport { OperationDefinitionNode, DocumentNode } from 'graphql/language/ast'\n\nimport { parse } from 'graphql/language/parser'\nimport { print } from 'graphql/language/printer'\nimport createRequestBody from './createRequestBody'\nimport { defaultJsonSerializer } from './defaultJsonSerializer'\nimport {\n  parseBatchRequestArgs,\n  parseRawRequestArgs,\n  parseRequestArgs,\n  parseBatchRequestsExtendedArgs,\n  parseRawRequestExtendedArgs,\n  parseRequestExtendedArgs,\n} from './parseArgs'\nimport {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  ClientError,\n  RawRequestOptions,\n  RequestDocument,\n  RequestOptions,\n  BatchRequestsExtendedOptions,\n  RawRequestExtendedOptions,\n  RequestExtendedOptions,\n  Variables,\n  PatchedRequestInit,\n  MaybeFunction,\n  Response,\n  RemoveIndex,\n} from './types'\nimport * as Dom from './types.dom'\n\nexport {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  BatchRequestsExtendedOptions,\n  ClientError,\n  RawRequestOptions,\n  RawRequestExtendedOptions,\n  RequestDocument,\n  RequestOptions,\n  RequestExtendedOptions,\n  Variables,\n}\n\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers: Dom.RequestInit['headers']): Record<string, string> => {\n  let oHeaders: Record<string, string> = {}\n  if (headers) {\n    if (\n      (typeof Headers !== 'undefined' && headers instanceof Headers) ||\n      (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)\n    ) {\n      oHeaders = HeadersInstanceToPlainObject(headers)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(([name, value]) => {\n        oHeaders[name] = value\n      })\n    } else {\n      oHeaders = headers as Record<string, string>\n    }\n  }\n\n  return oHeaders\n}\n\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nconst queryCleanner = (str: string): string => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim()\n\ntype TBuildGetQueryParams<V> =\n  | {\n      query: string\n      variables: V | undefined\n      operationName: string | undefined\n      jsonSerializer: Dom.JsonSerializer\n    }\n  | {\n      query: string[]\n      variables: V[] | undefined\n      operationName: undefined\n      jsonSerializer: Dom.JsonSerializer\n    }\n\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nconst buildGetQueryParams = <V>({\n  query,\n  variables,\n  operationName,\n  jsonSerializer,\n}: TBuildGetQueryParams<V>): string => {\n  if (!Array.isArray(query)) {\n    const search: string[] = [`query=${encodeURIComponent(queryCleanner(query))}`]\n\n    if (variables) {\n      search.push(`variables=${encodeURIComponent(jsonSerializer.stringify(variables))}`)\n    }\n\n    if (operationName) {\n      search.push(`operationName=${encodeURIComponent(operationName)}`)\n    }\n\n    return search.join('&')\n  }\n\n  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n    throw new Error('Cannot create query with given variable type, array expected')\n  }\n\n  // Batch support\n  const payload = query.reduce<{ query: string; variables: string | undefined }[]>(\n    (accu, currentQuery, index) => {\n      accu.push({\n        query: queryCleanner(currentQuery),\n        variables: variables ? jsonSerializer.stringify(variables[index]) : undefined,\n      })\n      return accu\n    },\n    []\n  )\n\n  return `query=${encodeURIComponent(jsonSerializer.stringify(payload))}`\n}\n\n/**\n * Fetch data using POST method\n */\nconst post = async <V = Variables>({\n  url,\n  query,\n  variables,\n  operationName,\n  headers,\n  fetch,\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  fetch: any\n  fetchOptions: Dom.RequestInit\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}) => {\n  const body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer)\n\n  let options: Dom.RequestInit = {\n    method: 'POST',\n    headers: {\n      ...(typeof body === 'string' ? { 'Content-Type': 'application/json' } : {}),\n      ...headers,\n    },\n    body,\n    ...fetchOptions,\n  }\n  if (middleware) {\n    options = await Promise.resolve(middleware(options))\n  }\n  return await fetch(url, options)\n}\n\n/**\n * Fetch data using GET method\n */\nconst get = async <V = Variables>({\n  url,\n  query,\n  variables,\n  operationName,\n  headers,\n  fetch,\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  fetch: any\n  fetchOptions: Dom.RequestInit\n  variables?: V\n  headers?: HeadersInit\n  operationName?: string\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}) => {\n  const queryParams = buildGetQueryParams<V>({\n    query,\n    variables,\n    operationName,\n    jsonSerializer: fetchOptions.jsonSerializer,\n  } as TBuildGetQueryParams<V>)\n\n  let options: Dom.RequestInit = {\n    method: 'GET',\n    headers,\n    ...fetchOptions,\n  }\n  if (middleware) {\n    options = await Promise.resolve(middleware(options))\n  }\n  return await fetch(`${url}?${queryParams}`, options)\n}\n\n/**\n * GraphQL Client.\n */\nexport class GraphQLClient {\n  constructor(private url: string, private readonly options: PatchedRequestInit = {}) {}\n\n  /**\n   * Send a GraphQL query to the server.\n   */\n  async rawRequest<T = any, V = Variables>(\n    query: string,\n    variables?: V,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<Response<T>>\n  async rawRequest<T = any, V = Variables>(options: RawRequestOptions<V>): Promise<Response<T>>\n  async rawRequest<T = any, V = Variables>(\n    queryOrOptions: string | RawRequestOptions<V>,\n    variables?: V,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<Response<T>> {\n    const rawRequestOptions = parseRawRequestArgs<V>(queryOrOptions, variables, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (rawRequestOptions.signal !== undefined) {\n      fetchOptions.signal = rawRequestOptions.signal\n    }\n\n    const { operationName } = resolveRequestDocument(rawRequestOptions.query)\n\n    return makeRequest<T, V>({\n      url,\n      query: rawRequestOptions.query,\n      variables: rawRequestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(rawRequestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send a GraphQL document to the server.\n   */\n  request<T = any, V = Variables>(\n    document: RequestDocument | TypedDocumentNode<T, V>,\n    ..._variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n  ): Promise<T>\n  request<T = any, V = Variables>(options: RequestOptions<V>): Promise<T>\n  request<T = any, V = Variables>(\n    documentOrOptions: RequestDocument | TypedDocumentNode<T, V> | RequestOptions<V>,\n    ...variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n  ): Promise<T> {\n    const [variables, requestHeaders] = variablesAndRequestHeaders\n    const requestOptions = parseRequestArgs<V>(documentOrOptions, variables, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (requestOptions.signal !== undefined) {\n      fetchOptions.signal = requestOptions.signal\n    }\n\n    const { query, operationName } = resolveRequestDocument(requestOptions.document)\n\n    return makeRequest<T, V>({\n      url,\n      query,\n      variables: requestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(requestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send GraphQL documents in batch to the server.\n   */\n  batchRequests<T extends any = any, V = Variables>(\n    documents: BatchRequestDocument<V>[],\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<T>\n  batchRequests<T = any, V = Variables>(options: BatchRequestsOptions<V>): Promise<T>\n  batchRequests<T = any, V = Variables>(\n    documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<T> {\n    const batchRequestOptions = parseBatchRequestArgs<V>(documentsOrOptions, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (batchRequestOptions.signal !== undefined) {\n      fetchOptions.signal = batchRequestOptions.signal\n    }\n\n    const queries = batchRequestOptions.documents.map(\n      ({ document }) => resolveRequestDocument(document).query\n    )\n    const variables = batchRequestOptions.documents.map(({ variables }) => variables)\n\n    return makeRequest<T, (V | undefined)[]>({\n      url,\n      query: queries,\n      variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(batchRequestOptions.requestHeaders),\n      },\n      operationName: undefined,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  setHeaders(headers: Dom.RequestInit['headers']): GraphQLClient {\n    this.options.headers = headers\n    return this\n  }\n\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  setHeader(key: string, value: string): GraphQLClient {\n    const { headers } = this.options\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value\n    } else {\n      this.options.headers = { [key]: value }\n    }\n\n    return this\n  }\n\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  setEndpoint(value: string): GraphQLClient {\n    this.url = value\n    return this\n  }\n}\n\nasync function makeRequest<T = any, V = Variables>({\n  url,\n  query,\n  variables,\n  headers,\n  operationName,\n  fetch,\n  method = 'POST',\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  fetch: any\n  method: string\n  fetchOptions: Dom.RequestInit\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}): Promise<Response<T>> {\n  const fetcher = method.toUpperCase() === 'POST' ? post : get\n  const isBathchingQuery = Array.isArray(query)\n\n  const response = await fetcher({\n    url,\n    query,\n    variables,\n    operationName,\n    headers,\n    fetch,\n    fetchOptions,\n    middleware,\n  })\n  const result = await getResult(response, fetchOptions.jsonSerializer)\n\n  const successfullyReceivedData =\n    isBathchingQuery && Array.isArray(result) ? !result.some(({ data }) => !data) : !!result.data\n\n  const successfullyPassedErrorPolicy =\n    !result.errors || fetchOptions.errorPolicy === 'all' || fetchOptions.errorPolicy === 'ignore'\n\n  if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n    const { headers, status } = response\n\n    const { errors, ...rest } = result\n    const data = fetchOptions.errorPolicy === 'ignore' ? rest : result\n\n    return {\n      ...(isBathchingQuery ? { data } : data),\n      headers,\n      status,\n    }\n  } else {\n    const errorResult = typeof result === 'string' ? { error: result } : result\n    throw new ClientError(\n      { ...errorResult, status: response.status, headers: response.headers },\n      { query, variables }\n    )\n  }\n}\n\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport async function rawRequest<T = any, V = Variables>(\n  url: string,\n  query: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<Response<T>>\nexport async function rawRequest<T = any, V = Variables>(\n  options: RawRequestExtendedOptions<V>\n): Promise<Response<T>>\nexport async function rawRequest<T = any, V = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<Response<T>> {\n  const requestOptions = parseRawRequestExtendedArgs<V>(urlOrOptions, query, variables, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.rawRequest<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nexport async function request<T = any, V = Variables>(\n  url: string,\n  document: RequestDocument | TypedDocumentNode<T, V>,\n  ..._variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n): Promise<T>\nexport async function request<T = any, V = Variables>(options: RequestExtendedOptions<V, T>): Promise<T>\nexport async function request<T = any, V = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V, T>,\n  document?: RequestDocument | TypedDocumentNode<T, V>,\n  ...variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n): Promise<T> {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  const requestOptions = parseRequestExtendedArgs<V>(urlOrOptions, document, variables, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.request<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nexport async function batchRequests<T = any, V = Variables>(\n  url: string,\n  documents: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<T>\nexport async function batchRequests<T = any, V = Variables>(\n  options: BatchRequestsExtendedOptions<V>\n): Promise<T>\nexport async function batchRequests<T = any, V = Variables>(\n  urlOrOptions: string | BatchRequestsExtendedOptions<V>,\n  documents?: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<T> {\n  const requestOptions = parseBatchRequestsExtendedArgs<V>(urlOrOptions, documents, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.batchRequests<T, V>({ ...requestOptions })\n}\n\nexport default request\n\n/**\n * todo\n */\nasync function getResult(response: Dom.Response, jsonSerializer = defaultJsonSerializer): Promise<any> {\n  let contentType: string | undefined\n\n  response.headers.forEach((value, key) => {\n    if (key.toLowerCase() === 'content-type') {\n      contentType = value\n    }\n  })\n\n  if (contentType && contentType.toLowerCase().startsWith('application/json')) {\n    return jsonSerializer.parse(await response.text())\n  } else {\n    return response.text()\n  }\n}\n/**\n * helpers\n */\n\nfunction extractOperationName(document: DocumentNode): string | undefined {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0].name?.value\n  }\n\n  return operationName\n}\n\nexport function resolveRequestDocument(document: RequestDocument): { query: string; operationName?: string } {\n  if (typeof document === 'string') {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n\nfunction callOrIdentity<T>(value: MaybeFunction<T>) {\n  return typeof value === 'function' ? (value as () => T)() : value\n}\n\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport function gql(chunks: TemplateStringsArray, ...variables: any[]): string {\n  return chunks.reduce(\n    (accumulator, chunk, index) => `${accumulator}${chunk}${index in variables ? variables[index] : ''}`,\n    ''\n  )\n}\n\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers: Dom.Response['headers']): Record<string, string> {\n  const o: any = {}\n  headers.forEach((v, k) => {\n    o[k] = v\n  })\n  return o\n}\n\nexport { GraphQLWebSocketClient } from './graphql-ws'\n","import {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestOptions,\n  BatchRequestsExtendedOptions,\n  RawRequestExtendedOptions,\n  RequestExtendedOptions,\n  Variables,\n} from './types'\nimport * as Dom from './types.dom'\n\nexport function parseRequestArgs<V = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestOptions<V> {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n        document: documentOrOptions as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestOptions<V>)\n}\n\nexport function parseRawRequestArgs<V = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestOptions<V> {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : {\n        query: queryOrOptions as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestArgs<V = Variables>(\n  documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsOptions<V> {\n  return (documentsOrOptions as BatchRequestsOptions<V>).documents\n    ? (documentsOrOptions as BatchRequestsOptions<V>)\n    : {\n        documents: documentsOrOptions as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestExtendedOptions<V> {\n  return (urlOrOptions as RequestExtendedOptions<V>).document\n    ? (urlOrOptions as RequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        document: document as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestExtendedOptions<V>)\n}\n\nexport function parseRawRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestExtendedOptions<V> {\n  return (urlOrOptions as RawRequestExtendedOptions<V>).query\n    ? (urlOrOptions as RawRequestExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        query: query as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestsExtendedArgs<V = Variables>(\n  urlOrOptions: string | BatchRequestsExtendedOptions<V>,\n  documents?: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsExtendedOptions<V> {\n  return (urlOrOptions as BatchRequestsExtendedOptions<V>).documents\n    ? (urlOrOptions as BatchRequestsExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        documents: documents as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n","import { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport { DocumentNode } from 'graphql/language/ast'\nimport type { GraphQLError } from 'graphql/error/GraphQLError'\nimport * as Dom from './types.dom'\n\nexport type { GraphQLError }\n\nexport type Variables = { [key: string]: any }\n\nexport type RemoveIndex<T> = {\n  [K in keyof T as string extends K ? never : number extends K ? never : K]: T[K]\n}\n\nexport interface GraphQLResponse<T = any> {\n  data?: T\n  errors?: GraphQLError[]\n  extensions?: any\n  status: number\n  [key: string]: any\n}\n\nexport interface GraphQLRequestContext<V = Variables> {\n  query: string | string[]\n  variables?: V\n}\n\nexport class ClientError extends Error {\n  response: GraphQLResponse\n  request: GraphQLRequestContext\n\n  constructor(response: GraphQLResponse, request: GraphQLRequestContext) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request,\n    })}`\n\n    super(message)\n\n    Object.setPrototypeOf(this, ClientError.prototype)\n\n    this.response = response\n    this.request = request\n\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ClientError)\n    }\n  }\n\n  private static extractMessage(response: GraphQLResponse): string {\n    try {\n      return response.errors![0].message\n    } catch (e) {\n      return `GraphQL Error (Code: ${response.status})`\n    }\n  }\n}\n\nexport type MaybeFunction<T> = T | (() => T)\n\nexport type RequestDocument = string | DocumentNode\n\nexport interface Response<T> {\n  data: T\n  extensions?: any\n  headers: Dom.Headers\n  errors?: GraphQLError[]\n  status: number\n}\n\nexport type PatchedRequestInit = Omit<Dom.RequestInit, 'headers'> & {\n  headers?: MaybeFunction<Dom.RequestInit['headers']>\n  requestMiddleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n  responseMiddleware?: (response: Response<unknown> | Error) => void\n}\n\nexport type BatchRequestDocument<V = Variables> = {\n  document: RequestDocument\n  variables?: V\n}\n\nexport type RawRequestOptions<V = Variables> = {\n  query: string\n  variables?: V\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n}\n\nexport type RequestOptions<V = Variables, T = any> = {\n  document: RequestDocument | TypedDocumentNode<T, V>\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport type BatchRequestsOptions<V = Variables> = {\n  documents: BatchRequestDocument<V>[]\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n}\n\nexport type RequestExtendedOptions<V = Variables, T = any> = { url: string } & RequestOptions<V, T>\n\nexport type RawRequestExtendedOptions<V = Variables> = { url: string } & RawRequestOptions<V>\n\nexport type BatchRequestsExtendedOptions<V = Variables> = { url: string } & BatchRequestsOptions<V>\n","'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n","'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n","'use strict';\n\nexports.ReactNativeFile = require('./ReactNativeFile');\nexports.extractFiles = require('./extractFiles');\nexports.isExtractableFile = require('./isExtractableFile');\n","'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","\"use strict\";\n/**\n * Copyright (c) 2018 hl2, https://hl2.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst long_1 = __importDefault(require(\"long\"));\nconst leapSeconds_1 = require(\"./leapSeconds\");\nclass TAI64 {\n    /**\n     * Construct an instance of TAI64.\n     *\n     * @param label - The TAI64 label between 0 and 2^63-1, inclusive\n     * @returns An instance of TAI64\n     * @throws RangeError if the given label is not between 0 and 2^63-1, inclusive\n     */\n    constructor(label) {\n        this.label = label;\n        if (label.lt(long_1.default.ZERO) || label.gte(long_1.default.MAX_VALUE)) {\n            throw new RangeError(\"Label must be an integer between 0 and 2^63-1, inclusive\");\n        }\n    }\n    /**\n     * Return a TAI64 the current number of seconds elapsed since 1970 TAI.\n     *\n     * @returns An instance of TAI64\n     */\n    static now() {\n        const unixTimestamp = Math.floor(Date.now() / 1000);\n        return TAI64.fromUnix(unixTimestamp);\n    }\n    /**\n     * Return a TAI64 corresponding to the given UNIX timestamp.\n     *\n     * @param timestamp - The UNIX timestamp in seconds\n     * @returns An instance of TAI64\n     */\n    static fromUnix(timestamp) {\n        const seconds = leapSeconds_1.addLeapSeconds(timestamp);\n        const label = TAI64.EPOCH.label.add(seconds);\n        return new TAI64(label);\n    }\n    /**\n     * Return a TAI64 corresponding to the given hexadecimal string representing a TAI64. This method\n     * is an alias for `TAI64#fromString()` method.\n     *\n     * @param hexString - The hexadecimal string\n     * @returns An instance of TAI64\n     */\n    static fromHexString(hexString) {\n        return TAI64.fromString(hexString);\n    }\n    /**\n     * Return a TAI64 corresponding to the given string representing a TAI64 in the given radix.\n     *\n     * @param str - The string\n     * @param radix - An integer that represents the radix (the base in mathematical numeral systems), defaults to `16`\n     * @returns An instance of TAI64\n     */\n    static fromString(str, radix = 16) {\n        const label = long_1.default.fromString(str, false, radix);\n        return new TAI64(label);\n    }\n    /**\n     * Return a TAI64 corresponding to the given byte array representing a TAI64.\n     *\n     * @param bytes - The byte array\n     * @returns An instance of TAI64\n     */\n    static fromByteArray(bytes) {\n        const label = long_1.default.fromBytes(bytes, false);\n        return new TAI64(label);\n    }\n    /**\n     * Return if this TAI64 is after the given TAI64.\n     *\n     * @param other - The other TAI64 to compare\n     * @returns `true` if this TAI64 is after the given TAI64, `false` otherwise\n     */\n    isAfter(other) {\n        return this.compareTo(other) > 0;\n    }\n    /**\n     * Return if this TAI64 is before the given TAI64.\n     *\n     * @param other - The other TAI64 to compare\n     * @returns `true` if this TAI64 is before the given TAI64,\u001b `false` otherwise\n     */\n    isBefore(other) {\n        return this.compareTo(other) < 0;\n    }\n    /**\n     * Return if this TAI64 is equal to the given TAI64.\n     *\n     * @param other - The other TAI64 to compare\n     * @returns `true` if this TAI64 is equal to the given TAI64,\u001b `false` otherwise\n     */\n    isEqual(other) {\n        return this.compareTo(other) === 0;\n    }\n    /**\n     * Compare this TAI64 to the given TAI64.\n     *\n     * @param other - The other TAI64 to compare\n     * @returns\n     * - `1` if this TAI64 is before the given TAI64\n     * - `-1` if this TAI64 is before the given TAI64\n     * - `0` if this TAI64 is equal to the given TAI64\n     */\n    compareTo(other) {\n        return this.label.compare(other.label);\n    }\n    /**\n     * Return a byte array representation of this TAI64.\n     */\n    toByteArray() {\n        return this.label.toBytes();\n    }\n    /**\n     * Return an hexadecimal string representation of this TAI64. This method\n     * is an alias for `TAI64#toString()` method.\n     */\n    toHexString() {\n        return this.toString();\n    }\n    /**\n     * Return a string representation of this TAI64.\n     *\n     * @param radix - An integer that represents the radix (the base in mathematical numeral systems), defaults to `16`\n     */\n    toString(radix = 16) {\n        return this.label.toString(radix);\n    }\n    /**\n     * Return a UNIX timestamp corresponding to this TAI64.\n     */\n    toUnix() {\n        const elapsedSeconds = this.label.sub(TAI64.EPOCH.label);\n        return leapSeconds_1.removeLeapSeconds(elapsedSeconds.toNumber());\n    }\n}\n/**\n * Instance of TAI64 representing the second that began 1970 TAI.\n */\nTAI64.EPOCH = new TAI64(long_1.default.MAX_VALUE.shiftRight(1).add(1));\nexports.TAI64 = TAI64;\n","\"use strict\";\n/**\n * Copyright (c) 2018 hl2, https://hl2.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TAI64_1 = require(\"./TAI64\");\nexports.TAI64 = TAI64_1.TAI64;\n","\"use strict\";\n/**\n * Copyright (c) 2018 hl2, https://hl2.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * See https://www.ietf.org/timezones/data/leap-seconds.list.\n *\n * The NTP timestamps are in units of seconds since the NTP epoch, which is 1 January 1900, 00:00:00. The UNIX timestamp\n * corresponding to the NTP timestamp X can be computed with the following formula:\n *\n * X - 2208988800\n *\n * The number 2208988800 represents the NTP timestamp for the UNIX epoch, which is 1 January 1970, 00:00:00, computed with\n * the following formula (70 * 365 + 17) * 86400.\n */\nconst leapSeconds = [\n    [1483228800, 37],\n    [1435708800, 36],\n    [1341100800, 35],\n    [1230768000, 34],\n    [1136073600, 33],\n    [915148800, 32],\n    [867715200, 31],\n    [820454400, 30],\n    [773020800, 29],\n    [741484800, 28],\n    [709948800, 27],\n    [662688000, 26],\n    [631152000, 25],\n    [567993600, 24],\n    [489024000, 23],\n    [425865600, 22],\n    [394329600, 21],\n    [362793600, 20],\n    [315532800, 19],\n    [283996800, 18],\n    [252460800, 17],\n    [220924800, 16],\n    [189302400, 15],\n    [157766400, 14],\n    [126230400, 13],\n    [94694400, 12],\n    [78796800, 11],\n    [63072000, 10],\n];\n/**\n * Add leap seconds to the given UNIX timestamp.\n *\n * @param timestamp - The UNIX timestamp in seconds\n * @returns a timestamp with leap seconds added\n */\nconst addLeapSeconds = (timestamp) => {\n    const leapSecond = leapSeconds.find(([ts]) => timestamp >= ts);\n    return timestamp + (leapSecond ? leapSecond[1] : 0);\n};\nexports.addLeapSeconds = addLeapSeconds;\n/**\n * Remove leap seconds from the given timestamp including the leap seconds.\n *\n * @param timestamp - The timestamp in seconds including leap seconds\n * @returns the corresponding UNIX timestamp\n */\nconst removeLeapSeconds = (timestamp) => {\n    const leapSecond = leapSeconds.find(([ts, offset]) => timestamp - offset >= ts);\n    return timestamp - (leapSecond ? leapSecond[1] : 0);\n};\nexports.removeLeapSeconds = removeLeapSeconds;\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateMethodInitSpec(obj, privateSet) {\n  checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n  return fn;\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}","import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n  var _super = RegExp.prototype,\n    _groups = new WeakMap();\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      var i = g[name];\n      if (\"number\" == typeof i) groups[name] = result[i];else {\n        for (var k = 0; void 0 === result[i[k]] && k + 1 < i.length;) {\n          k++;\n        }\n        groups[name] = result[i[k]];\n      }\n      return groups;\n    }, Object.create(null));\n  }\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) {\n      result.groups = buildGroups(result, this);\n      var indices = result.indices;\n      indices && (indices.groups = buildGroups(indices, this));\n    }\n    return result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        var group = groups[name];\n        return \"$\" + (Array.isArray(group) ? group.join(\"$\") : group);\n      }));\n    }\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.48.1',\n    FUEL_CORE: '0.22.0',\n    FUELS: '0.71.0',\n  };\n}\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any implicit properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\" | \"shortMessage\"> & { shortMessage?: string };\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplify programmatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  A short message describing the error, with minimal additional\n     *  details.\n     */\n    shortMessage: string;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specific JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a problem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpreted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    let shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") { continue; }\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<EthersError>(<EthersError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.9.2\";\n","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import type { BytesLike } from 'ethers';\nimport { getBytesCopy } from 'ethers';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => getBytesCopy(v));\n\n  return concatBytes(bytes);\n};\n","import semver from 'semver';\n\nimport { getBuiltinVersions } from './getBuiltinVersions';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  const networkMajor = semver.major(networkVersion);\n  const networkMinor = semver.minor(networkVersion);\n  const networkPatch = semver.patch(networkVersion);\n\n  const supportedMajor = semver.major(supportedVersion);\n  const supportedMinor = semver.minor(supportedVersion);\n  const supportedPatch = semver.patch(supportedVersion);\n\n  return {\n    supportedVersion,\n    isMajorSupported: networkMajor === supportedMajor,\n    isMinorSupported: networkMinor === supportedMinor,\n    isPatchSupported: networkPatch === supportedPatch,\n  };\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport BnJs from 'bn.js';\n\nimport { DECIMAL_UNITS, DEFAULT_MIN_PRECISION, DEFAULT_PRECISION } from './configs';\nimport { toFixed } from './decimal';\nimport type { FormatConfig } from './types';\n\ntype CompareResult = -1 | 0 | 1;\nexport type BNInput = number | string | number[] | Uint8Array | Buffer | BnJs;\n\ninterface BNHelper {\n  caller(v: BNInput, methodName: string): BN | boolean | CompareResult;\n  toHex: (bytesPadding?: number) => string;\n  toBytes: (bytesPadding?: number) => Uint8Array;\n  toJSON: () => string;\n}\ninterface BNInputOverrides {\n  add: (v: BNInput) => BN;\n  pow: (v: BNInput) => BN;\n  sub: (v: BNInput) => BN;\n  div: (v: BNInput) => BN;\n  mul: (v: BNInput) => BN;\n  mod: (v: BNInput) => BN;\n  divRound: (v: BNInput) => BN;\n  lt: (v: BNInput) => boolean;\n  lte: (v: BNInput) => boolean;\n  gt: (v: BNInput) => boolean;\n  gte: (v: BNInput) => boolean;\n  eq: (v: BNInput) => boolean;\n  cmp: (v: BNInput) => CompareResult;\n}\ninterface BNOverrides {\n  sqr: () => BN;\n  neg: () => BN;\n  abs: () => BN;\n  toTwos: (width: number) => BN;\n  fromTwos: (width: number) => BN;\n}\ninterface BNHiddenTypes {\n  mulTo: (num: BN, out: BN) => BN;\n  divmod: (num: BNInput, mode?: string, positive?: boolean) => { mod: BN; div: BN };\n}\ntype BNInputOverridesKeys = keyof BNInputOverrides;\n\nexport class BN extends BnJs implements BNInputOverrides, BNHiddenTypes, BNHelper, BNOverrides {\n  MAX_U64 = '0xFFFFFFFFFFFFFFFF';\n\n  constructor(value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) {\n    if (BN.isBN(value)) {\n      super(value.toArray(), base, endian);\n      return;\n    }\n    // trim '0x' from hex strings as BN doesn't support it - https://github.com/ChainSafe/web3.js/issues/3847\n    if (typeof value === 'string' && value.slice(0, 2) === '0x') {\n      super(value.substring(2), base || 'hex', endian);\n      return;\n    }\n    const defaultValue = value == null ? 0 : value;\n    super(defaultValue, base, endian);\n  }\n\n  // ANCHOR: HELPERS\n  // make sure we always include `0x` in hex strings\n  toString(base?: number | 'hex', length?: number) {\n    const output = super.toString(base, length);\n\n    if (base === 16 || base === 'hex') {\n      return `0x${output}`;\n    }\n\n    return output;\n  }\n\n  toHex(bytesPadding?: number): string {\n    const bytes = bytesPadding || 0;\n    const bytesLength = bytes * 2;\n\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to hex.');\n    }\n    if (bytesPadding && this.byteLength() > bytesPadding) {\n      throw new FuelError(\n        ErrorCode.CONVERTING_FAILED,\n        `Provided value ${this} is too large. It should fit within ${bytesPadding} bytes.`\n      );\n    }\n\n    return this.toString(16, bytesLength);\n  }\n\n  toBytes(bytesPadding?: number): Uint8Array {\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to bytes.');\n    }\n\n    return Uint8Array.from(this.toArray(undefined, bytesPadding));\n  }\n\n  toJSON(): string {\n    return this.toString(16);\n  }\n\n  valueOf(): string {\n    return this.toString();\n  }\n\n  format(options?: FormatConfig): string {\n    const {\n      units = DECIMAL_UNITS,\n      precision = DEFAULT_PRECISION,\n      minPrecision = DEFAULT_MIN_PRECISION,\n    } = options || {};\n\n    const formattedUnits = this.formatUnits(units);\n    const formattedFixed = toFixed(formattedUnits, { precision, minPrecision });\n\n    // increase precision if formatted is zero, but has more numbers out of precision\n    if (!parseFloat(formattedFixed)) {\n      const [, originalDecimals = '0'] = formattedUnits.split('.');\n      const firstNonZero = originalDecimals.match(/[1-9]/);\n\n      if (firstNonZero && firstNonZero.index && firstNonZero.index + 1 > precision) {\n        const [valueUnits = '0'] = formattedFixed.split('.');\n        return `${valueUnits}.${originalDecimals.slice(0, firstNonZero.index + 1)}`;\n      }\n    }\n\n    return formattedFixed;\n  }\n\n  formatUnits(units: number = DECIMAL_UNITS): string {\n    const valueUnits = this.toString().slice(0, units * -1);\n    const valueDecimals = this.toString().slice(units * -1);\n    const length = valueDecimals.length;\n    const defaultDecimals = Array.from({ length: units - length })\n      .fill('0')\n      .join('');\n    const integerPortion = valueUnits ? `${valueUnits}.` : '0.';\n\n    return `${integerPortion}${defaultDecimals}${valueDecimals}`;\n  }\n  // END ANCHOR: HELPERS\n\n  // ANCHOR: OVERRIDES to accept better inputs\n  add(v: BNInput): BN {\n    return this.caller(v, 'add') as BN;\n  }\n\n  pow(v: BNInput): BN {\n    return this.caller(v, 'pow') as BN;\n  }\n\n  sub(v: BNInput): BN {\n    return this.caller(v, 'sub') as BN;\n  }\n\n  div(v: BNInput): BN {\n    return this.caller(v, 'div') as BN;\n  }\n\n  mul(v: BNInput): BN {\n    return this.caller(v, 'mul') as BN;\n  }\n\n  mod(v: BNInput): BN {\n    return this.caller(v, 'mod') as BN;\n  }\n\n  divRound(v: BNInput): BN {\n    return this.caller(v, 'divRound') as BN;\n  }\n\n  lt(v: BNInput): boolean {\n    return this.caller(v, 'lt') as boolean;\n  }\n\n  lte(v: BNInput): boolean {\n    return this.caller(v, 'lte') as boolean;\n  }\n\n  gt(v: BNInput): boolean {\n    return this.caller(v, 'gt') as boolean;\n  }\n\n  gte(v: BNInput): boolean {\n    return this.caller(v, 'gte') as boolean;\n  }\n\n  eq(v: BNInput): boolean {\n    return this.caller(v, 'eq') as boolean;\n  }\n\n  cmp(v: BNInput): CompareResult {\n    return this.caller(v, 'cmp') as CompareResult;\n  }\n  // END ANCHOR: OVERRIDES to accept better inputs\n\n  // ANCHOR: OVERRIDES to output our BN type\n  sqr(): BN {\n    return new BN(super.sqr().toArray());\n  }\n\n  neg(): BN {\n    return new BN(super.neg().toArray());\n  }\n\n  abs(): BN {\n    return new BN(super.abs().toArray());\n  }\n\n  toTwos(width: number): BN {\n    return new BN(super.toTwos(width).toArray());\n  }\n\n  fromTwos(width: number): BN {\n    return new BN(super.fromTwos(width).toArray());\n  }\n  // END ANCHOR: OVERRIDES to output our BN type\n\n  // ANCHOR: OVERRIDES to avoid losing references\n  caller(v: BNInput, methodName: BNInputOverridesKeys): BN | boolean | CompareResult {\n    const output = super[methodName](new BN(v));\n\n    if (BN.isBN(output)) {\n      return new BN(output.toArray());\n    }\n\n    if (typeof output === 'boolean') {\n      return output as boolean;\n    }\n\n    return output as CompareResult;\n  }\n\n  clone() {\n    return new BN(this.toArray());\n  }\n\n  mulTo(num: BN, out: BN) {\n    const output: BnJs = (new BnJs(this.toArray()) as BN).mulTo(num, out);\n\n    return new BN(output.toArray());\n  }\n\n  egcd(p: BnJs) {\n    const { a, b, gcd } = new BnJs(this.toArray()).egcd(p);\n\n    return {\n      a: new BN(a.toArray()),\n      b: new BN(b.toArray()),\n      gcd: new BN(gcd.toArray()),\n    };\n  }\n\n  divmod(num: BNInput, mode?: string, positive?: boolean): { mod: BN; div: BN } {\n    const { div, mod } = (new BnJs(this.toArray()) as BN).divmod(new BN(num), mode, positive);\n\n    return {\n      div: new BN(div?.toArray()),\n      mod: new BN(mod?.toArray()),\n    };\n  }\n\n  maxU64(): BN {\n    return this.gte(this.MAX_U64) ? new BN(this.MAX_U64) : this;\n  }\n\n  normalizeZeroToOne(): BN {\n    return this.isZero() ? new BN(1) : this;\n  }\n  // END ANCHOR: OVERRIDES to avoid losing references\n}\n\n// functional shortcut to create BN\nexport const bn = (value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) =>\n  new BN(value, base, endian);\n\nbn.parseUnits = (value: string, units: number = DECIMAL_UNITS): BN => {\n  const valueToParse = value === '.' ? '0.' : value;\n  const [valueUnits = '0', valueDecimals = '0'] = valueToParse.split('.');\n  const length = valueDecimals.length;\n\n  if (length > units) {\n    throw new FuelError(\n      ErrorCode.CONVERTING_FAILED,\n      `Decimal can't have more than ${units} digits.`\n    );\n  }\n\n  const decimals = Array.from({ length: units }).fill('0');\n  decimals.splice(0, length, valueDecimals);\n  const amount = `${valueUnits.replaceAll(',', '')}${decimals.join('')}`;\n  return bn(amount);\n};\n","export const DEFAULT_PRECISION = 9;\nexport const DEFAULT_MIN_PRECISION = 3;\nexport const DECIMAL_UNITS = 9;\n","import { DEFAULT_PRECISION, DEFAULT_MIN_PRECISION } from './configs';\nimport type { ToFixedConfig } from './types';\n\nexport function toFixed(value?: string | number, options?: ToFixedConfig) {\n  const { precision = DEFAULT_PRECISION, minPrecision = DEFAULT_MIN_PRECISION } = options || {};\n\n  const [valueUnits = '0', valueDecimals = '0'] = String(value || '0.0').split('.');\n  const groupRegex = /(\\d)(?=(\\d{3})+\\b)/g;\n  const units = valueUnits.replace(groupRegex, '$1,');\n  let decimals = valueDecimals.slice(0, precision);\n\n  // strip traling zeros limited by minPrecision\n  if (minPrecision < precision) {\n    const trimmedDecimal = decimals.match(/.*[1-9]{1}/);\n    const lastNonZeroIndex = trimmedDecimal?.[0].length || 0;\n    const keepChars = Math.max(minPrecision, lastNonZeroIndex);\n    decimals = decimals.slice(0, keepChars);\n  }\n\n  const decimalPortion = decimals ? `.${decimals}` : '';\n  return `${units}${decimalPortion}`;\n}\n","import type { BNInput } from './bn';\nimport { bn } from './bn';\nimport type { FormatConfig } from './types';\n\n/**\n * Functional shortcuts\n */\n\n// Shortcut to bn(value).toNumber\nexport function toNumber(value: BNInput): number {\n  return bn(value).toNumber();\n}\n\n// Shortcut to bn(value).toHex\nexport function toHex(value: BNInput, bytesPadding?: number): string {\n  return bn(value).toHex(bytesPadding);\n}\n\n// Shortcut to bn(value).toBytes\nexport function toBytes(value: BNInput, bytesPadding?: number): Uint8Array {\n  return bn(value).toBytes(bytesPadding);\n}\n\n// Shortcut to bn.(value).formatUnits\nexport function formatUnits(value: BNInput, units?: number): string {\n  return bn(value).formatUnits(units);\n}\n\n// Shortcut to bn.(value).format\nexport function format(value: BNInput, options?: FormatConfig): string {\n  return bn(value).format(options);\n}\n","import type { BN } from './bn';\nimport { bn } from './bn';\nimport type { BigNumberish } from './types';\n\nexport function max(...numbers: Array<BigNumberish>): BN {\n  return numbers.reduce<BN>((prev, cur) => (bn(cur).gt(prev) ? bn(cur) : prev), bn(0));\n}\n\nexport function multiply(...numbers: Array<BigNumberish>): BN {\n  return bn(Math.ceil(numbers.reduce<BN>((a, b) => bn(a).mul(b), bn(1)).toNumber()));\n}\n","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import assert from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assert.number(N);\n  assert.number(r);\n  assert.number(p);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  assert.number(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, (i) => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, (i) => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n","import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import { keccak_224, keccak_256, keccak_384, keccak_512 } from \"@noble/hashes/sha3\";\nimport { wrapHash } from \"./utils.js\";\nexport const keccak224 = wrapHash(keccak_224);\nexport const keccak256 = (() => {\n    const k = wrapHash(keccak_256);\n    k.create = keccak_256.create;\n    return k;\n})();\nexport const keccak384 = wrapHash(keccak_384);\nexport const keccak512 = wrapHash(keccak_512);\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/* Browser Crypto Shims */\n\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\n\nimport { assert, assertArgument } from \"../utils/index.js\";\n\n\ndeclare global {\n    interface Window { }\n\n    const window: Window;\n    const self: Window;\n}\n\n\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\nconst crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\n\n\nexport interface CryptoHasher {\n    update(data: Uint8Array): CryptoHasher;\n    digest(): Uint8Array;\n}\n\nexport function createHash(algo: string): CryptoHasher {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\n\nexport function createHmac(_algo: string, key: Uint8Array): CryptoHasher {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\n\nexport function pbkdf2Sync(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, _algo: \"sha256\" | \"sha512\"): Uint8Array {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\" });\n\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n","import { scryptSync as ethCryScrypt } from 'ethereum-cryptography/scrypt';\n\nimport type { IScryptParams } from '../types';\n\nexport const scrypt = (params: IScryptParams): Uint8Array => {\n  const { password, salt, n, p, r, dklen } = params;\n\n  const derivedKey = ethCryScrypt(password, salt, n, r, p, dklen);\n\n  return derivedKey;\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nexport const bufferFromString: CryptoApi['bufferFromString'] = (\n  string: string,\n  encoding: Encoding = 'base64'\n): Uint8Array => {\n  switch (encoding) {\n    case 'utf-8': {\n      return new TextEncoder().encode(string);\n    }\n\n    case 'base64': {\n      const binaryString = atob(string);\n      const len = binaryString.length;\n      const bytes = new Uint8Array(len).map((_, i) => binaryString.charCodeAt(i));\n\n      return bytes;\n    }\n\n    case 'hex':\n    default: {\n      const bufferLength = string.length / 2;\n\n      const buffer = new Uint8Array(bufferLength).map((_, i) => {\n        const startIndex = i * 2;\n        const byteValue = parseInt(string.substring(startIndex, startIndex + 2), 16);\n        return byteValue;\n      });\n\n      return buffer;\n    }\n  }\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nconst { crypto, btoa } = globalThis;\n\nif (!crypto) {\n  throw new FuelError(\n    ErrorCode.ENV_DEPENDENCY_MISSING,\n    `Could not find 'crypto' in current browser environment.`\n  );\n}\n\nif (!btoa) {\n  throw new FuelError(\n    ErrorCode.ENV_DEPENDENCY_MISSING,\n    `Could not find 'btoa' in current browser environment.`\n  );\n}\n\nexport { crypto, btoa };\n","import type { CryptoApi } from '../types';\n\nimport { crypto } from './crypto';\n\nexport const randomBytes: CryptoApi['randomBytes'] = (length: number): Uint8Array => {\n  const randomValues = crypto.getRandomValues(new Uint8Array(length));\n  return randomValues;\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nimport { btoa } from './crypto';\n\nexport const stringFromBuffer: CryptoApi['stringFromBuffer'] = (\n  buffer: Uint8Array,\n  encoding: Encoding = 'base64'\n): string => {\n  switch (encoding) {\n    case 'utf-8': {\n      return new TextDecoder().decode(buffer);\n    }\n    case 'base64': {\n      const binary = String.fromCharCode.apply(null, new Uint8Array(buffer) as unknown as number[]);\n      return btoa(binary);\n    }\n\n    case 'hex':\n    default: {\n      let hexString = '';\n      for (let i = 0; i < buffer.length; i += 1) {\n        const hex = buffer[i].toString(16);\n        hexString += hex.length === 1 ? `0${hex}` : hex;\n      }\n      return hexString;\n    }\n  }\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { getBytesCopy, pbkdf2 } from 'ethers';\n\nimport type { CryptoApi, Keystore } from '../types';\n\nimport { bufferFromString } from './bufferFromString';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst ALGORITHM = 'AES-CTR';\n\n/**\n * Generate a pbkdf2 key from a password and random salt\n */\nexport const keyFromPassword: CryptoApi['keyFromPassword'] = (\n  password: string,\n  saltBuffer: Uint8Array\n): Uint8Array => {\n  const passBuffer = bufferFromString(String(password).normalize('NFKC'), 'utf-8');\n  const key = pbkdf2(passBuffer, saltBuffer, 100000, 32, 'sha256');\n\n  return getBytesCopy(key);\n};\n\n/**\n * Encrypts a data object that can be any serializable value using\n * a provided password.\n *\n * @returns Promise<Keystore> object\n */\nexport const encrypt: CryptoApi['encrypt'] = async <T>(\n  password: string,\n  data: T\n): Promise<Keystore> => {\n  const iv = randomBytes(16);\n  const salt = randomBytes(32);\n  const secret = keyFromPassword(password, salt);\n  const dataString = JSON.stringify(data);\n  const dataBuffer = bufferFromString(dataString, 'utf-8');\n  const alg = {\n    name: ALGORITHM,\n    counter: iv,\n    length: 64,\n  };\n  const key = await crypto.subtle.importKey('raw', secret, alg, false, ['encrypt']);\n  const encBuffer = await crypto.subtle.encrypt(alg, key, dataBuffer);\n\n  return {\n    data: stringFromBuffer(encBuffer),\n    iv: stringFromBuffer(iv),\n    salt: stringFromBuffer(salt),\n  };\n};\n\n/**\n * Given a password and a keystore object, decrypts the text and returns\n * the resulting value\n */\nexport const decrypt: CryptoApi['decrypt'] = async <T>(\n  password: string,\n  keystore: Keystore\n): Promise<T> => {\n  const iv = bufferFromString(keystore.iv);\n  const salt = bufferFromString(keystore.salt);\n  const secret = keyFromPassword(password, salt);\n  const encryptedText = bufferFromString(keystore.data);\n\n  const alg = {\n    name: ALGORITHM,\n    counter: iv,\n    length: 64,\n  };\n  const key = await crypto.subtle.importKey('raw', secret, alg, false, ['decrypt']);\n\n  const ptBuffer = await crypto.subtle.decrypt(alg, key, encryptedText);\n  const decryptedData = new TextDecoder().decode(ptBuffer);\n\n  try {\n    return JSON.parse(decryptedData);\n  } catch {\n    throw new FuelError(ErrorCode.INVALID_CREDENTIALS, 'Invalid credentials.');\n  }\n};\n","import type { CryptoApi } from '../types';\n\nimport { crypto } from './crypto';\n\nexport const encryptJsonWalletData: CryptoApi['encryptJsonWalletData'] = async (\n  data: Uint8Array,\n  key: Uint8Array,\n  iv: Uint8Array\n): Promise<Uint8Array> => {\n  const subtle = crypto.subtle;\n  const keyBuffer = new Uint8Array(key.subarray(0, 16));\n  const ivBuffer = iv;\n  const dataBuffer = data;\n\n  const cryptoKey = await subtle.importKey(\n    'raw',\n    keyBuffer,\n    { name: 'AES-CTR', length: 128 },\n    false,\n    ['encrypt', 'decrypt']\n  );\n\n  const encrypted = (await subtle.encrypt(\n    { name: 'AES-CTR', counter: ivBuffer, length: 128 },\n    cryptoKey,\n    dataBuffer\n  )) as ArrayBuffer;\n\n  return new Uint8Array(encrypted);\n};\n\nexport const decryptJsonWalletData: CryptoApi['decryptJsonWalletData'] = async (\n  data: Uint8Array,\n  key: Uint8Array,\n  iv: Uint8Array\n): Promise<Uint8Array> => {\n  const subtle = crypto.subtle;\n  const keyBuffer = new Uint8Array(key.subarray(0, 16)).buffer;\n  const ivBuffer = new Uint8Array(iv).buffer;\n  const dataBuffer = new Uint8Array(data).buffer;\n\n  const cryptoKey = await subtle.importKey(\n    'raw',\n    keyBuffer,\n    { name: 'AES-CTR', length: 128 },\n    false,\n    ['encrypt', 'decrypt']\n  );\n\n  const decrypted = (await subtle.decrypt(\n    { name: 'AES-CTR', counter: ivBuffer, length: 128 },\n    cryptoKey,\n    dataBuffer\n  )) as ArrayBuffer;\n\n  return new Uint8Array(decrypted);\n};\n","import { scrypt, keccak256 } from '../shared';\nimport type { CryptoApi } from '../types';\n\nimport { decrypt, encrypt, keyFromPassword } from './aes-ctr';\nimport { bufferFromString } from './bufferFromString';\nimport { decryptJsonWalletData, encryptJsonWalletData } from './encryptJsonWalletData';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst api: CryptoApi = {\n  bufferFromString,\n  stringFromBuffer,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n};\n\nexport default api;\n","import { keccak256 as keccak } from 'ethereum-cryptography/keccak';\n\nexport const keccak256 = (data: Uint8Array): Uint8Array => keccak(data);\n","import cryptoApi from './browser';\n\nexport * from './types';\n\nexport const {\n  bufferFromString,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  stringFromBuffer,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n} = cryptoApi;\n","import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n","import { FuelError, type ErrorCode } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport type { BytesLike } from 'ethers';\n\nimport type { Option } from './option';\n\ntype Primitive = string | number | boolean;\n\n/**\n * These options relates only to:\n *  - NumberCoder (u8, u16, u32)\n *  - BooleanCoder\n *\n * 1) isSmallBytes (default=false)\n *\n * Describes how many bytes it will occupy:\n *\n * false — occupies 8 bytes (default), and should be used when underneath:\n *    • standalone\n *    • tuple\n *    • struct\n *    • enum\n *\n * true — occupies 1 byte, and should be used when underneath:\n *    • array\n *    • vector\n *\n *\n *\n * 2) isRightPadded (default=false)\n *\n * Used only when `isSmallBytes` is FALSE.\n *\n * Describes how the padding should happen:\n *\n *  false —— left padded (default), and should be used when underneath:\n *    • standalone\n *    • array\n *    • vector\n *    • enum\n *    • only one function argument\n *\n *  true —— right padded, and should be used when underneath:\n *    • struct\n *    • tuple\n *    • multiple function arguments\n *    • configurable\n *\n */\nexport type SmallBytesOptions = {\n  isSmallBytes?: boolean;\n  isRightPadded?: boolean;\n};\n\n/**\n * The type of value you can provide to `Coder.encode`\n */\nexport type InputValue<T = void> =\n  | Primitive\n  | BN\n  | Option<T>\n  | BytesLike\n  | InputValue[]\n  | { [key: string]: InputValue }\n  | Record<string, Primitive | BytesLike>;\n\n/**\n * The type of value you can get from `Coder.decode`\n */\nexport type DecodedValue =\n  | Primitive\n  | DecodedValue[]\n  | { [key: string]: DecodedValue }\n  | Record<string, Primitive>;\n\nexport type TypesOfCoder<TCoder> = TCoder extends Coder<infer TInput, infer TDecoded>\n  ? { Input: TInput; Decoded: TDecoded }\n  : never;\n\nexport abstract class Coder<TInput = unknown, TDecoded = unknown> {\n  readonly name: string;\n  readonly type: string;\n  readonly encodedLength: number;\n\n  constructor(name: string, type: string, encodedLength: number) {\n    this.name = name;\n    this.type = type;\n    this.encodedLength = encodedLength;\n  }\n\n  throwError(errorCode: ErrorCode, message: string): never {\n    throw new FuelError(errorCode, message);\n  }\n\n  abstract encode(value: TInput, length?: number): Uint8Array;\n\n  abstract decode(data: Uint8Array, offset: number, length?: number): [TDecoded, number];\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport type { BN, BNInput } from '@fuel-ts/math';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from './abstract-coder';\n\nexport class U64Coder extends Coder<BNInput, BN> {\n  constructor() {\n    super('u64', 'u64', 8);\n  }\n\n  encode(value: BNInput): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value, 8);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n\n    return bytes;\n  }\n\n  decode(data: Uint8Array, offset: number): [BN, number] {\n    let bytes = data.slice(offset, offset + 8);\n    bytes = bytes.slice(0, 8);\n\n    return [bn(bytes), offset + 8];\n  }\n}\n","export const OPTION_CODER_TYPE = 'enum Option';\nexport const VEC_CODER_TYPE = 'struct Vec';\nexport const BYTES_CODER_TYPE = 'struct Bytes';\nexport const STD_STRING_CODER_TYPE = 'struct String';\nexport const stringRegEx = /str\\[(?<length>[0-9]+)\\]/;\nexport const arrayRegEx = /\\[(?<item>[\\w\\s\\\\[\\]]+);\\s*(?<length>[0-9]+)\\]/;\nexport const structRegEx = /^struct (?<name>\\w+)$/;\nexport const enumRegEx = /^enum (?<name>\\w+)$/;\nexport const tupleRegEx = /^\\((?<items>.*)\\)$/;\nexport const genericRegEx = /^generic (?<name>\\w+)$/;\n\nexport const WORD_SIZE = 8;\nexport const BYTES_32 = 32;\nexport const MAX_INPUTS = 255;\n\nexport const ASSET_ID_LEN = BYTES_32;\nexport const CONTRACT_ID_LEN = BYTES_32;\nexport const ADDRESS_LEN = BYTES_32;\nexport const NONCE_LEN = BYTES_32;\nexport const TX_LEN = WORD_SIZE * 4;\nexport const TX_POINTER_LEN = WORD_SIZE * 2;\n\nexport const calculateVmTxMemory = ({ maxInputs }: { maxInputs: number }) =>\n  BYTES_32 + // Tx ID\n  WORD_SIZE + // Tx size\n  // Asset ID/Balance coin input pairs\n  maxInputs * (ASSET_ID_LEN + WORD_SIZE);\n\n// SCRIPT_FIXED_SIZE = 104\nexport const SCRIPT_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  WORD_SIZE + // Gas limit\n  WORD_SIZE + // Script size\n  WORD_SIZE + // Script data size\n  WORD_SIZE + // Policies\n  WORD_SIZE + // Inputs size\n  WORD_SIZE + // Outputs size\n  WORD_SIZE + // Witnesses size\n  BYTES_32; // Receipts root\n\n// INPUT_COIN_FIXED_SIZE = 176\nexport const INPUT_COIN_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  TX_LEN + // Utxo Length\n  WORD_SIZE + // Output Index\n  ADDRESS_LEN + // Owner\n  WORD_SIZE + // Amount\n  ASSET_ID_LEN + // Asset id\n  TX_POINTER_LEN + // TxPointer\n  WORD_SIZE + // Witnesses index\n  WORD_SIZE + // Maturity\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n\n// INPUT_MESSAGE_FIXED_SIZE = 168\nexport const INPUT_MESSAGE_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  ADDRESS_LEN + // Sender\n  ADDRESS_LEN + // Recipient\n  WORD_SIZE + // Amount\n  NONCE_LEN + // Nonce\n  WORD_SIZE + // witness_index\n  WORD_SIZE + // Data size\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { concat, concatBytes } from '@fuel-ts/utils';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nimport { U64Coder } from './coders/u64';\nimport { BYTES_CODER_TYPE, VEC_CODER_TYPE, STD_STRING_CODER_TYPE, WORD_SIZE } from './constants';\n\nexport type DynamicData = {\n  [pointerIndex: number]: Uint8ArrayWithDynamicData;\n};\n\nexport type Uint8ArrayWithDynamicData = Uint8Array & {\n  dynamicData?: DynamicData;\n};\n\nconst VEC_PROPERTY_SPACE = 3; // ptr + cap + length\nexport const BASE_VECTOR_OFFSET = VEC_PROPERTY_SPACE * WORD_SIZE;\n\nconst RAW_SLICE_PROPERTY_SPACE = 2; // ptr + length\nexport const BASE_RAW_SLICE_OFFSET = RAW_SLICE_PROPERTY_SPACE * WORD_SIZE;\n\n// this is a fork of @ethersproject/bytes:concat\n// this collects individual dynamicData data and relocates it to top level\nexport function concatWithDynamicData(items: ReadonlyArray<BytesLike>): Uint8ArrayWithDynamicData {\n  const topLevelData: DynamicData = {};\n\n  let totalIndex = 0;\n  const objects = items.map((item) => {\n    const dynamicData = (item as Uint8ArrayWithDynamicData).dynamicData;\n    if (dynamicData) {\n      Object.entries(dynamicData).forEach(([pointerIndex, vData]) => {\n        topLevelData[parseInt(pointerIndex, 10) + totalIndex] = vData;\n      });\n    }\n\n    const byteArray = getBytesCopy(item);\n    totalIndex += byteArray.byteLength / WORD_SIZE;\n\n    return byteArray;\n  });\n\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result: Uint8ArrayWithDynamicData = new Uint8Array(length);\n\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  // store vector data and pointer indices, but only if data exist\n  if (Object.keys(topLevelData).length) {\n    result.dynamicData = topLevelData;\n  }\n\n  return result;\n}\n\nexport function unpackDynamicData(\n  results: Uint8ArrayWithDynamicData,\n  baseOffset: number,\n  dataOffset: number\n): Uint8Array {\n  if (!results.dynamicData) {\n    return concat([results]);\n  }\n\n  let cumulativeDynamicByteLength = 0;\n  let updatedResults = results;\n  Object.entries(results.dynamicData).forEach(([pointerIndex, vData]) => {\n    // update value of pointer\n    const pointerOffset = parseInt(pointerIndex, 10) * WORD_SIZE;\n    const adjustedValue = new U64Coder().encode(\n      dataOffset + baseOffset + cumulativeDynamicByteLength\n    );\n    updatedResults.set(adjustedValue, pointerOffset);\n\n    // append dynamic data at the end\n    const dataToAppend = vData.dynamicData\n      ? // unpack child dynamic data\n        unpackDynamicData(\n          vData,\n          baseOffset,\n          dataOffset + vData.byteLength + cumulativeDynamicByteLength\n        )\n      : vData;\n    updatedResults = concat([updatedResults, dataToAppend]);\n\n    cumulativeDynamicByteLength += dataToAppend.byteLength;\n  });\n\n  return updatedResults;\n}\n\n/**\n * Turns:\n  Uint8Array(24) [\n    0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 24\n  ]\n\n  Into:\n  Array [\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 1\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 2\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 24\n    ]\n  ]\n *\n */\nexport const chunkByLength = (data: Uint8Array, length = WORD_SIZE): Uint8Array[] => {\n  const chunks = [];\n  let offset = 0;\n  let chunk = data.slice(offset, offset + length);\n  while (chunk.length) {\n    chunks.push(chunk);\n    offset += length;\n    chunk = data.slice(offset, offset + length);\n  }\n\n  return chunks;\n};\n\n/**\n * Checks if a given type is a pointer type\n * See: https://github.com/FuelLabs/sway/issues/1368\n */\nexport const isPointerType = (type: string) => {\n  switch (type) {\n    case 'u8':\n    case 'u16':\n    case 'u32':\n    case 'u64':\n    case 'bool': {\n      return false;\n    }\n    default: {\n      return true;\n    }\n  }\n};\n\nexport const isHeapType = (type: string) =>\n  type === VEC_CODER_TYPE || type === BYTES_CODER_TYPE || type === STD_STRING_CODER_TYPE;\n\nexport function findOrThrow<T>(\n  arr: readonly T[],\n  predicate: (val: T) => boolean,\n  throwFn: () => never = () => {\n    throw new FuelError(ErrorCode.ELEMENT_NOT_FOUND, 'Element not found in the array.');\n  }\n): T {\n  const found = arr.find(predicate);\n  if (found === undefined) {\n    throwFn();\n  }\n\n  return found;\n}\n\n/**\n * Because some properties can be single-bytes, we need to pad them\n * with zeros until they are aligned to a word-sized increment.\n * This is the case for `tuple` and `struct` properties.\n * Please refer to packages/abi-coder/src/coders/abstract-coder.ts for more details\n */\nexport const isMultipleOfWordSize = (length: number) => length % WORD_SIZE === 0;\n\nexport const getWordSizePadding = (length: number) => WORD_SIZE - (length % WORD_SIZE);\n\nexport const rightPadToWordSize = (encoded: Uint8Array) => {\n  if (isMultipleOfWordSize(encoded.length)) {\n    return encoded;\n  }\n  const padding = new Uint8Array(WORD_SIZE - (encoded.length % WORD_SIZE));\n  return concatBytes([encoded, padding]);\n};\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class ArrayCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n  length: number;\n\n  constructor(coder: TCoder, length: number) {\n    super('array', `[${coder.type}; ${length}]`, length * coder.encodedLength);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    if (this.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v)));\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    let newOffset = offset;\n    const decodedValue = Array(this.length)\n      .fill(0)\n      .map(() => {\n        let decoded;\n        [decoded, newOffset] = this.coder.decode(data, newOffset);\n        return decoded;\n      });\n\n    return [decodedValue as DecodedValueOf<TCoder>, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { getBytesCopy } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class B256Coder extends Coder<string, string> {\n  constructor() {\n    super('b256', 'b256', 32);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = getBytesCopy(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== 32) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let bytes = data.slice(offset, offset + 32);\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(32);\n    }\n    if (bytes.length !== 32) {\n      this.throwError(ErrorCode.DECODE_ERROR, `'Invalid size for b256'.`);\n    }\n    return [toHex(bytes, 32), offset + 32];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { getBytesCopy } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class B512Coder extends Coder<string, string> {\n  constructor() {\n    super('b512', 'struct B512', 64);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = getBytesCopy(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== 64) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let bytes = data.slice(offset, offset + 64);\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(64);\n    }\n    if (bytes.length !== 64) {\n      this.throwError(ErrorCode.DECODE_ERROR, `Invalid size for b512.`);\n    }\n    return [toHex(bytes, 64), offset + 64];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport type { SmallBytesOptions } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\nexport class BooleanCoder extends Coder<boolean, boolean> {\n  paddingLength: number;\n  options: SmallBytesOptions;\n\n  constructor(\n    options: SmallBytesOptions = {\n      isSmallBytes: false,\n      isRightPadded: false,\n    }\n  ) {\n    const paddingLength = options.isSmallBytes ? 1 : 8;\n\n    super('boolean', 'boolean', paddingLength);\n\n    this.paddingLength = paddingLength;\n    this.options = options;\n  }\n\n  encode(value: boolean): Uint8Array {\n    const isTrueBool = value === true || value === false;\n\n    if (!isTrueBool) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid boolean value.`);\n    }\n\n    const output: Uint8Array = toBytes(value ? 1 : 0, this.paddingLength);\n\n    if (this.options.isRightPadded) {\n      return output.reverse();\n    }\n\n    return output;\n  }\n\n  decode(data: Uint8Array, offset: number): [boolean, number] {\n    let bytes;\n\n    if (this.options.isRightPadded) {\n      bytes = bn(data.slice(offset, offset + 1));\n    } else {\n      bytes = bn(data.slice(offset, offset + this.paddingLength));\n    }\n\n    if (bytes.isZero()) {\n      return [false, offset + this.paddingLength];\n    }\n\n    if (!bytes.eq(bn(1))) {\n      this.throwError(ErrorCode.DECODE_ERROR, `Invalid boolean value.`);\n    }\n\n    return [true, offset + this.paddingLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport type { RequireExactlyOne } from 'type-fest';\n\nimport { concatWithDynamicData } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport type InputValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n}>;\nexport type DecodedValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n}>;\n\nconst isFullyNativeEnum = (enumCoders: { [s: string]: unknown } | ArrayLike<unknown>): boolean =>\n  Object.values(enumCoders).every(\n    // @ts-expect-error complicated types\n    ({ type, coders }) => type === '()' && JSON.stringify(coders) === JSON.stringify([])\n  );\n\nexport class EnumCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n  #caseIndexCoder: U64Coder;\n  #encodedValueSize: number;\n\n  constructor(name: string, coders: TCoders) {\n    const caseIndexCoder = new U64Coder();\n    const encodedValueSize = Object.values(coders).reduce(\n      (max, coder) => Math.max(max, coder.encodedLength),\n      0\n    );\n    super('enum', `enum ${name}`, caseIndexCoder.encodedLength + encodedValueSize);\n    this.name = name;\n    this.coders = coders;\n    this.#caseIndexCoder = caseIndexCoder;\n    this.#encodedValueSize = encodedValueSize;\n  }\n\n  #encodeNativeEnum(value: string): Uint8Array {\n    const valueCoder = this.coders[value];\n    const encodedValue = valueCoder.encode([]);\n    const caseIndex = Object.keys(this.coders).indexOf(value);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concat([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (typeof value === 'string' && this.coders[value]) {\n      return this.#encodeNativeEnum(value);\n    }\n\n    const [caseKey, ...empty] = Object.keys(value);\n    if (!caseKey) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'A field for the case must be provided.');\n    }\n    if (empty.length !== 0) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'Only one field must be provided.');\n    }\n    const valueCoder = this.coders[caseKey];\n    const caseIndex = Object.keys(this.coders).indexOf(caseKey);\n    const encodedValue = valueCoder.encode(value[caseKey]);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concatWithDynamicData([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  #decodeNativeEnum(caseKey: string, newOffset: number): [DecodedValueOf<TCoders>, number] {\n    return [caseKey as unknown as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n\n    let decoded;\n    [decoded, newOffset] = new U64Coder().decode(data, newOffset);\n    const caseIndex = toNumber(decoded);\n    const caseKey = Object.keys(this.coders)[caseIndex];\n    if (!caseKey) {\n      throw new FuelError(\n        ErrorCode.INVALID_DECODE_VALUE,\n        `Invalid caseIndex \"${caseIndex}\". Valid cases: ${Object.keys(this.coders)}.`\n      );\n    }\n\n    const valueCoder = this.coders[caseKey];\n    const padding = this.#encodedValueSize - valueCoder.encodedLength;\n    newOffset += padding;\n    [decoded, newOffset] = valueCoder.decode(data, newOffset);\n\n    if (isFullyNativeEnum(this.coders)) {\n      return this.#decodeNativeEnum(caseKey, newOffset);\n    }\n\n    return [{ [caseKey]: decoded } as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { ErrorCode } from '@fuel-ts/errors';\nimport { toNumber, toBytes } from '@fuel-ts/math';\n\nimport type { SmallBytesOptions } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\ntype NumberCoderType = 'u8' | 'u16' | 'u32';\n\nexport class NumberCoder extends Coder<number, number> {\n  // This is to align the bits to the total bytes\n  // See https://github.com/FuelLabs/fuel-specs/blob/master/specs/protocol/abi.md#unsigned-integers\n  length: number;\n  paddingLength: number;\n  baseType: NumberCoderType;\n  options: SmallBytesOptions;\n\n  constructor(\n    baseType: NumberCoderType,\n    options: SmallBytesOptions = {\n      isSmallBytes: false,\n      isRightPadded: false,\n    }\n  ) {\n    const paddingLength = options.isSmallBytes && baseType === 'u8' ? 1 : 8;\n\n    super('number', baseType, paddingLength);\n    this.baseType = baseType;\n    switch (baseType) {\n      case 'u8':\n        this.length = 1;\n        break;\n      case 'u16':\n        this.length = 2;\n        break;\n      case 'u32':\n      default:\n        this.length = 4;\n        break;\n    }\n\n    this.paddingLength = paddingLength;\n    this.options = options;\n  }\n\n  encode(value: number | string): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value);\n    } catch (error) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}.`);\n    }\n\n    if (bytes.length > this.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}, too many bytes.`);\n    }\n\n    const output = toBytes(bytes, this.paddingLength);\n\n    if (this.baseType !== 'u8') {\n      return output;\n    }\n\n    return this.options.isRightPadded ? output.reverse() : output;\n  }\n\n  private decodeU8(data: Uint8Array, offset: number): [number, number] {\n    let bytes;\n    if (this.options.isRightPadded) {\n      bytes = data.slice(offset, offset + 1);\n    } else {\n      bytes = data.slice(offset, offset + this.paddingLength);\n      bytes = bytes.slice(this.paddingLength - this.length, this.paddingLength);\n    }\n\n    return [toNumber(bytes), offset + this.paddingLength];\n  }\n\n  decode(data: Uint8Array, offset: number): [number, number] {\n    if (this.baseType === 'u8') {\n      return this.decodeU8(data, offset);\n    }\n\n    const bytes = data.slice(offset, offset + 8).slice(8 - this.length, 8);\n\n    return [toNumber(bytes), offset + 8];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport class ByteCoder extends Coder<number[], Uint8Array> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct Bytes', BASE_VECTOR_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the byte vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(data.byteLength));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: number[]): Uint8Array {\n    const data: Uint8Array[] = [Uint8Array.from(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [Uint8Array, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + length * 8);\n\n    return [byteData, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { Coder } from './abstract-coder';\n\nexport class StringCoder<TLength extends number = number> extends Coder<string, string> {\n  length: TLength;\n  #paddingLength: number;\n\n  constructor(length: TLength) {\n    let paddingLength = (8 - length) % 8;\n    paddingLength = paddingLength < 0 ? paddingLength + 8 : paddingLength;\n    super('string', `str[${length}]`, length + paddingLength);\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n\n  encode(value: string): Uint8Array {\n    if (this.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Value length mismatch during encode.`);\n    }\n\n    const encoded = toUtf8Bytes(value);\n    const padding = new Uint8Array(this.#paddingLength);\n    return concat([encoded, padding]);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    const bytes = data.slice(offset, offset + this.length);\n    const value = toUtf8String(bytes);\n\n    const padding = this.#paddingLength;\n    return [value, offset + this.length + padding];\n  }\n}\n","import type { Coder } from './abstract-coder';\nimport type { InputValueOf, DecodedValueOf } from './enum';\nimport { EnumCoder } from './enum';\n\ntype SwayOption<T> = { None: [] } | { Some: T };\nexport type Option<T> = T | undefined;\n\nexport class OptionCoder<TCoders extends Record<string, Coder>> extends EnumCoder<TCoders> {\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    const result = super.encode(this.toSwayOption(value) as unknown as InputValueOf<TCoders>);\n    return result;\n  }\n\n  toSwayOption(input: InputValueOf<TCoders>): SwayOption<unknown> {\n    if (input !== undefined) {\n      return { Some: input };\n    }\n\n    return { None: [] };\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    const [decoded, newOffset] = super.decode(data, offset);\n    return [this.toOption(decoded) as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  toOption(output?: DecodedValueOf<TCoders>): Option<unknown> {\n    if (output && 'Some' in output) {\n      return output.Some;\n    }\n\n    return undefined;\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport {\n  concatWithDynamicData,\n  getWordSizePadding,\n  isMultipleOfWordSize,\n  rightPadToWordSize,\n} from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { OptionCoder } from './option';\n\ntype InputValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class StructCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n\n  constructor(name: string, coders: TCoders) {\n    const encodedLength = Object.values(coders).reduce(\n      (acc, coder) => acc + coder.encodedLength,\n      0\n    );\n    super('struct', `struct ${name}`, encodedLength);\n    this.name = name;\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>) {\n    const encodedFields = Object.keys(this.coders).map((fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      const fieldValue = value[fieldName];\n\n      if (!(fieldCoder instanceof OptionCoder) && fieldValue == null) {\n        this.throwError(\n          ErrorCode.ENCODE_ERROR,\n          `Invalid ${this.type}. Field \"${fieldName}\" not present.`\n        );\n      }\n\n      const encoded = fieldCoder.encode(fieldValue);\n\n      if (!isMultipleOfWordSize(encoded.length)) {\n        return rightPadToWordSize(encoded);\n      }\n\n      return encoded;\n    });\n\n    return concatWithDynamicData([concatWithDynamicData(encodedFields)]);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n    const decodedValue = Object.keys(this.coders).reduce((obj, fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      let decoded;\n      [decoded, newOffset] = fieldCoder.decode(data, newOffset);\n\n      if (!isMultipleOfWordSize(newOffset)) {\n        newOffset += getWordSizePadding(newOffset);\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      obj[fieldName as keyof DecodedValueOf<TCoders>] = decoded;\n      return obj;\n    }, {} as DecodedValueOf<TCoders>);\n\n    return [decodedValue, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\n\nimport {\n  concatWithDynamicData,\n  getWordSizePadding,\n  isMultipleOfWordSize,\n  rightPadToWordSize,\n} from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\n\ntype InputValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class TupleCoder<TCoders extends Coder[]> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  coders: TCoders;\n\n  constructor(coders: TCoders) {\n    const encodedLength = coders.reduce((acc, coder) => acc + coder.encodedLength, 0);\n    super('tuple', `(${coders.map((coder) => coder.type).join(', ')})`, encodedLength);\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (this.coders.length !== value.length) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(\n      this.coders.map((coder, i) => {\n        const encoded = coder.encode(value[i]);\n        if (!isMultipleOfWordSize(encoded.length)) {\n          return rightPadToWordSize(encoded);\n        }\n        return encoded;\n      })\n    );\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    let newOffset = offset;\n    const decodedValue = this.coders.map((coder) => {\n      let decoded;\n      [decoded, newOffset] = coder.decode(data, newOffset);\n\n      if (!isMultipleOfWordSize(newOffset)) {\n        newOffset += getWordSizePadding(newOffset);\n      }\n\n      return decoded;\n    });\n\n    return [decodedValue as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\n\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { concatWithDynamicData, BASE_VECTOR_OFFSET, chunkByLength } from '../utilities';\n\nimport type { TypesOfCoder } from './abstract-coder';\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class VecCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n\n  constructor(coder: TCoder) {\n    super('struct', `struct Vec`, coder.encodedLength + BASE_VECTOR_OFFSET);\n    this.coder = coder;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(value.length));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const vectorRawData = data.slice(\n      BASE_VECTOR_OFFSET,\n      BASE_VECTOR_OFFSET + length * this.coder.encodedLength\n    );\n    return [\n      chunkByLength(vectorRawData, this.coder.encodedLength).map(\n        (chunk) => this.coder.decode(chunk, 0)[0]\n      ),\n      offset + BASE_VECTOR_OFFSET,\n    ];\n  }\n}\n","import { ErrorCode } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_RAW_SLICE_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { ArrayCoder } from './array';\nimport { U64Coder } from './u64';\n\nexport class RawSliceCoder extends Coder<number[], BN[]> {\n  constructor() {\n    super('raw untyped slice', 'raw untyped slice', BASE_RAW_SLICE_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      this.throwError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n    const coder = new U64Coder();\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_RAW_SLICE_OFFSET);\n\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(value.map((v) => coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length * WORD_SIZE));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [BN[], number] {\n    const internalCoder = new ArrayCoder(new U64Coder(), data.length / 8);\n    const decoded = internalCoder.decode(data, offset);\n\n    return decoded;\n  }\n}\n","import { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { WORD_SIZE } from '../constants';\nimport type { Uint8ArrayWithDynamicData } from '../utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../utilities';\n\nimport { Coder } from './abstract-coder';\nimport { U64Coder } from './u64';\n\nexport class StdStringCoder extends Coder<string, string> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct String', 1);\n  }\n\n  encode(value: string): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new U64Coder().encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the string vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new U64Coder().encode(data.byteLength));\n\n    // length (len)\n    parts.push(new U64Coder().encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: string): Uint8Array {\n    const data: Uint8Array[] = [toUtf8Bytes(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    const len = data.slice(16, 24);\n    const length = bn(new U64Coder().decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + length);\n    const value = toUtf8String(byteData);\n    return [value, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { arrayRegEx, enumRegEx, genericRegEx, stringRegEx, structRegEx } from './constants';\nimport type { JsonAbi, JsonAbiArgument } from './json-abi';\nimport { findOrThrow } from './utilities';\n\nexport class ResolvedAbiType {\n  readonly abi: JsonAbi;\n  name: string;\n  readonly type: string;\n  readonly originalTypeArguments: readonly JsonAbiArgument[] | null;\n  readonly components: readonly ResolvedAbiType[] | null;\n\n  constructor(abi: JsonAbi, argument: JsonAbiArgument) {\n    this.abi = abi;\n    const type = findOrThrow(\n      abi.types,\n      (t) => t.typeId === argument.type,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type does not exist in the provided abi: ${JSON.stringify({\n            argument,\n            abi: this.abi,\n          })}`\n        );\n      }\n    );\n\n    this.name = argument.name;\n\n    this.type = type.type;\n    this.originalTypeArguments = argument.typeArguments;\n    this.components = ResolvedAbiType.getResolvedGenericComponents(\n      abi,\n      argument,\n      type.components,\n      type.typeParameters ?? ResolvedAbiType.getImplicitGenericTypeParameters(abi, type.components)\n    );\n  }\n\n  private static getResolvedGenericComponents(\n    abi: JsonAbi,\n    arg: JsonAbiArgument,\n    components: readonly JsonAbiArgument[] | null,\n    typeParameters: readonly number[] | null\n  ) {\n    if (components === null) {\n      return null;\n    }\n    if (typeParameters === null || typeParameters.length === 0) {\n      return components.map((c) => new ResolvedAbiType(abi, c));\n    }\n\n    const typeParametersAndArgsMap = typeParameters.reduce(\n      (obj, typeParameter, typeParameterIndex) => {\n        const o: Record<number, JsonAbiArgument> = { ...obj };\n        o[typeParameter] = structuredClone(\n          arg.typeArguments?.[typeParameterIndex]\n        ) as JsonAbiArgument;\n        return o;\n      },\n      {} as Record<number, JsonAbiArgument>\n    );\n\n    const resolvedComponents = this.resolveGenericArgTypes(\n      abi,\n      components,\n      typeParametersAndArgsMap\n    );\n\n    return resolvedComponents.map((c) => new ResolvedAbiType(abi, c));\n  }\n\n  private static resolveGenericArgTypes(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[],\n    typeParametersAndArgsMap: Record<number, JsonAbiArgument>\n  ): readonly JsonAbiArgument[] {\n    return args.map((arg) => {\n      if (typeParametersAndArgsMap[arg.type] !== undefined) {\n        return {\n          ...typeParametersAndArgsMap[arg.type],\n          name: arg.name,\n        };\n      }\n\n      if (arg.typeArguments) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: this.resolveGenericArgTypes(\n            abi,\n            arg.typeArguments,\n            typeParametersAndArgsMap\n          ),\n        };\n      }\n\n      const argType = findOrThrow(abi.types, (t) => t.typeId === arg.type);\n      const implicitTypeParameters = this.getImplicitGenericTypeParameters(abi, argType.components);\n\n      if (implicitTypeParameters && implicitTypeParameters.length > 0) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: implicitTypeParameters.map((itp) => typeParametersAndArgsMap[itp]),\n        };\n      }\n\n      return arg;\n    });\n  }\n\n  private static getImplicitGenericTypeParameters(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[] | null,\n    implicitGenericParametersParam?: number[]\n  ) {\n    if (!Array.isArray(args)) {\n      return null;\n    }\n\n    const implicitGenericParameters: number[] = implicitGenericParametersParam ?? [];\n\n    args.forEach((a) => {\n      const argType = findOrThrow(abi.types, (t) => t.typeId === a.type);\n\n      if (genericRegEx.test(argType.type)) {\n        implicitGenericParameters.push(argType.typeId);\n        return;\n      }\n\n      if (!Array.isArray(a.typeArguments)) {\n        return;\n      }\n      this.getImplicitGenericTypeParameters(abi, a.typeArguments, implicitGenericParameters);\n    });\n\n    return implicitGenericParameters.length > 0 ? implicitGenericParameters : null;\n  }\n\n  getSignature(): string {\n    const prefix = this.getArgSignaturePrefix();\n    const content = this.getArgSignatureContent();\n\n    return `${prefix}${content}`;\n  }\n\n  private getArgSignaturePrefix(): string {\n    const structMatch = structRegEx.test(this.type);\n    if (structMatch) {\n      return 's';\n    }\n\n    const arrayMatch = arrayRegEx.test(this.type);\n    if (arrayMatch) {\n      return 'a';\n    }\n\n    const enumMatch = enumRegEx.test(this.type);\n    if (enumMatch) {\n      return 'e';\n    }\n\n    return '';\n  }\n\n  private getArgSignatureContent(): string {\n    if (this.type === 'raw untyped ptr') {\n      return 'rawptr';\n    }\n\n    if (this.type === 'raw untyped slice') {\n      return 'rawslice';\n    }\n\n    const strMatch = stringRegEx.exec(this.type)?.groups;\n    if (strMatch) {\n      return `str[${strMatch.length}]`;\n    }\n\n    if (this.components === null) {\n      return this.type;\n    }\n\n    const arrayMatch = arrayRegEx.exec(this.type)?.groups;\n\n    if (arrayMatch) {\n      return `[${this.components[0].getSignature()};${arrayMatch.length}]`;\n    }\n\n    const typeArgumentsSignature =\n      this.originalTypeArguments !== null\n        ? `<${this.originalTypeArguments\n            .map((a) => new ResolvedAbiType(this.abi, a).getSignature())\n            .join(',')}>`\n        : '';\n\n    const componentsSignature = `(${this.components.map((c) => c.getSignature()).join(',')})`;\n\n    return `${typeArgumentsSignature}${componentsSignature}`;\n  }\n}\n","// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { DecodedValue, InputValue, Coder, SmallBytesOptions } from './coders/abstract-coder';\nimport { ArrayCoder } from './coders/array';\nimport { B256Coder } from './coders/b256';\nimport { B512Coder } from './coders/b512';\nimport { BooleanCoder } from './coders/boolean';\nimport { ByteCoder } from './coders/byte';\nimport { EnumCoder } from './coders/enum';\nimport { NumberCoder } from './coders/number';\nimport { OptionCoder } from './coders/option';\nimport { RawSliceCoder } from './coders/raw-slice';\nimport { StdStringCoder } from './coders/stdString';\nimport { StringCoder } from './coders/string';\nimport { StructCoder } from './coders/struct';\nimport { TupleCoder } from './coders/tuple';\nimport { U64Coder } from './coders/u64';\nimport { VecCoder } from './coders/vec';\nimport {\n  arrayRegEx,\n  enumRegEx,\n  stringRegEx,\n  structRegEx,\n  tupleRegEx,\n  OPTION_CODER_TYPE,\n  VEC_CODER_TYPE,\n  BYTES_CODER_TYPE,\n  STD_STRING_CODER_TYPE,\n} from './constants';\nimport type { JsonAbi, JsonAbiArgument } from './json-abi';\nimport { ResolvedAbiType } from './resolved-abi-type';\nimport { findOrThrow } from './utilities';\n\nexport abstract class AbiCoder {\n  static getCoder(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    options: SmallBytesOptions = {\n      isSmallBytes: false,\n    }\n  ): Coder {\n    const resolvedAbiType = new ResolvedAbiType(abi, argument);\n\n    return AbiCoder.getCoderImpl(resolvedAbiType, options);\n  }\n\n  static encode(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    value: InputValue,\n    options?: SmallBytesOptions\n  ) {\n    return this.getCoder(abi, argument, options).encode(value);\n  }\n\n  static decode(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    data: Uint8Array,\n    offset: number\n  ): [DecodedValue | undefined, number] {\n    return this.getCoder(abi, argument).decode(data, offset) as [DecodedValue | undefined, number];\n  }\n\n  private static getCoderImpl(\n    resolvedAbiType: ResolvedAbiType,\n    options: SmallBytesOptions = {\n      isSmallBytes: false,\n    }\n  ): Coder {\n    switch (resolvedAbiType.type) {\n      case 'u8':\n      case 'u16':\n      case 'u32':\n        return new NumberCoder(resolvedAbiType.type, options);\n      case 'u64':\n      case 'raw untyped ptr':\n        return new U64Coder();\n      case 'raw untyped slice':\n        return new RawSliceCoder();\n      case 'bool':\n        return new BooleanCoder(options);\n      case 'b256':\n        return new B256Coder();\n      case 'struct B512':\n        return new B512Coder();\n      case BYTES_CODER_TYPE:\n        return new ByteCoder();\n      case STD_STRING_CODER_TYPE:\n        return new StdStringCoder();\n      default:\n        break;\n    }\n\n    const stringMatch = stringRegEx.exec(resolvedAbiType.type)?.groups;\n    if (stringMatch) {\n      const length = parseInt(stringMatch.length, 10);\n\n      return new StringCoder(length);\n    }\n\n    // ABI types underneath MUST have components by definition\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const components = resolvedAbiType.components!;\n\n    const arrayMatch = arrayRegEx.exec(resolvedAbiType.type)?.groups;\n    if (arrayMatch) {\n      const length = parseInt(arrayMatch.length, 10);\n      const arg = components[0];\n      if (!arg) {\n        throw new FuelError(\n          ErrorCode.INVALID_COMPONENT,\n          `The provided Array type is missing an item of 'component'.`\n        );\n      }\n\n      const arrayElementCoder = AbiCoder.getCoderImpl(arg, { isSmallBytes: true });\n      return new ArrayCoder(arrayElementCoder, length);\n    }\n\n    if (resolvedAbiType.type === VEC_CODER_TYPE) {\n      const arg = findOrThrow(components, (c) => c.name === 'buf').originalTypeArguments?.[0];\n      if (!arg) {\n        throw new FuelError(\n          ErrorCode.INVALID_COMPONENT,\n          `The provided Vec type is missing the 'type argument'.`\n        );\n      }\n      const argType = new ResolvedAbiType(resolvedAbiType.abi, arg);\n\n      const itemCoder = AbiCoder.getCoderImpl(argType, { isSmallBytes: true });\n      return new VecCoder(itemCoder);\n    }\n\n    const structMatch = structRegEx.exec(resolvedAbiType.type)?.groups;\n    if (structMatch) {\n      const coders = AbiCoder.getCoders(components, { isRightPadded: true });\n      return new StructCoder(structMatch.name, coders);\n    }\n\n    const enumMatch = enumRegEx.exec(resolvedAbiType.type)?.groups;\n    if (enumMatch) {\n      const coders = AbiCoder.getCoders(components, {});\n\n      const isOptionEnum = resolvedAbiType.type === OPTION_CODER_TYPE;\n      if (isOptionEnum) {\n        return new OptionCoder(enumMatch.name, coders);\n      }\n      return new EnumCoder(enumMatch.name, coders);\n    }\n\n    const tupleMatch = tupleRegEx.exec(resolvedAbiType.type)?.groups;\n    if (tupleMatch) {\n      const coders = components.map((component) =>\n        AbiCoder.getCoderImpl(component, { isRightPadded: true })\n      );\n      return new TupleCoder(coders);\n    }\n\n    if (resolvedAbiType.type === 'str') {\n      throw new FuelError(\n        ErrorCode.INVALID_DATA,\n        'String slices can not be decoded from logs. Convert the slice to `str[N]` with `__to_str_array`'\n      );\n    }\n\n    throw new FuelError(\n      ErrorCode.CODER_NOT_FOUND,\n      `Coder not found: ${JSON.stringify(resolvedAbiType)}.`\n    );\n  }\n\n  private static getCoders(components: readonly ResolvedAbiType[], options: SmallBytesOptions) {\n    return components.reduce((obj, component) => {\n      const o: Record<string, Coder> = obj;\n\n      o[component.name] = AbiCoder.getCoderImpl(component, options);\n      return o;\n    }, {});\n  }\n}\n","import { bufferFromString } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport type { BytesLike } from 'ethers';\nimport { sha256, getBytesCopy } from 'ethers';\n\nimport { AbiCoder } from './abi-coder';\nimport type { DecodedValue, InputValue } from './coders/abstract-coder';\nimport type { ArrayCoder } from './coders/array';\nimport { ByteCoder } from './coders/byte';\nimport { TupleCoder } from './coders/tuple';\nimport type { U64Coder } from './coders/u64';\nimport { VecCoder } from './coders/vec';\nimport { OPTION_CODER_TYPE } from './constants';\nimport type {\n  JsonAbi,\n  JsonAbiArgument,\n  JsonAbiFunction,\n  JsonAbiFunctionAttribute,\n} from './json-abi';\nimport { ResolvedAbiType } from './resolved-abi-type';\nimport type { Uint8ArrayWithDynamicData } from './utilities';\nimport { isPointerType, unpackDynamicData, findOrThrow, isHeapType } from './utilities';\n\nexport class FunctionFragment<\n  TAbi extends JsonAbi = JsonAbi,\n  FnName extends TAbi['functions'][number]['name'] = string,\n> {\n  readonly signature: string;\n  readonly selector: string;\n  readonly name: string;\n  readonly jsonFn: JsonAbiFunction;\n  readonly attributes: readonly JsonAbiFunctionAttribute[];\n  readonly isInputDataPointer: boolean;\n  readonly outputMetadata: {\n    isHeapType: boolean;\n    encodedLength: number;\n  };\n\n  private readonly jsonAbi: JsonAbi;\n\n  constructor(jsonAbi: JsonAbi, name: FnName) {\n    this.jsonAbi = jsonAbi;\n    this.jsonFn = findOrThrow(this.jsonAbi.functions, (f) => f.name === name);\n    this.name = name;\n    this.signature = FunctionFragment.getSignature(this.jsonAbi, this.jsonFn);\n    this.selector = FunctionFragment.getFunctionSelector(this.signature);\n    this.isInputDataPointer = this.#isInputDataPointer();\n    this.outputMetadata = {\n      isHeapType: this.#isOutputDataHeap(),\n      encodedLength: this.#getOutputEncodedLength(),\n    };\n\n    this.attributes = this.jsonFn.attributes ?? [];\n  }\n\n  private static getSignature(abi: JsonAbi, fn: JsonAbiFunction): string {\n    const inputsSignatures = fn.inputs.map((input) =>\n      new ResolvedAbiType(abi, input).getSignature()\n    );\n    return `${fn.name}(${inputsSignatures.join(',')})`;\n  }\n\n  private static getFunctionSelector(functionSignature: string) {\n    const hashedFunctionSignature = sha256(bufferFromString(functionSignature, 'utf-8'));\n    // get first 4 bytes of signature + 0x prefix. then left-pad it to 8 bytes using toHex(8)\n    return bn(hashedFunctionSignature.slice(0, 10)).toHex(8);\n  }\n\n  #isInputDataPointer(): boolean {\n    const inputTypes = this.jsonFn.inputs.map((i) =>\n      this.jsonAbi.types.find((t) => t.typeId === i.type)\n    );\n\n    return this.jsonFn.inputs.length > 1 || isPointerType(inputTypes[0]?.type || '');\n  }\n\n  #isOutputDataHeap(): boolean {\n    const outputType = findOrThrow(this.jsonAbi.types, (t) => t.typeId === this.jsonFn.output.type);\n\n    return isHeapType(outputType?.type || '');\n  }\n\n  #getOutputEncodedLength(): number {\n    try {\n      const heapCoder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n      if (heapCoder instanceof VecCoder) {\n        return heapCoder.coder.encodedLength;\n      }\n      if (heapCoder instanceof ByteCoder) {\n        return ByteCoder.memorySize;\n      }\n\n      return heapCoder.encodedLength;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  encodeArguments(values: InputValue[], offset = 0): Uint8Array {\n    FunctionFragment.verifyArgsAndInputsAlign(values, this.jsonFn.inputs, this.jsonAbi);\n\n    const shallowCopyValues = values.slice();\n\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (Array.isArray(values) && nonEmptyInputs.length !== values.length) {\n      shallowCopyValues.length = this.jsonFn.inputs.length;\n      shallowCopyValues.fill(undefined as unknown as InputValue, values.length);\n    }\n\n    const coders = nonEmptyInputs.map((t) =>\n      AbiCoder.getCoder(this.jsonAbi, t, {\n        isRightPadded: nonEmptyInputs.length > 1,\n      })\n    );\n\n    const coder = new TupleCoder(coders);\n    const results: Uint8ArrayWithDynamicData = coder.encode(shallowCopyValues);\n\n    return unpackDynamicData(results, offset, results.byteLength);\n  }\n\n  private static verifyArgsAndInputsAlign(\n    args: InputValue[],\n    inputs: readonly JsonAbiArgument[],\n    abi: JsonAbi\n  ) {\n    if (args.length === inputs.length) {\n      return;\n    }\n\n    const inputTypes = inputs.map((i) => findOrThrow(abi.types, (t) => t.typeId === i.type));\n    const optionalInputs = inputTypes.filter(\n      (x) => x.type === OPTION_CODER_TYPE || x.type === '()'\n    );\n    if (optionalInputs.length === inputTypes.length) {\n      return;\n    }\n    if (inputTypes.length - optionalInputs.length === args.length) {\n      return;\n    }\n\n    const errorMsg = `Mismatch between provided arguments and expected ABI inputs. Provided ${\n      args.length\n    } arguments, but expected ${inputs.length - optionalInputs.length} (excluding ${\n      optionalInputs.length\n    } optional inputs).`;\n\n    throw new FuelError(ErrorCode.ABI_TYPES_AND_VALUES_MISMATCH, errorMsg);\n  }\n\n  decodeArguments(data: BytesLike) {\n    const bytes = getBytesCopy(data);\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (nonEmptyInputs.length === 0) {\n      // The VM is current return 0x0000000000000000, but we should treat it as undefined / void\n      if (bytes.length === 0) {\n        return undefined;\n      }\n\n      throw new FuelError(\n        ErrorCode.DECODE_ERROR,\n        `Types/values length mismatch during decode. ${JSON.stringify({\n          count: {\n            types: this.jsonFn.inputs.length,\n            nonEmptyInputs: nonEmptyInputs.length,\n            values: bytes.length,\n          },\n          value: {\n            args: this.jsonFn.inputs,\n            nonEmptyInputs,\n            values: bytes,\n          },\n        })}`\n      );\n    }\n\n    const result = nonEmptyInputs.reduce(\n      (obj: { decoded: unknown[]; offset: number }, input) => {\n        const coder = AbiCoder.getCoder(this.jsonAbi, input);\n        const [decodedValue, decodedValueByteSize] = coder.decode(bytes, obj.offset);\n\n        return {\n          decoded: [...obj.decoded, decodedValue],\n          offset: obj.offset + decodedValueByteSize,\n        };\n      },\n      { decoded: [], offset: 0 }\n    );\n\n    return result.decoded;\n  }\n\n  decodeOutput(data: BytesLike): [DecodedValue | undefined, number] {\n    const outputAbiType = findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === this.jsonFn.output.type\n    );\n    if (outputAbiType.type === '()') {\n      return [undefined, 0];\n    }\n\n    const bytes = getBytesCopy(data);\n    const coder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n\n    if (outputAbiType.type === 'raw untyped slice') {\n      (coder as ArrayCoder<U64Coder>).length = bytes.length / 8;\n    }\n\n    return coder.decode(bytes, 0) as [DecodedValue | undefined, number];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nimport { AbiCoder } from './abi-coder';\nimport type { InputValue } from './coders/abstract-coder';\nimport { FunctionFragment } from './function-fragment';\nimport type { JsonAbi, JsonAbiConfigurable } from './json-abi';\nimport { findOrThrow } from './utilities';\n\nexport class Interface<TAbi extends JsonAbi = JsonAbi> {\n  readonly functions!: Record<string, FunctionFragment>;\n\n  readonly configurables: Record<string, JsonAbiConfigurable>;\n  /*\n  TODO: Refactor so that there's no need for externalLoggedTypes\n\n  This is dedicated to external contracts added via `<base-invocation-scope.ts>.addContracts()` method.\n  This is used to decode logs from contracts other than the main contract\n  we're interacting with.\n  */\n  private externalLoggedTypes: Record<string, Interface>;\n  readonly jsonAbi: TAbi;\n\n  constructor(jsonAbi: TAbi) {\n    this.jsonAbi = jsonAbi;\n\n    this.externalLoggedTypes = {};\n\n    this.functions = Object.fromEntries(\n      this.jsonAbi.functions.map((x) => [x.name, new FunctionFragment(this.jsonAbi, x.name)])\n    );\n\n    this.configurables = Object.fromEntries(this.jsonAbi.configurables.map((x) => [x.name, x]));\n  }\n\n  /**\n   * Returns function fragment for a dynamic input.\n   * @param nameOrSignatureOrSelector - name (e.g. 'transfer'), signature (e.g. 'transfer(address,uint256)') or selector (e.g. '0x00000000a9059cbb') of the function fragment\n   */\n  getFunction(nameOrSignatureOrSelector: string): FunctionFragment {\n    const fn = Object.values<FunctionFragment>(this.functions).find(\n      (f) =>\n        f.name === nameOrSignatureOrSelector ||\n        f.signature === nameOrSignatureOrSelector ||\n        f.selector === nameOrSignatureOrSelector\n    );\n\n    if (fn !== undefined) {\n      return fn;\n    }\n\n    throw new FuelError(\n      ErrorCode.FUNCTION_NOT_FOUND,\n      `function ${nameOrSignatureOrSelector} not found: ${JSON.stringify(fn)}.`\n    );\n  }\n\n  decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.decodeArguments(data);\n  }\n\n  encodeFunctionData(\n    functionFragment: FunctionFragment | string,\n    values: Array<InputValue>,\n    offset = 0\n  ): Uint8Array {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.encodeArguments(values, offset);\n  }\n\n  // Decode the result of a function call\n  decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    return fragment.decodeOutput(data);\n  }\n\n  decodeLog(data: BytesLike, logId: number, receiptId: string): any {\n    const isExternalLoggedType = this.externalLoggedTypes[receiptId];\n    if (isExternalLoggedType) {\n      const externalInterface = this.externalLoggedTypes[receiptId];\n      return externalInterface.decodeLog(data, logId, receiptId);\n    }\n\n    const { loggedType } = findOrThrow(this.jsonAbi.loggedTypes, (type) => type.logId === logId);\n\n    return AbiCoder.decode(this.jsonAbi, loggedType, getBytesCopy(data), 0);\n  }\n\n  updateExternalLoggedTypes(id: string, loggedTypes: Interface) {\n    this.externalLoggedTypes[id] = loggedTypes;\n  }\n\n  encodeConfigurable(name: string, value: InputValue) {\n    const configurable = findOrThrow(\n      this.jsonAbi.configurables,\n      (c) => c.name === name,\n      () => {\n        throw new FuelError(\n          ErrorCode.CONFIGURABLE_NOT_FOUND,\n          `A configurable with the '${name}' was not found in the ABI.`\n        );\n      }\n    );\n\n    return AbiCoder.encode(this.jsonAbi, configurable.configurableType, value, {\n      isRightPadded: true,\n    });\n  }\n\n  getTypeById(typeId: number) {\n    return findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === typeId,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type with typeId '${typeId}' doesn't exist in the ABI.`\n        );\n      }\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-classes-per-file */\n\n/**\n * @privateRemarks\n *\n * TODO: Consider re-distritubing interfaces near their original packages\n */\n\n// #region bech32-1\nexport type Bech32Address = `fuel${string}`;\n// #endregion bech32-1\nexport type B256Address = string;\n\nexport type B256AddressEvm = `0x000000000000000000000000${string}`;\n\nexport type Bytes = Uint8Array | number[];\n\nexport type RawSlice = Uint8Array | number[];\n\nexport type BytesLike = Uint8Array | string;\n\n/**\n * @prop value - A 256 bit hash string with the first 12 bytes cleared\n */\nexport type EvmAddress = {\n  value: B256AddressEvm;\n};\n\n/**\n * @prop value - A wrapped 256 bit hash string\n */\nexport type AssetId = {\n  value: B256Address;\n};\n\nexport type StdString = string;\n\n/**\n * @hidden\n */\nexport abstract class AbstractScriptRequest<T> {\n  abstract bytes: Uint8Array;\n  abstract encodeScriptData: (data: T) => Uint8Array;\n}\n\n// #region address-1\nexport abstract class AbstractAddress {\n  abstract toJSON(): string;\n  abstract toString(): string;\n  abstract toAddress(): Bech32Address;\n  abstract toB256(): B256Address;\n  abstract toHexString(): string;\n  abstract toBytes(): Uint8Array;\n  abstract equals(other: AbstractAddress): boolean;\n}\n// #endregion address-1\n\nexport abstract class AbstractAccount {\n  abstract address: AbstractAddress;\n  abstract provider: unknown;\n  abstract getResourcesToSpend(quantities: any[], options?: any): any;\n  abstract sendTransaction(transactionRequest: any): any;\n  abstract simulateTransaction(transactionRequest: any): any;\n  abstract fund(transactionRequest: any, quantities: any, fee: any): Promise<void>;\n}\n/**\n * @hidden\n */\nexport abstract class AbstractProgram {\n  abstract account: AbstractAccount | null;\n  abstract interface: {\n    updateExternalLoggedTypes: (id: string, abiInterface: any) => any;\n  };\n\n  abstract provider: {\n    sendTransaction(transactionRequest: any): any;\n  } | null;\n}\n\nexport abstract class AbstractContract extends AbstractProgram {\n  abstract id: AbstractAddress;\n}\n\n/**\n * @hidden\n */\nexport abstract class AbstractScript extends AbstractProgram {\n  abstract bytes: Uint8Array;\n}\n\n/** A simple type alias defined using the `type` keyword. */\nexport type AddressLike = AbstractAddress | AbstractAccount;\n\nexport type ContractIdLike = AbstractAddress | AbstractContract;\n\n/**\n * @hidden\n */\nexport abstract class AbstractPredicate {\n  abstract bytes: Uint8Array;\n  abstract address: AbstractAddress;\n  abstract predicateData: Uint8Array;\n\n  abstract types?: ReadonlyArray<any>;\n}\n","import { Coder } from '@fuel-ts/abi-coder';\nimport { concat } from '@fuel-ts/utils';\nimport { hexlify, getBytesCopy } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport class ByteArrayCoder extends Coder<BytesLike, string> {\n  length: number;\n  #paddingLength: number;\n\n  constructor(length: number) {\n    const paddingLength = (8 - (length % 8)) % 8;\n    const encodedLength = length + paddingLength;\n    super(\n      'ByteArray',\n      // While this might sound like a [u8; N] coder it's actually not.\n      // A [u8; N] coder would pad every u8 to 8 bytes which would\n      // make every u8 have the same size as a u64.\n      // We are packing four u8s into u64s here, avoiding this padding.\n      `[u64; ${encodedLength / 4}]`,\n      encodedLength\n    );\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n\n  encode(value: BytesLike): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    const data = getBytesCopy(value);\n    parts.push(data);\n    // Write padding\n    if (this.#paddingLength) {\n      parts.push(new Uint8Array(this.#paddingLength));\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = [hexlify(data.slice(o, o + this.length)), o + this.length];\n    const value = decoded;\n    // Read padding\n    if (this.#paddingLength) {\n      [decoded, o] = [null, o + this.#paddingLength];\n    }\n\n    return [value, o];\n  }\n}\n","import { NumberCoder, StructCoder } from '@fuel-ts/abi-coder';\n\nexport type TxPointer = {\n  /** Block height (u32) */\n  blockHeight: number;\n\n  /** Transaction index (u16) */\n  txIndex: number;\n};\n\nexport class TxPointerCoder extends StructCoder<{\n  blockHeight: NumberCoder;\n  txIndex: NumberCoder;\n}> {\n  constructor() {\n    super('TxPointer', {\n      blockHeight: new NumberCoder('u32'),\n      txIndex: new NumberCoder('u16'),\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, U64Coder, B256Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport type { BytesLike } from 'ethers';\nimport { getBytesCopy, sha256 } from 'ethers';\n\nimport { ByteArrayCoder } from './byte-array';\nimport type { TxPointer } from './tx-pointer';\nimport { TxPointerCoder } from './tx-pointer';\n\nexport enum InputType {\n  Coin = 0,\n  Contract = 1,\n  Message = 2,\n}\n\nexport type InputCoin = {\n  type: InputType.Coin;\n\n  /** Hash of transaction (b256) */\n  txID: string;\n\n  /** Index of transaction output (u8) */\n  outputIndex: number;\n\n  /** Owning address or script hash (b256) */\n  owner: string;\n\n  /** Amount of coins (u64) */\n  amount: BN;\n\n  /** Asset ID of the coins (b256) */\n  assetId: string;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: TxPointer;\n\n  /** Index of witness that authorizes spending the coin (u8) */\n  witnessIndex: number;\n\n  /** UTXO being spent must have been created at least this many blocks ago (u32) */\n  maturity: number;\n\n  /** Gas used by predicate (u64) */\n  predicateGasUsed: BN;\n\n  /** Length of predicate, in instructions (u16) */\n  predicateLength: number;\n\n  /** Length of predicate input data, in bytes (u16) */\n  predicateDataLength: number;\n\n  /** Predicate bytecode (byte[]) */\n  predicate: string;\n\n  /** Predicate input data (parameters) (byte[]) */\n  predicateData: string;\n};\n\nexport class InputCoinCoder extends Coder<InputCoin, InputCoin> {\n  constructor() {\n    super('InputCoin', 'struct InputCoin', 0);\n  }\n\n  encode(value: InputCoin): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.txID));\n    parts.push(new NumberCoder('u8').encode(value.outputIndex));\n    parts.push(new B256Coder().encode(value.owner));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new NumberCoder('u8').encode(value.witnessIndex));\n    parts.push(new NumberCoder('u32').encode(value.maturity));\n    parts.push(new U64Coder().encode(value.predicateGasUsed));\n    parts.push(new NumberCoder('u32').encode(value.predicateLength));\n    parts.push(new NumberCoder('u32').encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(value.predicateLength).encode(value.predicate));\n    parts.push(new ByteArrayCoder(value.predicateDataLength).encode(value.predicateData));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputCoin, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const owner = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const maturity = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength).decode(data, o);\n    const predicateData = decoded;\n\n    return [\n      {\n        type: InputType.Coin,\n        txID,\n        outputIndex,\n        owner,\n        amount,\n        assetId,\n        txPointer,\n        witnessIndex,\n        maturity,\n        predicateGasUsed,\n        predicateLength,\n        predicateDataLength,\n        predicate,\n        predicateData,\n      },\n      o,\n    ];\n  }\n}\n\nexport type InputContract = {\n  type: InputType.Contract;\n\n  /** Hash of transaction (b256) */\n  txID: string;\n\n  /** Index of transaction output (u8) */\n  outputIndex: number;\n\n  /** Root of amount of coins owned by contract before transaction execution (b256) */\n  balanceRoot: string;\n\n  /** State root of contract before transaction execution (b256) */\n  stateRoot: string;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: TxPointer;\n\n  /** Contract ID (b256) */\n  contractID: string;\n};\n\nexport class InputContractCoder extends Coder<InputContract, InputContract> {\n  constructor() {\n    super('InputContract', 'struct InputContract', 0);\n  }\n\n  encode(value: InputContract): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.txID));\n    parts.push(new NumberCoder('u8').encode(value.outputIndex));\n    parts.push(new B256Coder().encode(value.balanceRoot));\n    parts.push(new B256Coder().encode(value.stateRoot));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new B256Coder().encode(value.contractID));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputContract, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractID = decoded;\n\n    return [\n      {\n        type: InputType.Contract,\n        txID,\n        outputIndex,\n        balanceRoot,\n        stateRoot,\n        txPointer,\n        contractID,\n      },\n      o,\n    ];\n  }\n}\n\nexport type InputMessage = {\n  type: InputType.Message;\n\n  /** Address of sender */\n  sender: string;\n\n  /** Address of recipient */\n  recipient: string;\n\n  /** Amount of coins */\n  amount: BN;\n\n  /** data of message */\n  data?: string;\n\n  /** Length of predicate, in instructions (u16) */\n  dataLength?: number;\n\n  /** Unique nonce of message */\n  nonce: string;\n\n  /** Index of witness that authorizes message (u8) */\n  witnessIndex: number;\n\n  /** Gas used by predicate (u64) */\n  predicateGasUsed: BN;\n\n  /** Length of predicate, in instructions (u16) */\n  predicateLength: number;\n\n  /** Length of predicate input data, in bytes (u16) */\n  predicateDataLength: number;\n\n  /** Predicate bytecode (byte[]) */\n  predicate: string;\n\n  /** Predicate input data (parameters) (byte[]) */\n  predicateData: string;\n};\n\nexport class InputMessageCoder extends Coder<InputMessage, InputMessage> {\n  constructor() {\n    super('InputMessage', 'struct InputMessage', 0);\n  }\n\n  static getMessageId(\n    value: Pick<InputMessage, 'sender' | 'recipient' | 'nonce' | 'amount' | 'data'>\n  ): string {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(getBytesCopy(value.data || '0x'));\n\n    return sha256(concat(parts));\n  }\n\n  static encodeData(messageData?: BytesLike): Uint8Array {\n    const bytes = getBytesCopy(messageData || '0x');\n    const dataLength = bytes.length;\n    return new ByteArrayCoder(dataLength).encode(bytes);\n  }\n\n  encode(value: InputMessage): Uint8Array {\n    const parts: Uint8Array[] = [];\n    const data = InputMessageCoder.encodeData(value.data);\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new NumberCoder('u8').encode(value.witnessIndex));\n    parts.push(new U64Coder().encode(value.predicateGasUsed));\n    parts.push(new NumberCoder('u16').encode(data.length));\n    parts.push(new NumberCoder('u16').encode(value.predicateLength));\n    parts.push(new NumberCoder('u16').encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(data.length).encode(data));\n    parts.push(new ByteArrayCoder(value.predicateLength).encode(value.predicate));\n    parts.push(new ByteArrayCoder(value.predicateDataLength).encode(value.predicateData));\n\n    return concat(parts);\n  }\n\n  static decodeData(messageData: BytesLike): Uint8Array {\n    const bytes = getBytesCopy(messageData);\n    const dataLength = bytes.length;\n    const [data] = new ByteArrayCoder(dataLength).decode(bytes, 0);\n\n    return getBytesCopy(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputMessage, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const sender = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const recipient = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const nonce = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new U64Coder().decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const messageData = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength).decode(data, o);\n    const predicateData = decoded;\n\n    return [\n      {\n        type: InputType.Message,\n        sender,\n        recipient,\n        amount,\n        witnessIndex,\n        nonce,\n        predicateGasUsed,\n        dataLength,\n        predicateLength,\n        predicateDataLength,\n        data: messageData,\n        predicate,\n        predicateData,\n      },\n      o,\n    ];\n  }\n}\n\nexport type Input = InputCoin | InputContract | InputMessage;\n\nexport class InputCoder extends Coder<Input, Input> {\n  constructor() {\n    super('Input', 'struct Input', 0);\n  }\n\n  encode(value: Input): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (type) {\n      case InputType.Coin: {\n        parts.push(new InputCoinCoder().encode(value));\n        break;\n      }\n      case InputType.Contract: {\n        parts.push(new InputContractCoder().encode(value));\n        break;\n      }\n      case InputType.Message: {\n        parts.push(new InputMessageCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Input, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as InputType;\n    switch (type) {\n      case InputType.Coin: {\n        [decoded, o] = new InputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case InputType.Contract: {\n        [decoded, o] = new InputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case InputType.Message: {\n        [decoded, o] = new InputMessageCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, U64Coder, B256Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nexport enum OutputType /* u8 */ {\n  Coin = 0,\n  Contract = 1,\n  Change = 2,\n  Variable = 3,\n  ContractCreated = 4,\n}\n\nexport type OutputCoin = {\n  type: OutputType.Coin;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputCoinCoder extends Coder<OutputCoin, OutputCoin> {\n  constructor() {\n    super('OutputCoin', 'struct OutputCoin', 0);\n  }\n\n  encode(value: OutputCoin): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputCoin, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Coin,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputContract = {\n  type: OutputType.Contract;\n  /** Index of input contract (u8) */\n  inputIndex: number;\n  /** Root of amount of coins owned by contract after transaction execution (b256) */\n  balanceRoot: string;\n  /** State root of contract after transaction execution (b256) */\n  stateRoot: string;\n};\n\nexport class OutputContractCoder extends Coder<OutputContract, OutputContract> {\n  constructor() {\n    super('OutputContract', 'struct OutputContract', 0);\n  }\n\n  encode(value: OutputContract): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.inputIndex));\n    parts.push(new B256Coder().encode(value.balanceRoot));\n    parts.push(new B256Coder().encode(value.stateRoot));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputContract, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n\n    return [\n      {\n        type: OutputType.Contract,\n        inputIndex,\n        balanceRoot,\n        stateRoot,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputChange = {\n  type: OutputType.Change;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputChangeCoder extends Coder<OutputChange, OutputChange> {\n  constructor() {\n    super('OutputChange', 'struct OutputChange', 0);\n  }\n\n  encode(value: OutputChange): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputChange, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Change,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputVariable = {\n  type: OutputType.Variable;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputVariableCoder extends Coder<OutputVariable, OutputVariable> {\n  constructor() {\n    super('OutputVariable', 'struct OutputVariable', 0);\n  }\n\n  encode(value: OutputVariable): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputVariable, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Variable,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputContractCreated = {\n  type: OutputType.ContractCreated;\n  /** Contract ID (b256) */\n  contractId: string;\n  /** State root of contract (b256) */\n  stateRoot: string;\n};\n\nexport class OutputContractCreatedCoder extends Coder<\n  OutputContractCreated,\n  OutputContractCreated\n> {\n  constructor() {\n    super('OutputContractCreated', 'struct OutputContractCreated', 0);\n  }\n\n  encode(value: OutputContractCreated): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new B256Coder().encode(value.stateRoot));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputContractCreated, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n\n    return [\n      {\n        type: OutputType.ContractCreated,\n        contractId,\n        stateRoot,\n      },\n      o,\n    ];\n  }\n}\n\nexport type Output =\n  | OutputCoin\n  | OutputContract\n  | OutputChange\n  | OutputVariable\n  | OutputContractCreated;\n\nexport class OutputCoder extends Coder<Output, Output> {\n  constructor() {\n    super('Output', ' struct Output', 0);\n  }\n\n  encode(value: Output): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (type) {\n      case OutputType.Coin: {\n        parts.push(new OutputCoinCoder().encode(value));\n        break;\n      }\n      case OutputType.Contract: {\n        parts.push(new OutputContractCoder().encode(value));\n        break;\n      }\n      case OutputType.Change: {\n        parts.push(new OutputChangeCoder().encode(value));\n        break;\n      }\n      case OutputType.Variable: {\n        parts.push(new OutputVariableCoder().encode(value));\n        break;\n      }\n      case OutputType.ContractCreated: {\n        parts.push(new OutputContractCreatedCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Output, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as OutputType;\n    switch (type) {\n      case OutputType.Coin: {\n        [decoded, o] = new OutputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Contract: {\n        [decoded, o] = new OutputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Change: {\n        [decoded, o] = new OutputChangeCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Variable: {\n        [decoded, o] = new OutputVariableCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.ContractCreated: {\n        [decoded, o] = new OutputContractCreatedCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n  }\n}\n","import { Coder, NumberCoder, U64Coder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\n// Bitfield of used policy types.\nexport enum PolicyType {\n  GasPrice = 1,\n  WitnessLimit = 2,\n  Maturity = 4,\n  MaxFee = 8,\n}\n\nexport type Policy = PolicyGasPrice | PolicyWitnessLimit | PolicyMaturity | PolicyMaxFee;\n\nexport type PolicyGasPrice = {\n  type: PolicyType.GasPrice;\n  data: BN;\n};\n\nexport type PolicyWitnessLimit = {\n  type: PolicyType.WitnessLimit;\n  data: BN;\n};\n\nexport type PolicyMaturity = {\n  type: PolicyType.Maturity;\n  data: number;\n};\n\nexport type PolicyMaxFee = {\n  type: PolicyType.MaxFee;\n  data: BN;\n};\n\nexport const sortPolicies = (policies: Policy[]): Policy[] =>\n  policies.sort((a, b) => a.type - b.type);\n\nfunction validateDuplicatedPolicies(policies: Policy[]): void {\n  const seenTypes = new Set<PolicyType>();\n\n  policies.forEach((policy) => {\n    if (seenTypes.has(policy.type)) {\n      throw new FuelError(\n        ErrorCode.DUPLICATED_POLICY,\n        `Duplicate policy type found: ${PolicyType.MaxFee}`\n      );\n    }\n    seenTypes.add(policy.type);\n  });\n}\n\nexport class PoliciesCoder extends Coder<Policy[], Policy[]> {\n  constructor() {\n    super('Policies', 'array Policy', 0);\n  }\n\n  encode(policies: Policy[]): Uint8Array {\n    validateDuplicatedPolicies(policies);\n    const sortedPolicies = sortPolicies(policies);\n\n    const parts: Uint8Array[] = [];\n\n    sortedPolicies.forEach(({ data, type }) => {\n      switch (type) {\n        case PolicyType.MaxFee:\n        case PolicyType.GasPrice:\n        case PolicyType.WitnessLimit:\n          parts.push(new U64Coder().encode(data));\n          break;\n\n        case PolicyType.Maturity:\n          parts.push(new NumberCoder('u32').encode(data));\n          break;\n\n        default: {\n          throw new FuelError(ErrorCode.INVALID_POLICY_TYPE, `Invalid policy type: ${type}`);\n        }\n      }\n    });\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number, policyTypes: number): [Policy[], number] {\n    let o = offset;\n    const policies: Policy[] = [];\n\n    if (policyTypes & PolicyType.GasPrice) {\n      const [gasPrice, nextOffset] = new U64Coder().decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.GasPrice, data: gasPrice });\n    }\n\n    if (policyTypes & PolicyType.WitnessLimit) {\n      const [witnessLimit, nextOffset] = new U64Coder().decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.WitnessLimit, data: witnessLimit });\n    }\n\n    if (policyTypes & PolicyType.Maturity) {\n      const [maturity, nextOffset] = new NumberCoder('u32').decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.Maturity, data: maturity });\n    }\n\n    if (policyTypes & PolicyType.MaxFee) {\n      const [maxFee, nextOffset] = new U64Coder().decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.MaxFee, data: maxFee });\n    }\n\n    return [policies, o];\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, U64Coder, B256Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport { getBytesCopy, sha256 } from 'ethers';\n\nimport { ByteArrayCoder } from './byte-array';\n\nexport enum ReceiptType /* u8 */ {\n  Call = 0,\n  Return = 1,\n  ReturnData = 2,\n  Panic = 3,\n  Revert = 4,\n  Log = 5,\n  LogData = 6,\n  Transfer = 7,\n  TransferOut = 8,\n  ScriptResult = 9,\n  MessageOut = 10,\n  Mint = 11,\n  Burn = 12,\n}\n\nexport type ReceiptCall = {\n  type: ReceiptType.Call;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Contract ID of called contract (b256) */\n  to: string;\n  /** Amount of coins to forward, i.e. $rB (u64) */\n  amount: BN;\n  /** Asset ID of coins to forward, i.e. MEM[$rC, 32] (b256) */\n  assetId: string;\n  /** Gas to forward, i.e. $rD (u64) */\n  gas: BN;\n  /** First parameter (u64) */\n  param1: BN;\n  /** Second parameter (u64) */\n  param2: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptCallCoder extends Coder<ReceiptCall, ReceiptCall> {\n  constructor() {\n    super('ReceiptCall', 'struct ReceiptCall', 0);\n  }\n\n  encode(value: ReceiptCall): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new U64Coder().encode(value.gas));\n    parts.push(new U64Coder().encode(value.param1));\n    parts.push(new U64Coder().encode(value.param2));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptCall, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const gas = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const param1 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const param2 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Call,\n        from,\n        to,\n        amount,\n        assetId,\n        gas,\n        param1,\n        param2,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptReturn = {\n  type: ReceiptType.Return;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptReturnCoder extends Coder<ReceiptReturn, ReceiptReturn> {\n  constructor() {\n    super('ReceiptReturn', 'struct ReceiptReturn', 0);\n  }\n\n  encode(value: ReceiptReturn): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.val));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptReturn, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Return,\n        id,\n        val,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptReturnData = {\n  type: ReceiptType.ReturnData;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  ptr: BN;\n  /** Value of register $rB (u64) */\n  len: BN;\n  /** Hash of MEM[$rA, $rB] (b256) */\n  digest: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptReturnDataCoder extends Coder<ReceiptReturnData, ReceiptReturnData> {\n  constructor() {\n    super('ReceiptReturnData', 'struct ReceiptReturnData', 0);\n  }\n\n  encode(value: ReceiptReturnData): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.ptr));\n    parts.push(new U64Coder().encode(value.len));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptReturnData, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const ptr = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.ReturnData,\n        id,\n        ptr,\n        len,\n        digest,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptPanic = {\n  type: ReceiptType.Panic;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Panic reason (u64) */\n  reason: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n  /** Value of optional contract ID */\n  contractId: string;\n};\n\nexport class ReceiptPanicCoder extends Coder<ReceiptPanic, ReceiptPanic> {\n  constructor() {\n    super('ReceiptPanic', 'struct ReceiptPanic', 0);\n  }\n\n  encode(value: ReceiptPanic): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.reason));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n    parts.push(new B256Coder().encode(value.contractId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptPanic, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const reason = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n\n    return [\n      {\n        type: ReceiptType.Panic,\n        id,\n        reason,\n        pc,\n        is,\n        contractId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptRevert = {\n  type: ReceiptType.Revert;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptRevertCoder extends Coder<ReceiptRevert, ReceiptRevert> {\n  constructor() {\n    super('ReceiptRevert', 'struct ReceiptRevert', 0);\n  }\n\n  encode(value: ReceiptRevert): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.val));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptRevert, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Revert,\n        id,\n        val,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptLog = {\n  type: ReceiptType.Log;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val0: BN;\n  /** Value of register $rB (u64) */\n  val1: BN;\n  /** Value of register $rC (u64) */\n  val2: BN;\n  /** Value of register $rD (u64) */\n  val3: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptLogCoder extends Coder<ReceiptLog, ReceiptLog> {\n  constructor() {\n    super('ReceiptLog', 'struct ReceiptLog', 0);\n  }\n\n  encode(value: ReceiptLog): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.val0));\n    parts.push(new U64Coder().encode(value.val1));\n    parts.push(new U64Coder().encode(value.val2));\n    parts.push(new U64Coder().encode(value.val3));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptLog, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val0 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val1 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val2 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val3 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Log,\n        id,\n        val0,\n        val1,\n        val2,\n        val3,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptLogData = {\n  type: ReceiptType.LogData;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val0: BN;\n  /** Value of register $rB (u64) */\n  val1: BN;\n  /** Value of register $rC (u64) */\n  ptr: BN;\n  /** Value of register $rD (u64) */\n  len: BN;\n  /** Hash of MEM[$rC, $rD] (b256) */\n  digest: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptLogDataCoder extends Coder<ReceiptLogData, ReceiptLogData> {\n  constructor() {\n    super('ReceiptLogData', 'struct ReceiptLogData', 0);\n  }\n\n  encode(value: ReceiptLogData): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new U64Coder().encode(value.val0));\n    parts.push(new U64Coder().encode(value.val1));\n    parts.push(new U64Coder().encode(value.ptr));\n    parts.push(new U64Coder().encode(value.len));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptLogData, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val0 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val1 = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const ptr = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.LogData,\n        id,\n        val0,\n        val1,\n        ptr,\n        len,\n        digest,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptTransfer = {\n  type: ReceiptType.Transfer;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Contract ID of contract to transfer coins to (b256) */\n  to: string;\n  /** Amount of coins transferred (u64) */\n  amount: BN;\n  /** Asset ID of coins transferred (b256) */\n  assetId: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptTransferCoder extends Coder<ReceiptTransfer, ReceiptTransfer> {\n  constructor() {\n    super('ReceiptTransfer', 'struct ReceiptTransfer', 0);\n  }\n\n  encode(value: ReceiptTransfer): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptTransfer, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Transfer,\n        from,\n        to,\n        amount,\n        assetId,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptTransferOut = {\n  type: ReceiptType.TransferOut;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Address to transfer coins to (b256) */\n  to: string;\n  /** Amount of coins transferred (u64) */\n  amount: BN;\n  /** Asset ID of coins transferred (b256) */\n  assetId: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptTransferOutCoder extends Coder<ReceiptTransferOut, ReceiptTransferOut> {\n  constructor() {\n    super('ReceiptTransferOut', 'struct ReceiptTransferOut', 0);\n  }\n\n  encode(value: ReceiptTransferOut): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptTransferOut, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.TransferOut,\n        from,\n        to,\n        amount,\n        assetId,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptScriptResult = {\n  type: ReceiptType.ScriptResult;\n  /** Result variant with embedded `PanicReason` in first 8 bits and `instr` (u64) */\n  result: BN;\n  /** Gas consumed by the script (u64) */\n  gasUsed: BN;\n};\n\nexport class ReceiptScriptResultCoder extends Coder<ReceiptScriptResult, ReceiptScriptResult> {\n  constructor() {\n    super('ReceiptScriptResult', 'struct ReceiptScriptResult', 0);\n  }\n\n  encode(value: ReceiptScriptResult): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new U64Coder().encode(value.result));\n    parts.push(new U64Coder().encode(value.gasUsed));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptScriptResult, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new U64Coder().decode(data, o);\n    const result = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const gasUsed = decoded;\n\n    return [\n      {\n        type: ReceiptType.ScriptResult,\n        result,\n        gasUsed,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptMessageOut = {\n  type: ReceiptType.MessageOut;\n  /** Hexadecimal string representation of the 256-bit (32-byte) message ID */\n  messageId: string;\n  /** Hexadecimal string representation of the 256-bit (32-byte) address of the message sender: MEM[$fp, 32] */\n  sender: string;\n  /** Hexadecimal string representation of the 256-bit (32-byte) address of the message recipient: MEM[$rA, 32] */\n  recipient: string;\n  /** Hexadecimal string representation of a 64-bit unsigned integer; value of register $rD */\n  amount: BN;\n  /** Hexadecimal string representation of the 256-bit (32-byte) message nonce */\n  nonce: string;\n  /** Hexadecimal string representation of 256-bit (32-byte), hash of MEM[$rA + 32, $rB] */\n  digest: string;\n  /** Hexadecimal string representation of the value of the memory range MEM[$rA + 32, $rB] */\n  data: Uint8Array;\n};\n\nexport class ReceiptMessageOutCoder extends Coder<ReceiptMessageOut, ReceiptMessageOut> {\n  constructor() {\n    super('ReceiptMessageOut', 'struct ReceiptMessageOut', 0);\n  }\n\n  static getMessageId(\n    value: Pick<ReceiptMessageOut, 'sender' | 'recipient' | 'nonce' | 'amount' | 'data'>\n  ): string {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(getBytesCopy(value.data || '0x'));\n\n    return sha256(concat(parts));\n  }\n\n  encode(value: Omit<ReceiptMessageOut, 'messageId'>): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.sender));\n    parts.push(new B256Coder().encode(value.recipient));\n    parts.push(new U64Coder().encode(value.amount));\n    parts.push(new B256Coder().encode(value.nonce));\n    parts.push(new NumberCoder('u16').encode(value.data.length));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new ByteArrayCoder(value.data.length).encode(value.data));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptMessageOut, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const sender = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const recipient = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const nonce = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new ByteArrayCoder(len).decode(data, o);\n    const messageData = getBytesCopy(decoded);\n\n    const receiptMessageOut: ReceiptMessageOut = {\n      type: ReceiptType.MessageOut,\n      messageId: '',\n      sender,\n      recipient,\n      amount,\n      nonce,\n      digest,\n      data: messageData,\n    };\n    receiptMessageOut.messageId = ReceiptMessageOutCoder.getMessageId(receiptMessageOut);\n\n    return [receiptMessageOut, o];\n  }\n}\n\nexport type ReceiptMint = {\n  type: ReceiptType.Mint;\n\n  subId: string;\n\n  contractId: string;\n\n  assetId: string;\n\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nconst getAssetIdForMintAndBurnReceipts = (contractId: string, subId: string): string => {\n  const contractIdBytes = getBytesCopy(contractId);\n  const subIdBytes = getBytesCopy(subId);\n\n  return sha256(concat([contractIdBytes, subIdBytes]));\n};\n\nexport class ReceiptMintCoder extends Coder<ReceiptMint, ReceiptMint> {\n  constructor() {\n    super('ReceiptMint', 'struct ReceiptMint', 0);\n  }\n\n  static getAssetId(contractId: string, subId: string): string {\n    return getAssetIdForMintAndBurnReceipts(contractId, subId);\n  }\n\n  encode(value: ReceiptMint): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.subId));\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new U64Coder().encode(value.val));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptMint, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const subId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n    const receiptMint: ReceiptMint = {\n      type: ReceiptType.Mint,\n      subId,\n      contractId,\n      val,\n      pc,\n      is,\n      assetId,\n    };\n\n    return [receiptMint, o];\n  }\n}\n\nexport type ReceiptBurn = {\n  type: ReceiptType.Burn;\n\n  subId: string;\n\n  contractId: string;\n\n  assetId: string;\n\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptBurnCoder extends Coder<ReceiptBurn, ReceiptBurn> {\n  constructor() {\n    super('ReceiptBurn', 'struct ReceiptBurn', 0);\n  }\n\n  static getAssetId(contractId: string, subId: string): string {\n    return getAssetIdForMintAndBurnReceipts(contractId, subId);\n  }\n\n  encode(value: ReceiptBurn): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.subId));\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new U64Coder().encode(value.val));\n    parts.push(new U64Coder().encode(value.pc));\n    parts.push(new U64Coder().encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptBurn, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const subId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const val = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const is = decoded;\n\n    const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n    const receiptBurn: ReceiptBurn = {\n      type: ReceiptType.Burn,\n      subId,\n      contractId,\n      val,\n      pc,\n      is,\n      assetId,\n    };\n\n    return [receiptBurn, o];\n  }\n}\n\nexport type Receipt =\n  | ReceiptCall\n  | ReceiptReturn\n  | ReceiptReturnData\n  | ReceiptPanic\n  | ReceiptRevert\n  | ReceiptLog\n  | ReceiptLogData\n  | ReceiptTransfer\n  | ReceiptTransferOut\n  | ReceiptScriptResult\n  | ReceiptMessageOut\n  | ReceiptMint\n  | ReceiptBurn;\n\nexport class ReceiptCoder extends Coder<Receipt, Receipt> {\n  constructor() {\n    super('Receipt', 'struct Receipt', 0);\n  }\n\n  encode(value: Receipt): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (value.type) {\n      case ReceiptType.Call: {\n        parts.push(new ReceiptCallCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Return: {\n        parts.push(new ReceiptReturnCoder().encode(value));\n        break;\n      }\n      case ReceiptType.ReturnData: {\n        parts.push(new ReceiptReturnDataCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Panic: {\n        parts.push(new ReceiptPanicCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Revert: {\n        parts.push(new ReceiptRevertCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Log: {\n        parts.push(new ReceiptLogCoder().encode(value));\n        break;\n      }\n      case ReceiptType.LogData: {\n        parts.push(new ReceiptLogDataCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Transfer: {\n        parts.push(new ReceiptTransferCoder().encode(value));\n        break;\n      }\n      case ReceiptType.TransferOut: {\n        parts.push(new ReceiptTransferOutCoder().encode(value));\n        break;\n      }\n      case ReceiptType.ScriptResult: {\n        parts.push(new ReceiptScriptResultCoder().encode(value));\n        break;\n      }\n      case ReceiptType.MessageOut: {\n        parts.push(new ReceiptMessageOutCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Mint: {\n        parts.push(new ReceiptMintCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Burn: {\n        parts.push(new ReceiptBurnCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${type}`);\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Receipt, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as ReceiptType;\n    switch (type) {\n      case ReceiptType.Call: {\n        [decoded, o] = new ReceiptCallCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Return: {\n        [decoded, o] = new ReceiptReturnCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.ReturnData: {\n        [decoded, o] = new ReceiptReturnDataCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Panic: {\n        [decoded, o] = new ReceiptPanicCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Revert: {\n        [decoded, o] = new ReceiptRevertCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Log: {\n        [decoded, o] = new ReceiptLogCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.LogData: {\n        [decoded, o] = new ReceiptLogDataCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Transfer: {\n        [decoded, o] = new ReceiptTransferCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.TransferOut: {\n        [decoded, o] = new ReceiptTransferOutCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.ScriptResult: {\n        [decoded, o] = new ReceiptScriptResultCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.MessageOut: {\n        [decoded, o] = new ReceiptMessageOutCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Mint: {\n        [decoded, o] = new ReceiptMintCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Burn: {\n        [decoded, o] = new ReceiptBurnCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${type}`);\n      }\n    }\n  }\n}\n","import { B256Coder, StructCoder } from '@fuel-ts/abi-coder';\n\nexport type StorageSlot = {\n  /** Key (b256) */\n  key: string;\n  /** Value (b256) */\n  value: string;\n};\n\nexport class StorageSlotCoder extends StructCoder<{\n  key: B256Coder;\n  value: B256Coder;\n}> {\n  constructor() {\n    super('StorageSlot', {\n      key: new B256Coder(),\n      value: new B256Coder(),\n    });\n  }\n}\n","import { Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { concat } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\n\nexport type Witness = {\n  /** Length of witness data byte array */\n  dataLength: number;\n  /** Witness data (byte[]) */\n  data: string;\n};\n\nexport class WitnessCoder extends Coder<Witness, Witness> {\n  constructor() {\n    super(\n      'Witness',\n      // Types of dynamic length are not supported in the ABI\n      'unknown',\n      0\n    );\n  }\n\n  encode(value: Witness): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u16').encode(value.dataLength));\n    parts.push(new ByteArrayCoder(value.dataLength).encode(value.data));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Witness, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const witnessData = decoded;\n\n    return [\n      {\n        dataLength,\n        data: witnessData,\n      },\n      o,\n    ];\n  }\n}\n","/* eslint-disable max-classes-per-file */\n\nimport { Coder, ArrayCoder, U64Coder, B256Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { type BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\nimport type { Input, InputContract } from './input';\nimport { InputCoder, InputContractCoder } from './input';\nimport type { Output, OutputContract } from './output';\nimport { OutputCoder, OutputContractCoder } from './output';\nimport type { Policy } from './policy';\nimport { PoliciesCoder } from './policy';\nimport { StorageSlotCoder } from './storage-slot';\nimport type { StorageSlot } from './storage-slot';\nimport type { TxPointer } from './tx-pointer';\nimport { TxPointerCoder } from './tx-pointer';\nimport type { Witness } from './witness';\nimport { WitnessCoder } from './witness';\n\nexport enum TransactionType /* u8 */ {\n  Script = 0,\n  Create = 1,\n  Mint = 2,\n}\n\nexport type TransactionScript = {\n  type: TransactionType.Script;\n\n  /** Gas limit for transaction (u64) */\n  scriptGasLimit: BN;\n\n  /** Script length, in instructions (u16) */\n  scriptLength: number;\n\n  /** Length of script input data, in bytes (u16) */\n  scriptDataLength: number;\n\n  /** Bitfield of used policy types (u32) */\n  policyTypes: number;\n\n  /** Number of inputs (u8) */\n  inputsCount: number;\n\n  /** Number of outputs (u8) */\n  outputsCount: number;\n\n  /** Number of witnesses (u8) */\n  witnessesCount: number;\n\n  /** Merkle root of receipts (b256) */\n  receiptsRoot: string;\n\n  /** Script to execute (byte[]) */\n  script: string;\n\n  /** Script input data (parameters) (byte[]) */\n  scriptData: string;\n\n  /** List of inputs (Input[]) */\n  inputs: Input[];\n\n  /** List of policies, sorted by PolicyType. */\n  policies: Policy[];\n\n  /** List of outputs (Output[]) */\n  outputs: Output[];\n\n  /** List of witnesses (Witness[]) */\n  witnesses: Witness[];\n};\n\nexport class TransactionScriptCoder extends Coder<TransactionScript, TransactionScript> {\n  constructor() {\n    super('TransactionScript', 'struct TransactionScript', 0);\n  }\n\n  encode(value: TransactionScript): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new U64Coder().encode(value.scriptGasLimit));\n    parts.push(new NumberCoder('u16').encode(value.scriptLength));\n    parts.push(new NumberCoder('u16').encode(value.scriptDataLength));\n    parts.push(new NumberCoder('u32').encode(value.policyTypes));\n    parts.push(new NumberCoder('u8').encode(value.inputsCount));\n    parts.push(new NumberCoder('u8').encode(value.outputsCount));\n    parts.push(new NumberCoder('u8').encode(value.witnessesCount));\n    parts.push(new B256Coder().encode(value.receiptsRoot));\n    parts.push(new ByteArrayCoder(value.scriptLength).encode(value.script));\n    parts.push(new ByteArrayCoder(value.scriptDataLength).encode(value.scriptData));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionScript, number] {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const scriptGasLimit = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const scriptLength = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const scriptDataLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const receiptsRoot = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptLength).decode(data, o);\n    const script = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptDataLength).decode(data, o);\n    const scriptData = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n\n    return [\n      {\n        type: TransactionType.Script,\n        scriptGasLimit,\n        scriptLength,\n        scriptDataLength,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        receiptsRoot,\n        script,\n        scriptData,\n        policies,\n        inputs,\n        outputs,\n        witnesses,\n      },\n      o,\n    ];\n  }\n}\n\nexport type TransactionCreate = {\n  type: TransactionType.Create;\n\n  /** Contract bytecode length, in instructions (u16) */\n  bytecodeLength: number;\n\n  /** Witness index of contract bytecode to create (u8) */\n  bytecodeWitnessIndex: number;\n\n  /** Bitfield of used policy types (u32) */\n  policyTypes: number;\n\n  /** Number of storage slots to initialize (u16) */\n  storageSlotsCount: number;\n\n  /** Number of inputs (u8) */\n  inputsCount: number;\n\n  /** Number of outputs (u8) */\n  outputsCount: number;\n\n  /** Number of witnesses (u8) */\n  witnessesCount: number;\n\n  /** Salt (b256) */\n  salt: string;\n\n  /** List of policies. */\n  policies: Policy[];\n\n  /** List of inputs (StorageSlot[]) */\n  storageSlots: StorageSlot[];\n\n  /** List of inputs (Input[]) */\n  inputs: Input[];\n\n  /** List of outputs (Output[]) */\n  outputs: Output[];\n\n  /** List of witnesses (Witness[]) */\n  witnesses: Witness[];\n};\n\nexport class TransactionCreateCoder extends Coder<TransactionCreate, TransactionCreate> {\n  constructor() {\n    super('TransactionCreate', 'struct TransactionCreate', 0);\n  }\n\n  encode(value: TransactionCreate): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u16').encode(value.bytecodeLength));\n    parts.push(new NumberCoder('u8').encode(value.bytecodeWitnessIndex));\n    parts.push(new NumberCoder('u32').encode(value.policyTypes));\n    parts.push(new NumberCoder('u16').encode(value.storageSlotsCount));\n    parts.push(new NumberCoder('u8').encode(value.inputsCount));\n    parts.push(new NumberCoder('u8').encode(value.outputsCount));\n    parts.push(new NumberCoder('u8').encode(value.witnessesCount));\n    parts.push(new B256Coder().encode(value.salt));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(\n      new ArrayCoder(new StorageSlotCoder(), value.storageSlotsCount).encode(value.storageSlots)\n    );\n    parts.push(new ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionCreate, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const bytecodeLength = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const bytecodeWitnessIndex = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const storageSlotsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const salt = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new ArrayCoder(new StorageSlotCoder(), storageSlotsCount).decode(data, o);\n    const storageSlots = decoded;\n    [decoded, o] = new ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n\n    return [\n      {\n        type: TransactionType.Create,\n        bytecodeLength,\n        bytecodeWitnessIndex,\n        policyTypes,\n        storageSlotsCount,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        salt,\n        policies,\n        storageSlots,\n        inputs,\n        outputs,\n        witnesses,\n      },\n      o,\n    ];\n  }\n}\n\nexport type TransactionMint = {\n  type: TransactionType.Mint;\n\n  /** The location of the Mint transaction in the block. */\n  txPointer: TxPointer;\n\n  /** The contract utxo that assets are minted to. */\n  inputContract: InputContract;\n\n  /** The contract utxo that assets are being minted to. */\n  outputContract: OutputContract;\n\n  /** The amount of funds minted. */\n  mintAmount: BN;\n\n  /** The asset ID corresponding to the minted amount. */\n  mintAssetId: string;\n};\n\nexport class TransactionMintCoder extends Coder<TransactionMint, TransactionMint> {\n  constructor() {\n    super('TransactionMint', 'struct TransactionMint', 0);\n  }\n\n  encode(value: TransactionMint): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new InputContractCoder().encode(value.inputContract));\n    parts.push(new OutputContractCoder().encode(value.outputContract));\n    parts.push(new U64Coder().encode(value.mintAmount));\n    parts.push(new B256Coder().encode(value.mintAssetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionMint, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new InputContractCoder().decode(data, o);\n    const inputContract = decoded;\n    [decoded, o] = new OutputContractCoder().decode(data, o);\n    const outputContract = decoded;\n    [decoded, o] = new U64Coder().decode(data, o);\n    const mintAmount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const mintAssetId = decoded;\n\n    return [\n      {\n        type: TransactionType.Mint,\n        txPointer,\n        inputContract,\n        outputContract,\n        mintAmount,\n        mintAssetId,\n      },\n      o,\n    ];\n  }\n}\ntype PossibleTransactions = TransactionScript | TransactionCreate | TransactionMint;\nexport type Transaction<TTransactionType = void> = TTransactionType extends TransactionType\n  ? Extract<PossibleTransactions, { type: TTransactionType }>\n  : Partial<Omit<TransactionScript, 'type'>> &\n      Partial<Omit<TransactionCreate, 'type'>> &\n      Partial<Omit<TransactionMint, 'type'>> & {\n        type: TransactionType;\n      };\n\nexport class TransactionCoder extends Coder<Transaction, Transaction> {\n  constructor() {\n    super('Transaction', 'struct Transaction', 0);\n  }\n\n  encode(value: Transaction): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (value.type) {\n      case TransactionType.Script: {\n        parts.push(\n          new TransactionScriptCoder().encode(value as Transaction<TransactionType.Script>)\n        );\n        break;\n      }\n      case TransactionType.Create: {\n        parts.push(\n          new TransactionCreateCoder().encode(value as Transaction<TransactionType.Create>)\n        );\n        break;\n      }\n      case TransactionType.Mint: {\n        parts.push(new TransactionMintCoder().encode(value as Transaction<TransactionType.Mint>));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_TYPE,\n          `Invalid transaction type: ${type}`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Transaction, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as TransactionType;\n\n    switch (type) {\n      case TransactionType.Script: {\n        [decoded, o] = new TransactionScriptCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case TransactionType.Create: {\n        [decoded, o] = new TransactionCreateCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case TransactionType.Mint: {\n        [decoded, o] = new TransactionMintCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_TYPE,\n          `Invalid transaction type: ${type}`\n        );\n      }\n    }\n  }\n}\n","/** Maximum contract size, in bytes. */\nexport const CONTRACT_MAX_SIZE = 16 * 1024;\n\n/** Maximum number of witnesses. */\nexport const MAX_WITNESSES = 16;\n\n/**\n * Gas Price factor this is used to calculate\n * This is used to calculate the gas fee in Native Coins.\n * Ex.: transactionFee = Math.ceil(<gasUsed> / MAX_GAS_PER_TX);\n */\n\n// TODO: set max script length const\n/** Maximum length of script, in instructions. */\nexport const MAX_SCRIPT_LENGTH = 1024 * 1024 * 1024;\n\n// TODO: set max script length const\n/** Maximum length of script data, in bytes. */\nexport const MAX_SCRIPT_DATA_LENGTH = 1024 * 1024 * 1024;\n\n/** Maximum number of static contracts. */\nexport const MAX_STATIC_CONTRACTS = 255;\n\n// TODO: set max predicate length value\n/** Maximum length of predicate, in instructions. */\nexport const MAX_PREDICATE_LENGTH = 1024 * 1024;\n\n// TODO: set max predicate data length value\n/** Maximum length of predicate data, in bytes. */\nexport const MAX_PREDICATE_DATA_LENGTH = 1024 * 1024;\n\n// Revert with this value for a failing call to `std::revert::require`.\nexport const FAILED_REQUIRE_SIGNAL = '0xffffffffffff0000';\n\n// Revert with this value for a failing call to `std::token::transfer_to_address`.\nexport const FAILED_TRANSFER_TO_ADDRESS_SIGNAL = '0xffffffffffff0001';\n\n// Revert with this value for a failing call to `std::message::send_message`.\nexport const FAILED_SEND_MESSAGE_SIGNAL = '0xffffffffffff0002';\n\n// Revert with this value for a failing call to `std::assert::assert_eq`.\nexport const FAILED_ASSERT_EQ_SIGNAL = '0xffffffffffff0003';\n\n// Revert with this value for a failing call to `std::assert::assert`.\nexport const FAILED_ASSERT_SIGNAL = '0xffffffffffff0004';\n\nexport const FAILED_UNKNOWN_SIGNAL = '0x0';\n","export const ZeroBytes32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const BaseAssetId = ZeroBytes32;\nexport const EmptyRoot = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\n","import { randomBytes } from '@fuel-ts/crypto';\nimport { FuelError } from '@fuel-ts/errors';\nimport { AbstractContract, AbstractAccount } from '@fuel-ts/interfaces';\nimport type {\n  Bech32Address,\n  B256Address,\n  AddressLike,\n  ContractIdLike,\n  AbstractAddress,\n  B256AddressEvm,\n} from '@fuel-ts/interfaces';\nimport type { Decoded } from 'bech32';\nimport { bech32m } from 'bech32';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\n/**\n * Fuel Network HRP (human-readable part) for bech32 encoding\n *\n * @hidden\n */\nexport const FUEL_BECH32_HRP_PREFIX = 'fuel';\n\n/**\n * Decodes a Bech32 address string into Decoded\n *\n * @hidden\n */\nexport function fromBech32(address: Bech32Address): Decoded {\n  return bech32m.decode(address);\n}\n\n/**\n * Converts a B256 address string into Bech32\n *\n * @hidden\n */\nexport function toBech32(address: B256Address): Bech32Address {\n  return bech32m.encode(\n    FUEL_BECH32_HRP_PREFIX,\n    bech32m.toWords(getBytesCopy(hexlify(address)))\n  ) as Bech32Address;\n}\n\n/**\n * Determines if a given string is Bech32 format\n *\n * @hidden\n */\nexport function isBech32(address: BytesLike): boolean {\n  return (\n    typeof address === 'string' &&\n    address.indexOf(FUEL_BECH32_HRP_PREFIX + 1) === 0 &&\n    fromBech32(address as Bech32Address).prefix === FUEL_BECH32_HRP_PREFIX\n  );\n}\n\n/**\n * Determines if a given string is B256 format\n *\n * @hidden\n */\nexport function isB256(address: string): boolean {\n  return address.length === 66 && /(0x)[0-9a-f]{64}$/i.test(address);\n}\n\n/**\n * Determines if a given string is in Public Key format (512 bits)\n *\n * @hidden\n */\nexport function isPublicKey(address: string): boolean {\n  return address.length === 130 && /(0x)[0-9a-f]{128}$/i.test(address);\n}\n\n/**\n * Determines if a given string is in EVM Address format\n *\n * @hidden\n */\nexport function isEvmAddress(address: string): boolean {\n  return address.length === 42 && /(0x)[0-9a-f]{40}$/i.test(address);\n}\n\n/**\n * Takes a Bech32 address and returns the byte data\n *\n * @hidden\n */\nexport function getBytesFromBech32(address: Bech32Address): Uint8Array {\n  return new Uint8Array(bech32m.fromWords(fromBech32(address).words));\n}\n\n/**\n * Converts a Bech32 address string into B256\n *\n * @hidden\n */\nexport function toB256(address: Bech32Address): B256Address {\n  if (!isBech32(address)) {\n    throw new FuelError(\n      FuelError.CODES.INVALID_BECH32_ADDRESS,\n      `Invalid Bech32 Address: ${address}.`\n    );\n  }\n\n  return hexlify(getBytesFromBech32(address));\n}\n\n/**\n * Takes a Bech32 address and returns a normalized (i.e. lower case) representation of it.\n *\n * The input is validated along the way, which makes this significantly safer than\n * using `address.toLowerCase()`.\n *\n * @hidden\n */\nexport function normalizeBech32(address: Bech32Address): Bech32Address {\n  const { words } = fromBech32(address);\n  return bech32m.encode(FUEL_BECH32_HRP_PREFIX, words) as Bech32Address;\n}\n\n/**\n * Takes an indeterminate address type and returns an address\n *\n * @hidden\n */\nexport const addressify = (addressLike: AddressLike | ContractIdLike): AbstractAddress => {\n  if (addressLike instanceof AbstractAccount) {\n    return addressLike.address;\n  }\n\n  if (addressLike instanceof AbstractContract) {\n    return addressLike.id;\n  }\n\n  return addressLike;\n};\n\n/**\n * @hidden\n */\nexport const getRandomB256 = () => hexlify(randomBytes(32));\n\n/**\n * Takes a B256 address and clears the first 12 bytes, this is required for an EVM Address\n *\n * @param b256 - the address to clear\n * @returns b256 with first 12 bytes cleared\n *\n * @hidden\n */\nexport const clearFirst12BytesFromB256 = (b256: B256Address): B256AddressEvm => {\n  let bytes;\n\n  try {\n    if (!isB256(b256)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_BECH32_ADDRESS,\n        `Invalid Bech32 Address: ${b256}.`\n      );\n    }\n\n    bytes = getBytesFromBech32(toBech32(b256));\n    bytes = hexlify(bytes.fill(0, 0, 12)) as B256AddressEvm;\n  } catch (error) {\n    throw new FuelError(\n      FuelError.CODES.PARSE_FAILED,\n      `Cannot generate EVM Address B256 from: ${b256}.`\n    );\n  }\n\n  return bytes;\n};\n\n/**\n * Pads the first 12 bytes of an Evm address. This is useful for padding addresses returned from\n * the EVM to interact with the Sway EVM Address Type.\n *\n * @param address - Evm address to be padded\n * @returns Evm address padded to a b256 address\n *\n * @hidden\n */\nexport const padFirst12BytesOfEvmAddress = (address: string): B256AddressEvm => {\n  if (!isEvmAddress(address)) {\n    throw new FuelError(FuelError.CODES.INVALID_EVM_ADDRESS, 'Invalid EVM address format.');\n  }\n\n  return address.replace('0x', '0x000000000000000000000000') as B256AddressEvm;\n};\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","import { FuelError } from '@fuel-ts/errors';\nimport { AbstractAddress } from '@fuel-ts/interfaces';\nimport type { Bech32Address, B256Address, EvmAddress, AssetId } from '@fuel-ts/interfaces';\nimport { getBytesCopy, hexlify, sha256 } from 'ethers';\n\nimport {\n  normalizeBech32,\n  isBech32,\n  toB256,\n  getBytesFromBech32,\n  toBech32,\n  getRandomB256,\n  isPublicKey,\n  isB256,\n  clearFirst12BytesFromB256,\n  isEvmAddress,\n  padFirst12BytesOfEvmAddress,\n} from './utils';\n\n/**\n * `Address` provides a type safe wrapper for converting between different address formats\n * ands comparing them for equality.\n */\nexport default class Address extends AbstractAddress {\n  // #region address-2\n  readonly bech32Address: Bech32Address;\n  // #endregion address-2\n\n  /**\n   * @param address - A Bech32 address\n   */\n  constructor(address: Bech32Address) {\n    super();\n    this.bech32Address = normalizeBech32(address);\n\n    if (!isBech32(this.bech32Address)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_BECH32_ADDRESS,\n        `Invalid Bech32 Address: ${address}.`\n      );\n    }\n  }\n\n  /**\n   * Returns the `bech32Address` property\n   *\n   * @returns The `bech32Address` property\n   */\n  toAddress(): Bech32Address {\n    return this.bech32Address;\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property to a 256 bit hash string\n   *\n   * @returns The `bech32Address` property as a 256 bit hash string\n   */\n  toB256(): B256Address {\n    return toB256(this.bech32Address);\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property to a byte array\n   *\n   * @returns The `bech32Address` property as a byte array\n   */\n  toBytes(): Uint8Array {\n    return getBytesFromBech32(this.bech32Address);\n  }\n\n  /**\n   * Converts\n   *\n   * @returns The `bech32Address` property as a 256 bit hash string\n   */\n  toHexString(): B256Address {\n    return this.toB256();\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property as a string\n   *\n   * @returns The `bech32Address` property as a string\n   */\n  toString(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property as a string\n   *\n   * @returns The `bech32Address` property as a string\n   */\n  toJSON(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Clears the first 12 bytes of the `bech32Address` property and returns it as a `EvmAddress`\n   *\n   * @returns The `bech32Address` property as an {@link EvmAddress | `EvmAddress`}\n   */\n  toEvmAddress(): EvmAddress {\n    const b256Address = toB256(this.bech32Address);\n\n    return {\n      value: clearFirst12BytesFromB256(b256Address),\n    } as EvmAddress;\n  }\n\n  /**\n   * Wraps the `bech32Address` property and returns as an `AssetId`.\n   *\n   * @returns The `bech32Address` property as an {@link AssetId | `AssetId`}\n   */\n  toAssetId(): AssetId {\n    return {\n      value: this.toB256(),\n    } as AssetId;\n  }\n\n  /**\n   * Returns the value of the `bech32Address` property\n   *\n   * @returns The value of `bech32Address` property\n   */\n  valueOf(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Compares this the `bech32Address` property to another for direct equality\n   *\n   * @param other - Another address to compare against\n   * @returns The equality of the comparison\n   */\n  equals(other: Address): boolean {\n    return this.bech32Address === other.bech32Address;\n  }\n\n  /**\n   * Takes a Public Key, hashes it, and creates an `Address`\n   *\n   * @param publicKey - A wallets public key\n   * @returns A new `Address` instance\n   */\n  static fromPublicKey(publicKey: string): Address {\n    if (!isPublicKey(publicKey)) {\n      throw new FuelError(FuelError.CODES.INVALID_PUBLIC_KEY, `Invalid Public Key: ${publicKey}.`);\n    }\n\n    const b256Address = sha256(hexlify(getBytesCopy(publicKey)));\n    return new Address(toBech32(b256Address));\n  }\n\n  /**\n   * Takes a B256 Address and creates an `Address`\n   *\n   * @param b256Address - A b256 hash\n   * @returns A new `Address` instance\n   */\n  static fromB256(b256Address: string): Address {\n    if (!isB256(b256Address)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_B256_ADDRESS,\n        `Invalid B256 Address: ${b256Address}.`\n      );\n    }\n\n    return new Address(toBech32(b256Address));\n  }\n\n  /**\n   * Creates an `Address` with a randomized `bech32Address` property\n   *\n   * @returns A new `Address` instance\n   */\n  static fromRandom(): Address {\n    return this.fromB256(getRandomB256());\n  }\n\n  /**\n   * Takes an ambiguous string and attempts to create an `Address`\n   *\n   * @param address - An ambiguous string\n   * @returns A new `Address` instance\n   */\n  static fromString(address: string): Address {\n    return isBech32(address) ? new Address(address as Bech32Address) : this.fromB256(address);\n  }\n\n  /**\n   * Takes an ambiguous string or address and creates an `Address`\n   *\n   * @returns a new `Address` instance\n   */\n  static fromAddressOrString(address: string | AbstractAddress): AbstractAddress {\n    return typeof address === 'string' ? this.fromString(address) : address;\n  }\n\n  /**\n   * Takes a dynamic string or `AbstractAddress` and creates an `Address`\n   *\n   * @param addressId - A string containing Bech32, B256, or Public Key\n   * @throws Error - Unknown address if the format is not recognised\n   * @returns A new `Address` instance\n   */\n  static fromDynamicInput(address: string | AbstractAddress): Address {\n    // If address is a object than we assume it's a AbstractAddress\n    // we don't check by instanceof because it's possible to\n    // the host app to have a different reference to this same class type\n    if (typeof address !== 'string' && 'toB256' in address) {\n      return Address.fromB256(address.toB256());\n    }\n    if (isPublicKey(address)) {\n      return Address.fromPublicKey(address);\n    }\n\n    if (isBech32(address)) {\n      return new Address(address as Bech32Address);\n    }\n\n    if (isB256(address)) {\n      return Address.fromB256(address);\n    }\n\n    if (isEvmAddress(address)) {\n      return Address.fromEvmAddress(address);\n    }\n\n    throw new FuelError(\n      FuelError.CODES.PARSE_FAILED,\n      `Unknown address format: only 'Bech32', 'B256', or 'Public Key (512)' are supported.`\n    );\n  }\n\n  /**\n   * Takes an Evm Address and returns back an `Address`\n   *\n   * @returns A new `Address` instance\n   */\n  static fromEvmAddress(evmAddress: string): Address {\n    if (!isEvmAddress(evmAddress)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_EVM_ADDRESS,\n        `Invalid Evm Address: ${evmAddress}.`\n      );\n    }\n\n    const paddedAddress = padFirst12BytesOfEvmAddress(evmAddress);\n\n    return new Address(toBech32(paddedAddress));\n  }\n}\n","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n","import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type { FeeData, Provider } from \"./provider.js\";\nimport type { FetchRequest } from \"../utils/fetch.js\";\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n\n/**\n *  The gas cost parameters for a [[GasCostPlugin]].\n */\nexport type GasCostParameters = {\n    /**\n     *  The transactions base fee.\n     */\n    txBase?: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate?: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero?: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero?: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey?: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress?: number;\n};\n\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    readonly effectiveBlock!: number;\n\n    /**\n     *  The transactions base fee.\n     */\n    readonly txBase!: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    readonly txCreate!: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    readonly txDataZero!: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    readonly txDataNonzero!: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListStorageKey!: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListAddress!: number;\n\n\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    readonly address!: string;\n\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    readonly targetNetwork!: number;\n\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #url: string;\n    readonly #processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>;\n\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url(): string { return this.#url; }\n\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc(): (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }> { return this.#processFunc; }\n\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url: string, processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n\n    // We are immutable, so we can serve as our own clone\n    clone(): FetchUrlFeeDataNetworkPlugin { return this; }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n","/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\n\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\n\nimport {\n    EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin\n} from \"./plugins-network.js\";\n\nimport type { BigNumberish } from \"../utils/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { NetworkPlugin } from \"./plugins-network.js\";\n\n\n/**\n *  A Networkish can be used to allude to a Network, by specifing:\n *  - a [[Network]] object\n *  - a well-known (or registered) network name\n *  - a well-known (or registered) chain ID\n *  - an object with sufficient details to describe a network\n */\nexport type Networkish = Network | number | bigint | string | {\n    name?: string,\n    chainId?: number,\n    //layerOneConnection?: Provider,\n    ensAddress?: string,\n    ensNetwork?: number\n};\n\n\n\n\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    #plugins: Map<string, NetworkPlugin>;\n\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name(): string { return this.#name; }\n    set name(value: string) { this.#name =  value; }\n\n    /**\n     *  The network chain ID.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value, \"chainId\"); }\n\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) { return false; }\n\n        if (typeof(other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return (this.name === other);\n        }\n\n        if (typeof(other) === \"number\" || typeof(other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return false;\n        }\n\n        if (typeof(other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                } catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins(): Array<NetworkPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin: NetworkPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin<T extends NetworkPlugin = NetworkPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins<T extends NetworkPlugin = NetworkPlugin>(basename: string): Array<T> {\n        return <Array<T>>(this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n\n    /**\n     *  Create a copy of this Network.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx: TransactionLike): number {\n        const costs = this.getPlugin<GasCostPlugin>(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n\n        let gas = costs.txBase;\n        if (tx.to == null) { gas += costs.txCreate; }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                } else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n\n        return gas;\n    }\n\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network?: Networkish): Network {\n        injectCommonNetworks();\n\n        // Default network\n        if (network == null) { return Network.from(\"mainnet\"); }\n\n        // Canonical name or chain ID\n        if (typeof(network) === \"number\") { network = BigInt(network); }\n        if (typeof(network) === \"string\" || typeof(network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) { return networkFunc(); }\n            if (typeof(network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof((<Network>network).clone) === \"function\") {\n            const clone = (<Network>network).clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n\n        // Networkish\n        if (typeof(network) === \"object\") {\n            assertArgument(typeof(network.name) === \"string\" && typeof(network.chainId) === \"number\",\n                \"invalid network object name or chainId\", \"network\", network);\n\n            const custom = new Network(<string>(network.name), <number>(network.chainId));\n\n            if ((<any>network).ensAddress || (<any>network).ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin((<any>network).ensAddress, (<any>network).ensNetwork));\n            }\n\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n\n            return custom;\n        }\n\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof(nameOrChainId) === \"number\") { nameOrChainId = BigInt(nameOrChainId); }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${ JSON.stringify(existing.name) }`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n\n\ntype Options = {\n    ensNetwork?: number;\n    altNames?: Array<string>;\n    plugins?: Array<NetworkPlugin>;\n};\n\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value: number | string, decimals: number): bigint {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) { comps.push(\"\"); }\n\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) { comps[1] += \"0\"; }\n\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) { frac++; }\n        comps[1] = frac.toString();\n    }\n\n    return BigInt(comps[0] + comps[1]);\n}\n\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url: string) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n\n        let response;\n        try {\n            const [ _response, _feeData ] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        } catch (error: any) {\n            assert(false, `error encountered with polygon gas station (${ JSON.stringify(request.url) })`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks(): void {\n    if (injected) { return; }\n    injected = true;\n\n    /// Register popular Ethereum networks\n    function registerEth(name: string, chainId: number, options: Options): void {\n        const func = function() {\n            const network = new Network(name, chainId);\n\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n\n            network.attachPlugin(new GasCostPlugin());\n\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n\n            return network;\n        };\n\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [ \"homestead\" ] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n\n\n\n    registerEth(\"classic\", 61, { });\n    registerEth(\"classicKotti\", 6, { });\n\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, { });\n\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, { });\n    registerEth(\"base-sepolia\", 84532, { });\n\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, { });\n\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, { });\n\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [ \"maticMumbai\", \"maticmum\" ],  // @TODO: Future remove these alts\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: [ ]\n    });\n    registerEth(\"optimism-goerli\", 420, { });\n\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(async () => {}); //=> \"AsyncFunction\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, deep, map) {\n  map || (map = new _ObjectMap()); // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n\n  if (_isPrimitive(value)) {\n    return value;\n  }\n\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n\n    map.set(value, copiedValue);\n\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}\n\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\n\nvar _ObjectMap =\n/*#__PURE__*/\nfunction () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n\n    return hashedKey.join();\n  };\n\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n\n      return;\n    }\n\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      return;\n    }\n\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n\n  return _ObjectMap;\n}();","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, true);\n});\n\nexport default clone;","import { bufferFromString } from '@fuel-ts/crypto';\nimport type { BytesLike } from 'ethers';\nimport { sha256 } from 'ethers';\n\n/**\n * hash string messages with sha256\n *\n * @param msg - The string message to be hashed\n * @returns A sha256 hash of the message\n */\nexport function hashMessage(msg: string) {\n  return sha256(bufferFromString(msg, 'utf-8'));\n}\n\n/**\n * Convert a uint64 number to a big-endian byte array\n */\nexport function uint64ToBytesBE(value: number): Uint8Array {\n  const bigIntValue = BigInt(value);\n  const buffer = new ArrayBuffer(8);\n  const dataView = new DataView(buffer);\n  dataView.setBigUint64(0, bigIntValue, false); // write the uint64 value in big-endian order\n  return new Uint8Array(dataView.buffer);\n}\n\n/**\n * wrap sha256\n *\n * @param data - The data to be hash\n * @returns A sha256 hash of the data\n */\nexport function hash(data: BytesLike) {\n  return sha256(data);\n}\n","import { BaseAssetId } from '@fuel-ts/address/configs';\nimport type { BigNumberish, BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport { hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport type CoinQuantityLike =\n  | [amount: BigNumberish, assetId?: BytesLike, max?: BigNumberish]\n  | { amount: BigNumberish; assetId?: BytesLike; max?: BigNumberish };\nexport type CoinQuantity = { amount: BN; assetId: string; max?: BN };\n\n/** @hidden */\nexport const coinQuantityfy = (coinQuantityLike: CoinQuantityLike): CoinQuantity => {\n  let assetId;\n  let amount;\n  let max;\n  if (Array.isArray(coinQuantityLike)) {\n    amount = coinQuantityLike[0];\n    assetId = coinQuantityLike[1] ?? BaseAssetId;\n    max = coinQuantityLike[2] ?? undefined;\n  } else {\n    amount = coinQuantityLike.amount;\n    assetId = coinQuantityLike.assetId ?? BaseAssetId;\n    max = coinQuantityLike.max ?? undefined;\n  }\n\n  const bnAmount = bn(amount);\n  return {\n    assetId: hexlify(assetId),\n    amount: bnAmount.toNumber() < 1 ? bn(1) : bnAmount,\n    max: max ? bn(max) : undefined,\n  };\n};\n\nexport interface IAddAmountToAssetParams {\n  assetId: string;\n  amount: BN;\n  coinQuantities: CoinQuantity[];\n}\n\nexport const addAmountToAsset = (params: IAddAmountToAssetParams): CoinQuantity[] => {\n  const { amount, assetId } = params;\n\n  const coinQuantities = [...params.coinQuantities];\n\n  const assetIdx = coinQuantities.findIndex((coinQuantity) => coinQuantity.assetId === assetId);\n\n  if (assetIdx !== -1) {\n    coinQuantities[assetIdx].amount = coinQuantities[assetIdx].amount.add(amount);\n  } else {\n    coinQuantities.push({ assetId, amount });\n  }\n\n  return coinQuantities;\n};\n","import type { GraphQLClient } from 'graphql-request';\nimport type * as Dom from 'graphql-request/dist/types.dom';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Address: string;\n  AssetId: string;\n  BlockId: string;\n  Bytes32: string;\n  ContractId: string;\n  HexString: string;\n  Nonce: string;\n  Salt: string;\n  Signature: any;\n  Tai64Timestamp: any;\n  TransactionId: string;\n  TxPointer: any;\n  U8: any;\n  U32: any;\n  U64: string;\n  UtxoId: string;\n};\n\nexport type GqlBalance = {\n  __typename: 'Balance';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  owner: Scalars['Address'];\n};\n\nexport type GqlBalanceConnection = {\n  __typename: 'BalanceConnection';\n  /** A list of edges. */\n  edges: Array<GqlBalanceEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlBalance>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlBalanceEdge = {\n  __typename: 'BalanceEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlBalance;\n};\n\nexport type GqlBalanceFilterInput = {\n  /** Filter coins based on the `owner` field */\n  owner: Scalars['Address'];\n};\n\nexport type GqlBlock = {\n  __typename: 'Block';\n  consensus: GqlConsensus;\n  header: GqlHeader;\n  id: Scalars['BlockId'];\n  transactions: Array<GqlTransaction>;\n};\n\nexport type GqlBlockConnection = {\n  __typename: 'BlockConnection';\n  /** A list of edges. */\n  edges: Array<GqlBlockEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlBlock>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlBlockEdge = {\n  __typename: 'BlockEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlBlock;\n};\n\nexport type GqlBreakpoint = {\n  contract: Scalars['ContractId'];\n  pc: Scalars['U64'];\n};\n\nexport type GqlChainInfo = {\n  __typename: 'ChainInfo';\n  consensusParameters: GqlConsensusParameters;\n  daHeight: Scalars['U64'];\n  gasCosts: GqlGasCosts;\n  latestBlock: GqlBlock;\n  name: Scalars['String'];\n};\n\nexport type GqlChangeOutput = {\n  __typename: 'ChangeOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\nexport type GqlCoin = {\n  __typename: 'Coin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  /** TxPointer - the height of the block this coin was created in */\n  blockCreated: Scalars['U32'];\n  maturity: Scalars['U32'];\n  owner: Scalars['Address'];\n  /** TxPointer - the index of the transaction that created this coin */\n  txCreatedIdx: Scalars['U64'];\n  utxoId: Scalars['UtxoId'];\n};\n\nexport type GqlCoinConnection = {\n  __typename: 'CoinConnection';\n  /** A list of edges. */\n  edges: Array<GqlCoinEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlCoin>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlCoinEdge = {\n  __typename: 'CoinEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlCoin;\n};\n\nexport type GqlCoinFilterInput = {\n  /** Returns coins only with `asset_id`. */\n  assetId?: InputMaybe<Scalars['AssetId']>;\n  /** Returns coins owned by the `owner`. */\n  owner: Scalars['Address'];\n};\n\nexport type GqlCoinOutput = {\n  __typename: 'CoinOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\n/** The schema analog of the [`coins::CoinType`]. */\nexport type GqlCoinType = GqlCoin | GqlMessageCoin;\n\nexport type GqlConsensus = GqlGenesis | GqlPoAConsensus;\n\nexport type GqlConsensusParameters = {\n  __typename: 'ConsensusParameters';\n  baseAssetId: Scalars['AssetId'];\n  chainId: Scalars['U64'];\n  contractParams: GqlContractParameters;\n  feeParams: GqlFeeParameters;\n  gasCosts: GqlGasCosts;\n  predicateParams: GqlPredicateParameters;\n  scriptParams: GqlScriptParameters;\n  txParams: GqlTxParameters;\n};\n\nexport type GqlContract = {\n  __typename: 'Contract';\n  bytecode: Scalars['HexString'];\n  id: Scalars['ContractId'];\n  salt: Scalars['Salt'];\n};\n\nexport type GqlContractBalance = {\n  __typename: 'ContractBalance';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  contract: Scalars['ContractId'];\n};\n\nexport type GqlContractBalanceConnection = {\n  __typename: 'ContractBalanceConnection';\n  /** A list of edges. */\n  edges: Array<GqlContractBalanceEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlContractBalance>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlContractBalanceEdge = {\n  __typename: 'ContractBalanceEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlContractBalance;\n};\n\nexport type GqlContractBalanceFilterInput = {\n  /** Filter assets based on the `contractId` field */\n  contract: Scalars['ContractId'];\n};\n\nexport type GqlContractCreated = {\n  __typename: 'ContractCreated';\n  contract: GqlContract;\n  stateRoot: Scalars['Bytes32'];\n};\n\nexport type GqlContractOutput = {\n  __typename: 'ContractOutput';\n  balanceRoot: Scalars['Bytes32'];\n  inputIndex: Scalars['Int'];\n  stateRoot: Scalars['Bytes32'];\n};\n\nexport type GqlContractParameters = {\n  __typename: 'ContractParameters';\n  contractMaxSize: Scalars['U64'];\n  maxStorageSlots: Scalars['U64'];\n};\n\nexport type GqlDependentCost = GqlHeavyOperation | GqlLightOperation;\n\nexport type GqlExcludeInput = {\n  /** Messages to exclude from the selection. */\n  messages: Array<Scalars['Nonce']>;\n  /** Utxos to exclude from the selection. */\n  utxos: Array<Scalars['UtxoId']>;\n};\n\nexport type GqlFailureStatus = {\n  __typename: 'FailureStatus';\n  block: GqlBlock;\n  programState?: Maybe<GqlProgramState>;\n  reason: Scalars['String'];\n  receipts: Array<GqlReceipt>;\n  time: Scalars['Tai64Timestamp'];\n  transactionId: Scalars['TransactionId'];\n};\n\nexport type GqlFeeParameters = {\n  __typename: 'FeeParameters';\n  gasPerByte: Scalars['U64'];\n  gasPriceFactor: Scalars['U64'];\n};\n\nexport type GqlGasCosts = {\n  __typename: 'GasCosts';\n  add: Scalars['U64'];\n  addi: Scalars['U64'];\n  aloc: Scalars['U64'];\n  and: Scalars['U64'];\n  andi: Scalars['U64'];\n  bal: Scalars['U64'];\n  bhei: Scalars['U64'];\n  bhsh: Scalars['U64'];\n  burn: Scalars['U64'];\n  call: GqlDependentCost;\n  cb: Scalars['U64'];\n  ccp: GqlDependentCost;\n  cfei: Scalars['U64'];\n  cfsi: Scalars['U64'];\n  contractRoot: GqlDependentCost;\n  croo: Scalars['U64'];\n  csiz: GqlDependentCost;\n  div: Scalars['U64'];\n  divi: Scalars['U64'];\n  eck1: Scalars['U64'];\n  ecr1: Scalars['U64'];\n  ed19: Scalars['U64'];\n  eq: Scalars['U64'];\n  exp: Scalars['U64'];\n  expi: Scalars['U64'];\n  flag: Scalars['U64'];\n  gm: Scalars['U64'];\n  gt: Scalars['U64'];\n  gtf: Scalars['U64'];\n  ji: Scalars['U64'];\n  jmp: Scalars['U64'];\n  jmpb: Scalars['U64'];\n  jmpf: Scalars['U64'];\n  jne: Scalars['U64'];\n  jneb: Scalars['U64'];\n  jnef: Scalars['U64'];\n  jnei: Scalars['U64'];\n  jnzb: Scalars['U64'];\n  jnzf: Scalars['U64'];\n  jnzi: Scalars['U64'];\n  k256: GqlDependentCost;\n  lb: Scalars['U64'];\n  ldc: GqlDependentCost;\n  log: Scalars['U64'];\n  logd: GqlDependentCost;\n  lt: Scalars['U64'];\n  lw: Scalars['U64'];\n  mcl: GqlDependentCost;\n  mcli: GqlDependentCost;\n  mcp: GqlDependentCost;\n  mcpi: GqlDependentCost;\n  meq: GqlDependentCost;\n  mint: Scalars['U64'];\n  mldv: Scalars['U64'];\n  mlog: Scalars['U64'];\n  modOp: Scalars['U64'];\n  modi: Scalars['U64'];\n  moveOp: Scalars['U64'];\n  movi: Scalars['U64'];\n  mroo: Scalars['U64'];\n  mul: Scalars['U64'];\n  muli: Scalars['U64'];\n  newStoragePerByte: Scalars['U64'];\n  noop: Scalars['U64'];\n  not: Scalars['U64'];\n  or: Scalars['U64'];\n  ori: Scalars['U64'];\n  poph: Scalars['U64'];\n  popl: Scalars['U64'];\n  pshh: Scalars['U64'];\n  pshl: Scalars['U64'];\n  ret: Scalars['U64'];\n  retd: GqlDependentCost;\n  rvrt: Scalars['U64'];\n  s256: GqlDependentCost;\n  sb: Scalars['U64'];\n  scwq: GqlDependentCost;\n  sll: Scalars['U64'];\n  slli: Scalars['U64'];\n  smo: GqlDependentCost;\n  srl: Scalars['U64'];\n  srli: Scalars['U64'];\n  srw: Scalars['U64'];\n  srwq: GqlDependentCost;\n  stateRoot: GqlDependentCost;\n  sub: Scalars['U64'];\n  subi: Scalars['U64'];\n  sw: Scalars['U64'];\n  sww: Scalars['U64'];\n  swwq: GqlDependentCost;\n  time: Scalars['U64'];\n  tr: Scalars['U64'];\n  tro: Scalars['U64'];\n  vmInitialization: GqlDependentCost;\n  wdam: Scalars['U64'];\n  wdcm: Scalars['U64'];\n  wddv: Scalars['U64'];\n  wdmd: Scalars['U64'];\n  wdml: Scalars['U64'];\n  wdmm: Scalars['U64'];\n  wdop: Scalars['U64'];\n  wqam: Scalars['U64'];\n  wqcm: Scalars['U64'];\n  wqdv: Scalars['U64'];\n  wqmd: Scalars['U64'];\n  wqml: Scalars['U64'];\n  wqmm: Scalars['U64'];\n  wqop: Scalars['U64'];\n  xor: Scalars['U64'];\n  xori: Scalars['U64'];\n};\n\nexport type GqlGenesis = {\n  __typename: 'Genesis';\n  /**\n   * The chain configs define what consensus type to use, what settlement layer to use,\n   * rules of block validity, etc.\n   */\n  chainConfigHash: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of all genesis coins. */\n  coinsRoot: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of state, balances, contracts code hash of each contract. */\n  contractsRoot: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of all genesis messages. */\n  messagesRoot: Scalars['Bytes32'];\n};\n\nexport type GqlHeader = {\n  __typename: 'Header';\n  /** Hash of the application header. */\n  applicationHash: Scalars['Bytes32'];\n  /** The layer 1 height of messages and events to include since the last layer 1 block number. */\n  daHeight: Scalars['U64'];\n  /** Fuel block height. */\n  height: Scalars['U32'];\n  /** Hash of the header */\n  id: Scalars['BlockId'];\n  /** Number of message receipts in this block. */\n  messageReceiptCount: Scalars['U64'];\n  /** Merkle root of message receipts in this block. */\n  messageReceiptRoot: Scalars['Bytes32'];\n  /** Merkle root of all previous block header hashes. */\n  prevRoot: Scalars['Bytes32'];\n  /** The block producer time. */\n  time: Scalars['Tai64Timestamp'];\n  /** Number of transactions in this block. */\n  transactionsCount: Scalars['U64'];\n  /** Merkle root of transactions. */\n  transactionsRoot: Scalars['Bytes32'];\n};\n\nexport type GqlHeavyOperation = {\n  __typename: 'HeavyOperation';\n  base: Scalars['U64'];\n  gasPerUnit: Scalars['U64'];\n};\n\nexport type GqlInput = GqlInputCoin | GqlInputContract | GqlInputMessage;\n\nexport type GqlInputCoin = {\n  __typename: 'InputCoin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  maturity: Scalars['U32'];\n  owner: Scalars['Address'];\n  predicate: Scalars['HexString'];\n  predicateData: Scalars['HexString'];\n  predicateGasUsed: Scalars['U64'];\n  txPointer: Scalars['TxPointer'];\n  utxoId: Scalars['UtxoId'];\n  witnessIndex: Scalars['Int'];\n};\n\nexport type GqlInputContract = {\n  __typename: 'InputContract';\n  balanceRoot: Scalars['Bytes32'];\n  contract: GqlContract;\n  stateRoot: Scalars['Bytes32'];\n  txPointer: Scalars['TxPointer'];\n  utxoId: Scalars['UtxoId'];\n};\n\nexport type GqlInputMessage = {\n  __typename: 'InputMessage';\n  amount: Scalars['U64'];\n  data: Scalars['HexString'];\n  nonce: Scalars['Nonce'];\n  predicate: Scalars['HexString'];\n  predicateData: Scalars['HexString'];\n  predicateGasUsed: Scalars['U64'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n  witnessIndex: Scalars['Int'];\n};\n\nexport type GqlLightOperation = {\n  __typename: 'LightOperation';\n  base: Scalars['U64'];\n  unitsPerGas: Scalars['U64'];\n};\n\nexport type GqlMerkleProof = {\n  __typename: 'MerkleProof';\n  proofIndex: Scalars['U64'];\n  proofSet: Array<Scalars['Bytes32']>;\n};\n\nexport type GqlMessage = {\n  __typename: 'Message';\n  amount: Scalars['U64'];\n  daHeight: Scalars['U64'];\n  data: Scalars['HexString'];\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport type GqlMessageCoin = {\n  __typename: 'MessageCoin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  daHeight: Scalars['U64'];\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport type GqlMessageConnection = {\n  __typename: 'MessageConnection';\n  /** A list of edges. */\n  edges: Array<GqlMessageEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlMessage>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlMessageEdge = {\n  __typename: 'MessageEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlMessage;\n};\n\nexport type GqlMessageProof = {\n  __typename: 'MessageProof';\n  amount: Scalars['U64'];\n  blockProof: GqlMerkleProof;\n  commitBlockHeader: GqlHeader;\n  data: Scalars['HexString'];\n  messageBlockHeader: GqlHeader;\n  messageProof: GqlMerkleProof;\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport enum GqlMessageState {\n  NotFound = 'NOT_FOUND',\n  Spent = 'SPENT',\n  Unspent = 'UNSPENT'\n}\n\nexport type GqlMessageStatus = {\n  __typename: 'MessageStatus';\n  state: GqlMessageState;\n};\n\nexport type GqlMutation = {\n  __typename: 'Mutation';\n  continueTx: GqlRunResult;\n  /** Execute a dry-run of the transaction using a fork of current state, no changes are committed. */\n  dryRun: Array<GqlReceipt>;\n  endSession: Scalars['Boolean'];\n  execute: Scalars['Boolean'];\n  /**\n   * Sequentially produces `blocks_to_produce` blocks. The first block starts with\n   * `start_timestamp`. If the block production in the [`crate::service::Config`] is\n   * `Trigger::Interval { block_time }`, produces blocks with `block_time ` intervals between\n   * them. The `start_timestamp` is the timestamp in seconds.\n   */\n  produceBlocks: Scalars['U32'];\n  reset: Scalars['Boolean'];\n  setBreakpoint: Scalars['Boolean'];\n  setSingleStepping: Scalars['Boolean'];\n  startSession: Scalars['ID'];\n  startTx: GqlRunResult;\n  /**\n   * Submits transaction to the `TxPool`.\n   *\n   * Returns submitted transaction if the transaction is included in the `TxPool` without problems.\n   */\n  submit: GqlTransaction;\n};\n\n\nexport type GqlMutationContinueTxArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationDryRunArgs = {\n  tx: Scalars['HexString'];\n  utxoValidation?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type GqlMutationEndSessionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationExecuteArgs = {\n  id: Scalars['ID'];\n  op: Scalars['String'];\n};\n\n\nexport type GqlMutationProduceBlocksArgs = {\n  blocksToProduce: Scalars['U32'];\n  startTimestamp?: InputMaybe<Scalars['Tai64Timestamp']>;\n};\n\n\nexport type GqlMutationResetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationSetBreakpointArgs = {\n  breakpoint: GqlBreakpoint;\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationSetSingleSteppingArgs = {\n  enable: Scalars['Boolean'];\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationStartTxArgs = {\n  id: Scalars['ID'];\n  txJson: Scalars['String'];\n};\n\n\nexport type GqlMutationSubmitArgs = {\n  tx: Scalars['HexString'];\n};\n\nexport type GqlNodeInfo = {\n  __typename: 'NodeInfo';\n  maxDepth: Scalars['U64'];\n  maxTx: Scalars['U64'];\n  minGasPrice: Scalars['U64'];\n  nodeVersion: Scalars['String'];\n  peers: Array<GqlPeerInfo>;\n  utxoValidation: Scalars['Boolean'];\n  vmBacktrace: Scalars['Boolean'];\n};\n\nexport type GqlOutput = GqlChangeOutput | GqlCoinOutput | GqlContractCreated | GqlContractOutput | GqlVariableOutput;\n\n/**\n * A separate `Breakpoint` type to be used as an output, as a single\n * type cannot act as both input and output type in async-graphql\n */\nexport type GqlOutputBreakpoint = {\n  __typename: 'OutputBreakpoint';\n  contract: Scalars['ContractId'];\n  pc: Scalars['U64'];\n};\n\n/** Information about pagination in a connection */\nexport type GqlPageInfo = {\n  __typename: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport type GqlPeerInfo = {\n  __typename: 'PeerInfo';\n  /** The advertised multi-addrs that can be used to connect to this peer */\n  addresses: Array<Scalars['String']>;\n  /** The internal fuel p2p reputation of this peer */\n  appScore: Scalars['Float'];\n  /** The last reported height of the peer */\n  blockHeight?: Maybe<Scalars['U32']>;\n  /** The self-reported version of the client the peer is using */\n  clientVersion?: Maybe<Scalars['String']>;\n  /** The libp2p peer id */\n  id: Scalars['String'];\n  /** The last heartbeat from this peer in unix epoch time ms */\n  lastHeartbeatMs: Scalars['U64'];\n};\n\nexport type GqlPoAConsensus = {\n  __typename: 'PoAConsensus';\n  /** Gets the signature of the block produced by `PoA` consensus. */\n  signature: Scalars['Signature'];\n};\n\nexport type GqlPolicies = {\n  __typename: 'Policies';\n  gasPrice?: Maybe<Scalars['U64']>;\n  maturity?: Maybe<Scalars['U32']>;\n  maxFee?: Maybe<Scalars['U64']>;\n  witnessLimit?: Maybe<Scalars['U64']>;\n};\n\nexport type GqlPredicateParameters = {\n  __typename: 'PredicateParameters';\n  maxGasPerPredicate: Scalars['U64'];\n  maxMessageDataLength: Scalars['U64'];\n  maxPredicateDataLength: Scalars['U64'];\n  maxPredicateLength: Scalars['U64'];\n};\n\nexport type GqlProgramState = {\n  __typename: 'ProgramState';\n  data: Scalars['HexString'];\n  returnType: GqlReturnType;\n};\n\nexport type GqlQuery = {\n  __typename: 'Query';\n  balance: GqlBalance;\n  balances: GqlBalanceConnection;\n  block?: Maybe<GqlBlock>;\n  blocks: GqlBlockConnection;\n  chain: GqlChainInfo;\n  /** Gets the coin by `utxo_id`. */\n  coin?: Maybe<GqlCoin>;\n  /** Gets all unspent coins of some `owner` maybe filtered with by `asset_id` per page. */\n  coins: GqlCoinConnection;\n  /**\n   * For each `query_per_asset`, get some spendable coins(of asset specified by the query) owned by\n   * `owner` that add up at least the query amount. The returned coins can be spent.\n   * The number of coins is optimized to prevent dust accumulation.\n   *\n   * The query supports excluding and maximum the number of coins.\n   *\n   * Returns:\n   * The list of spendable coins per asset from the query. The length of the result is\n   * the same as the length of `query_per_asset`. The ordering of assets and `query_per_asset`\n   * is the same.\n   */\n  coinsToSpend: Array<Array<GqlCoinType>>;\n  contract?: Maybe<GqlContract>;\n  contractBalance: GqlContractBalance;\n  contractBalances: GqlContractBalanceConnection;\n  /** Estimate the predicate gas for the provided transaction */\n  estimatePredicates: GqlTransaction;\n  /** Returns true when the GraphQL API is serving requests. */\n  health: Scalars['Boolean'];\n  memory: Scalars['String'];\n  messageProof?: Maybe<GqlMessageProof>;\n  messageStatus: GqlMessageStatus;\n  messages: GqlMessageConnection;\n  nodeInfo: GqlNodeInfo;\n  register: Scalars['U64'];\n  transaction?: Maybe<GqlTransaction>;\n  transactions: GqlTransactionConnection;\n  transactionsByOwner: GqlTransactionConnection;\n};\n\n\nexport type GqlQueryBalanceArgs = {\n  assetId: Scalars['AssetId'];\n  owner: Scalars['Address'];\n};\n\n\nexport type GqlQueryBalancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlBalanceFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryBlockArgs = {\n  height?: InputMaybe<Scalars['U32']>;\n  id?: InputMaybe<Scalars['BlockId']>;\n};\n\n\nexport type GqlQueryBlocksArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryCoinArgs = {\n  utxoId: Scalars['UtxoId'];\n};\n\n\nexport type GqlQueryCoinsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlCoinFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryCoinsToSpendArgs = {\n  excludedIds?: InputMaybe<GqlExcludeInput>;\n  owner: Scalars['Address'];\n  queryPerAsset: Array<GqlSpendQueryElementInput>;\n};\n\n\nexport type GqlQueryContractArgs = {\n  id: Scalars['ContractId'];\n};\n\n\nexport type GqlQueryContractBalanceArgs = {\n  asset: Scalars['AssetId'];\n  contract: Scalars['ContractId'];\n};\n\n\nexport type GqlQueryContractBalancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlContractBalanceFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryEstimatePredicatesArgs = {\n  tx: Scalars['HexString'];\n};\n\n\nexport type GqlQueryMemoryArgs = {\n  id: Scalars['ID'];\n  size: Scalars['U32'];\n  start: Scalars['U32'];\n};\n\n\nexport type GqlQueryMessageProofArgs = {\n  commitBlockHeight?: InputMaybe<Scalars['U32']>;\n  commitBlockId?: InputMaybe<Scalars['BlockId']>;\n  nonce: Scalars['Nonce'];\n  transactionId: Scalars['TransactionId'];\n};\n\n\nexport type GqlQueryMessageStatusArgs = {\n  nonce: Scalars['Nonce'];\n};\n\n\nexport type GqlQueryMessagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  owner?: InputMaybe<Scalars['Address']>;\n};\n\n\nexport type GqlQueryRegisterArgs = {\n  id: Scalars['ID'];\n  register: Scalars['U32'];\n};\n\n\nexport type GqlQueryTransactionArgs = {\n  id: Scalars['TransactionId'];\n};\n\n\nexport type GqlQueryTransactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryTransactionsByOwnerArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  owner: Scalars['Address'];\n};\n\nexport type GqlReceipt = {\n  __typename: 'Receipt';\n  amount?: Maybe<Scalars['U64']>;\n  assetId?: Maybe<Scalars['AssetId']>;\n  contract?: Maybe<GqlContract>;\n  contractId?: Maybe<Scalars['ContractId']>;\n  data?: Maybe<Scalars['HexString']>;\n  digest?: Maybe<Scalars['Bytes32']>;\n  gas?: Maybe<Scalars['U64']>;\n  gasUsed?: Maybe<Scalars['U64']>;\n  is?: Maybe<Scalars['U64']>;\n  len?: Maybe<Scalars['U64']>;\n  nonce?: Maybe<Scalars['Nonce']>;\n  param1?: Maybe<Scalars['U64']>;\n  param2?: Maybe<Scalars['U64']>;\n  pc?: Maybe<Scalars['U64']>;\n  ptr?: Maybe<Scalars['U64']>;\n  ra?: Maybe<Scalars['U64']>;\n  rb?: Maybe<Scalars['U64']>;\n  rc?: Maybe<Scalars['U64']>;\n  rd?: Maybe<Scalars['U64']>;\n  reason?: Maybe<Scalars['U64']>;\n  receiptType: GqlReceiptType;\n  recipient?: Maybe<Scalars['Address']>;\n  result?: Maybe<Scalars['U64']>;\n  sender?: Maybe<Scalars['Address']>;\n  subId?: Maybe<Scalars['Bytes32']>;\n  to?: Maybe<GqlContract>;\n  toAddress?: Maybe<Scalars['Address']>;\n  val?: Maybe<Scalars['U64']>;\n};\n\nexport enum GqlReceiptType {\n  Burn = 'BURN',\n  Call = 'CALL',\n  Log = 'LOG',\n  LogData = 'LOG_DATA',\n  MessageOut = 'MESSAGE_OUT',\n  Mint = 'MINT',\n  Panic = 'PANIC',\n  Return = 'RETURN',\n  ReturnData = 'RETURN_DATA',\n  Revert = 'REVERT',\n  ScriptResult = 'SCRIPT_RESULT',\n  Transfer = 'TRANSFER',\n  TransferOut = 'TRANSFER_OUT'\n}\n\nexport enum GqlReturnType {\n  Return = 'RETURN',\n  ReturnData = 'RETURN_DATA',\n  Revert = 'REVERT'\n}\n\nexport type GqlRunResult = {\n  __typename: 'RunResult';\n  breakpoint?: Maybe<GqlOutputBreakpoint>;\n  jsonReceipts: Array<Scalars['String']>;\n  state: GqlRunState;\n};\n\nexport enum GqlRunState {\n  /** Stopped on a breakpoint */\n  Breakpoint = 'BREAKPOINT',\n  /** All breakpoints have been processed, and the program has terminated */\n  Completed = 'COMPLETED'\n}\n\nexport type GqlScriptParameters = {\n  __typename: 'ScriptParameters';\n  maxScriptDataLength: Scalars['U64'];\n  maxScriptLength: Scalars['U64'];\n};\n\nexport type GqlSpendQueryElementInput = {\n  /** Target amount for the query. */\n  amount: Scalars['U64'];\n  /** Identifier of the asset to spend. */\n  assetId: Scalars['AssetId'];\n  /** The maximum number of currencies for selection. */\n  max?: InputMaybe<Scalars['U32']>;\n};\n\nexport type GqlSqueezedOutStatus = {\n  __typename: 'SqueezedOutStatus';\n  reason: Scalars['String'];\n};\n\nexport type GqlSubmittedStatus = {\n  __typename: 'SubmittedStatus';\n  time: Scalars['Tai64Timestamp'];\n};\n\nexport type GqlSubscription = {\n  __typename: 'Subscription';\n  /**\n   * Returns a stream of status updates for the given transaction id.\n   * If the current status is [`TransactionStatus::Success`], [`TransactionStatus::SqueezedOut`]\n   * or [`TransactionStatus::Failed`] the stream will return that and end immediately.\n   * If the current status is [`TransactionStatus::Submitted`] this will be returned\n   * and the stream will wait for a future update.\n   *\n   * This stream will wait forever so it's advised to use within a timeout.\n   *\n   * It is possible for the stream to miss an update if it is polled slower\n   * then the updates arrive. In such a case the stream will close without\n   * a status. If this occurs the stream can simply be restarted to return\n   * the latest status.\n   */\n  statusChange: GqlTransactionStatus;\n  /** Submits transaction to the `TxPool` and await either confirmation or failure. */\n  submitAndAwait: GqlTransactionStatus;\n};\n\n\nexport type GqlSubscriptionStatusChangeArgs = {\n  id: Scalars['TransactionId'];\n};\n\n\nexport type GqlSubscriptionSubmitAndAwaitArgs = {\n  tx: Scalars['HexString'];\n};\n\nexport type GqlSuccessStatus = {\n  __typename: 'SuccessStatus';\n  block: GqlBlock;\n  programState?: Maybe<GqlProgramState>;\n  receipts: Array<GqlReceipt>;\n  time: Scalars['Tai64Timestamp'];\n  transactionId: Scalars['TransactionId'];\n};\n\nexport type GqlTransaction = {\n  __typename: 'Transaction';\n  bytecodeLength?: Maybe<Scalars['U64']>;\n  bytecodeWitnessIndex?: Maybe<Scalars['Int']>;\n  gasPrice?: Maybe<Scalars['U64']>;\n  id: Scalars['TransactionId'];\n  inputAssetIds?: Maybe<Array<Scalars['AssetId']>>;\n  inputContract?: Maybe<GqlInputContract>;\n  inputContracts?: Maybe<Array<GqlContract>>;\n  inputs?: Maybe<Array<GqlInput>>;\n  isCreate: Scalars['Boolean'];\n  isMint: Scalars['Boolean'];\n  isScript: Scalars['Boolean'];\n  maturity?: Maybe<Scalars['U32']>;\n  mintAmount?: Maybe<Scalars['U64']>;\n  mintAssetId?: Maybe<Scalars['AssetId']>;\n  outputContract?: Maybe<GqlContractOutput>;\n  outputs: Array<GqlOutput>;\n  policies?: Maybe<GqlPolicies>;\n  /** Return the transaction bytes using canonical encoding */\n  rawPayload: Scalars['HexString'];\n  receipts?: Maybe<Array<GqlReceipt>>;\n  receiptsRoot?: Maybe<Scalars['Bytes32']>;\n  salt?: Maybe<Scalars['Salt']>;\n  script?: Maybe<Scalars['HexString']>;\n  scriptData?: Maybe<Scalars['HexString']>;\n  scriptGasLimit?: Maybe<Scalars['U64']>;\n  status?: Maybe<GqlTransactionStatus>;\n  storageSlots?: Maybe<Array<Scalars['HexString']>>;\n  txPointer?: Maybe<Scalars['TxPointer']>;\n  witnesses?: Maybe<Array<Scalars['HexString']>>;\n};\n\nexport type GqlTransactionConnection = {\n  __typename: 'TransactionConnection';\n  /** A list of edges. */\n  edges: Array<GqlTransactionEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlTransaction>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlTransactionEdge = {\n  __typename: 'TransactionEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlTransaction;\n};\n\nexport type GqlTransactionStatus = GqlFailureStatus | GqlSqueezedOutStatus | GqlSubmittedStatus | GqlSuccessStatus;\n\nexport type GqlTxParameters = {\n  __typename: 'TxParameters';\n  maxGasPerTx: Scalars['U64'];\n  maxInputs: Scalars['U8'];\n  maxOutputs: Scalars['U8'];\n  maxSize: Scalars['U64'];\n  maxWitnesses: Scalars['U32'];\n};\n\nexport type GqlVariableOutput = {\n  __typename: 'VariableOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\nexport type GqlTransactionFragmentFragment = { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null };\n\nexport type GqlReceiptFragmentFragment = { __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null };\n\nexport type GqlBlockFragmentFragment = { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: any }, transactions: Array<{ __typename: 'Transaction', id: string }> };\n\nexport type GqlCoinFragmentFragment = { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string };\n\nexport type GqlMessageCoinFragmentFragment = { __typename: 'MessageCoin', sender: string, recipient: string, nonce: string, amount: string, assetId: string, daHeight: string };\n\nexport type GqlMessageFragmentFragment = { __typename: 'Message', amount: string, sender: string, recipient: string, data: string, nonce: string, daHeight: string };\n\nexport type GqlMessageProofFragmentFragment = { __typename: 'MessageProof', sender: string, recipient: string, nonce: string, amount: string, data: string, messageProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, blockProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, messageBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: any, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string }, commitBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: any, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string } };\n\nexport type GqlBalanceFragmentFragment = { __typename: 'Balance', owner: string, amount: string, assetId: string };\n\nexport type GqlTxParametersFragmentFragment = { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string };\n\nexport type GqlPredicateParametersFragmentFragment = { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string };\n\nexport type GqlScriptParametersFragmentFragment = { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string };\n\nexport type GqlContractParametersFragmentFragment = { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string };\n\nexport type GqlFeeParametersFragmentFragment = { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string };\n\ntype GqlDependentCostFragment_HeavyOperation_Fragment = { __typename: 'HeavyOperation', base: string, gasPerUnit: string };\n\ntype GqlDependentCostFragment_LightOperation_Fragment = { __typename: 'LightOperation', base: string, unitsPerGas: string };\n\nexport type GqlDependentCostFragmentFragment = GqlDependentCostFragment_HeavyOperation_Fragment | GqlDependentCostFragment_LightOperation_Fragment;\n\nexport type GqlGasCostsFragmentFragment = { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } };\n\nexport type GqlConsensusParametersFragmentFragment = { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } };\n\nexport type GqlChainInfoFragmentFragment = { __typename: 'ChainInfo', name: string, daHeight: string, latestBlock: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: any }, transactions: Array<{ __typename: 'Transaction', id: string }> }, consensusParameters: { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } } };\n\nexport type GqlContractBalanceFragmentFragment = { __typename: 'ContractBalance', contract: string, amount: string, assetId: string };\n\nexport type GqlPageInfoFragmentFragment = { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null };\n\nexport type GqlGetVersionQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetVersionQuery = { __typename: 'Query', nodeInfo: { __typename: 'NodeInfo', nodeVersion: string } };\n\nexport type GqlNodeInfoFragmentFragment = { __typename: 'NodeInfo', utxoValidation: boolean, vmBacktrace: boolean, minGasPrice: string, maxTx: string, maxDepth: string, nodeVersion: string, peers: Array<{ __typename: 'PeerInfo', id: string, addresses: Array<string>, clientVersion?: string | null, blockHeight?: any | null, lastHeartbeatMs: string, appScore: number }> };\n\nexport type GqlGetNodeInfoQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetNodeInfoQuery = { __typename: 'Query', nodeInfo: { __typename: 'NodeInfo', utxoValidation: boolean, vmBacktrace: boolean, minGasPrice: string, maxTx: string, maxDepth: string, nodeVersion: string, peers: Array<{ __typename: 'PeerInfo', id: string, addresses: Array<string>, clientVersion?: string | null, blockHeight?: any | null, lastHeartbeatMs: string, appScore: number }> } };\n\nexport type GqlGetChainQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetChainQuery = { __typename: 'Query', chain: { __typename: 'ChainInfo', name: string, daHeight: string, latestBlock: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: any }, transactions: Array<{ __typename: 'Transaction', id: string }> }, consensusParameters: { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } } } };\n\nexport type GqlGetTransactionQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n}>;\n\n\nexport type GqlGetTransactionQuery = { __typename: 'Query', transaction?: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } | null };\n\nexport type GqlGetTransactionWithReceiptsQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n}>;\n\n\nexport type GqlGetTransactionWithReceiptsQuery = { __typename: 'Query', transaction?: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } | null };\n\nexport type GqlGetTransactionsQueryVariables = Exact<{\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetTransactionsQuery = { __typename: 'Query', transactions: { __typename: 'TransactionConnection', edges: Array<{ __typename: 'TransactionEdge', node: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } }> } };\n\nexport type GqlGetTransactionsByOwnerQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetTransactionsByOwnerQuery = { __typename: 'Query', transactionsByOwner: { __typename: 'TransactionConnection', pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'TransactionEdge', node: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } }> } };\n\nexport type GqlEstimatePredicatesQueryVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n}>;\n\n\nexport type GqlEstimatePredicatesQuery = { __typename: 'Query', estimatePredicates: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } };\n\nexport type GqlGetBlockQueryVariables = Exact<{\n  blockId?: InputMaybe<Scalars['BlockId']>;\n  height?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetBlockQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: any }, transactions: Array<{ __typename: 'Transaction', id: string }> } | null };\n\nexport type GqlGetBlockWithTransactionsQueryVariables = Exact<{\n  blockId?: InputMaybe<Scalars['BlockId']>;\n  blockHeight?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetBlockWithTransactionsQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, transactions: Array<{ __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> | null, status?: { __typename: 'FailureStatus', time: any, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: any, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: any, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null }>, header: { __typename: 'Header', height: any, time: any } } | null };\n\nexport type GqlGetBlocksQueryVariables = Exact<{\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetBlocksQuery = { __typename: 'Query', blocks: { __typename: 'BlockConnection', edges: Array<{ __typename: 'BlockEdge', node: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: any }, transactions: Array<{ __typename: 'Transaction', id: string }> } }> } };\n\nexport type GqlGetCoinQueryVariables = Exact<{\n  coinId: Scalars['UtxoId'];\n}>;\n\n\nexport type GqlGetCoinQuery = { __typename: 'Query', coin?: { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } | null };\n\nexport type GqlGetCoinsQueryVariables = Exact<{\n  filter: GqlCoinFilterInput;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetCoinsQuery = { __typename: 'Query', coins: { __typename: 'CoinConnection', edges: Array<{ __typename: 'CoinEdge', node: { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } }> } };\n\nexport type GqlGetCoinsToSpendQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  queryPerAsset: Array<GqlSpendQueryElementInput> | GqlSpendQueryElementInput;\n  excludedIds?: InputMaybe<GqlExcludeInput>;\n}>;\n\n\nexport type GqlGetCoinsToSpendQuery = { __typename: 'Query', coinsToSpend: Array<Array<{ __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } | { __typename: 'MessageCoin', sender: string, recipient: string, nonce: string, amount: string, assetId: string, daHeight: string }>> };\n\nexport type GqlGetContractQueryVariables = Exact<{\n  contractId: Scalars['ContractId'];\n}>;\n\n\nexport type GqlGetContractQuery = { __typename: 'Query', contract?: { __typename: 'Contract', bytecode: string, id: string } | null };\n\nexport type GqlGetContractBalanceQueryVariables = Exact<{\n  contract: Scalars['ContractId'];\n  asset: Scalars['AssetId'];\n}>;\n\n\nexport type GqlGetContractBalanceQuery = { __typename: 'Query', contractBalance: { __typename: 'ContractBalance', contract: string, amount: string, assetId: string } };\n\nexport type GqlGetBalanceQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  assetId: Scalars['AssetId'];\n}>;\n\n\nexport type GqlGetBalanceQuery = { __typename: 'Query', balance: { __typename: 'Balance', owner: string, amount: string, assetId: string } };\n\nexport type GqlGetBalancesQueryVariables = Exact<{\n  filter: GqlBalanceFilterInput;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetBalancesQuery = { __typename: 'Query', balances: { __typename: 'BalanceConnection', edges: Array<{ __typename: 'BalanceEdge', node: { __typename: 'Balance', owner: string, amount: string, assetId: string } }> } };\n\nexport type GqlGetMessagesQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetMessagesQuery = { __typename: 'Query', messages: { __typename: 'MessageConnection', edges: Array<{ __typename: 'MessageEdge', node: { __typename: 'Message', amount: string, sender: string, recipient: string, data: string, nonce: string, daHeight: string } }> } };\n\nexport type GqlGetMessageProofQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n  nonce: Scalars['Nonce'];\n  commitBlockId?: InputMaybe<Scalars['BlockId']>;\n  commitBlockHeight?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetMessageProofQuery = { __typename: 'Query', messageProof?: { __typename: 'MessageProof', sender: string, recipient: string, nonce: string, amount: string, data: string, messageProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, blockProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, messageBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: any, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string }, commitBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: any, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string } } | null };\n\nexport type GqlGetMessageStatusQueryVariables = Exact<{\n  nonce: Scalars['Nonce'];\n}>;\n\n\nexport type GqlGetMessageStatusQuery = { __typename: 'Query', messageStatus: { __typename: 'MessageStatus', state: GqlMessageState } };\n\nexport type GqlDryRunMutationVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n  utxoValidation?: InputMaybe<Scalars['Boolean']>;\n}>;\n\n\nexport type GqlDryRunMutation = { __typename: 'Mutation', dryRun: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null, to?: { __typename: 'Contract', id: string, bytecode: string, salt: string } | null }> };\n\nexport type GqlSubmitMutationVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n}>;\n\n\nexport type GqlSubmitMutation = { __typename: 'Mutation', submit: { __typename: 'Transaction', id: string } };\n\nexport type GqlProduceBlocksMutationVariables = Exact<{\n  startTimestamp?: InputMaybe<Scalars['Tai64Timestamp']>;\n  blocksToProduce: Scalars['U32'];\n}>;\n\n\nexport type GqlProduceBlocksMutation = { __typename: 'Mutation', produceBlocks: any };\n\nexport const ReceiptFragmentFragmentDoc = gql`\n    fragment receiptFragment on Receipt {\n  contract {\n    id\n    bytecode\n    salt\n  }\n  pc\n  is\n  to {\n    id\n    bytecode\n    salt\n  }\n  toAddress\n  amount\n  assetId\n  gas\n  param1\n  param2\n  val\n  ptr\n  digest\n  reason\n  ra\n  rb\n  rc\n  rd\n  len\n  receiptType\n  result\n  gasUsed\n  data\n  sender\n  recipient\n  nonce\n  contractId\n  subId\n}\n    `;\nexport const TransactionFragmentFragmentDoc = gql`\n    fragment transactionFragment on Transaction {\n  id\n  rawPayload\n  gasPrice\n  receipts {\n    ...receiptFragment\n  }\n  status {\n    type: __typename\n    ... on SubmittedStatus {\n      time\n    }\n    ... on SuccessStatus {\n      block {\n        id\n      }\n      time\n      programState {\n        returnType\n        data\n      }\n    }\n    ... on FailureStatus {\n      block {\n        id\n      }\n      time\n      reason\n    }\n  }\n}\n    ${ReceiptFragmentFragmentDoc}`;\nexport const CoinFragmentFragmentDoc = gql`\n    fragment coinFragment on Coin {\n  __typename\n  utxoId\n  owner\n  amount\n  assetId\n  maturity\n  blockCreated\n  txCreatedIdx\n}\n    `;\nexport const MessageCoinFragmentFragmentDoc = gql`\n    fragment messageCoinFragment on MessageCoin {\n  __typename\n  sender\n  recipient\n  nonce\n  amount\n  assetId\n  daHeight\n}\n    `;\nexport const MessageFragmentFragmentDoc = gql`\n    fragment messageFragment on Message {\n  amount\n  sender\n  recipient\n  data\n  nonce\n  daHeight\n}\n    `;\nexport const MessageProofFragmentFragmentDoc = gql`\n    fragment messageProofFragment on MessageProof {\n  messageProof {\n    proofSet\n    proofIndex\n  }\n  blockProof {\n    proofSet\n    proofIndex\n  }\n  messageBlockHeader {\n    id\n    daHeight\n    transactionsCount\n    transactionsRoot\n    height\n    prevRoot\n    time\n    applicationHash\n    messageReceiptRoot\n    messageReceiptCount\n  }\n  commitBlockHeader {\n    id\n    daHeight\n    transactionsCount\n    transactionsRoot\n    height\n    prevRoot\n    time\n    applicationHash\n    messageReceiptRoot\n    messageReceiptCount\n  }\n  sender\n  recipient\n  nonce\n  amount\n  data\n}\n    `;\nexport const BalanceFragmentFragmentDoc = gql`\n    fragment balanceFragment on Balance {\n  owner\n  amount\n  assetId\n}\n    `;\nexport const BlockFragmentFragmentDoc = gql`\n    fragment blockFragment on Block {\n  id\n  header {\n    height\n    time\n  }\n  transactions {\n    id\n  }\n}\n    `;\nexport const TxParametersFragmentFragmentDoc = gql`\n    fragment TxParametersFragment on TxParameters {\n  maxInputs\n  maxOutputs\n  maxWitnesses\n  maxGasPerTx\n  maxSize\n}\n    `;\nexport const PredicateParametersFragmentFragmentDoc = gql`\n    fragment PredicateParametersFragment on PredicateParameters {\n  maxPredicateLength\n  maxPredicateDataLength\n  maxGasPerPredicate\n  maxMessageDataLength\n}\n    `;\nexport const ScriptParametersFragmentFragmentDoc = gql`\n    fragment ScriptParametersFragment on ScriptParameters {\n  maxScriptLength\n  maxScriptDataLength\n}\n    `;\nexport const ContractParametersFragmentFragmentDoc = gql`\n    fragment ContractParametersFragment on ContractParameters {\n  contractMaxSize\n  maxStorageSlots\n}\n    `;\nexport const FeeParametersFragmentFragmentDoc = gql`\n    fragment FeeParametersFragment on FeeParameters {\n  gasPriceFactor\n  gasPerByte\n}\n    `;\nexport const DependentCostFragmentFragmentDoc = gql`\n    fragment DependentCostFragment on DependentCost {\n  __typename\n  ... on LightOperation {\n    base\n    unitsPerGas\n  }\n  ... on HeavyOperation {\n    base\n    gasPerUnit\n  }\n}\n    `;\nexport const GasCostsFragmentFragmentDoc = gql`\n    fragment GasCostsFragment on GasCosts {\n  add\n  addi\n  aloc\n  and\n  andi\n  bal\n  bhei\n  bhsh\n  burn\n  cb\n  cfei\n  cfsi\n  croo\n  div\n  divi\n  ecr1\n  eck1\n  ed19\n  eq\n  exp\n  expi\n  flag\n  gm\n  gt\n  gtf\n  ji\n  jmp\n  jne\n  jnei\n  jnzi\n  jmpf\n  jmpb\n  jnzf\n  jnzb\n  jnef\n  jneb\n  lb\n  log\n  lt\n  lw\n  mint\n  mlog\n  modOp\n  modi\n  moveOp\n  movi\n  mroo\n  mul\n  muli\n  mldv\n  noop\n  not\n  or\n  ori\n  poph\n  popl\n  pshh\n  pshl\n  ret\n  rvrt\n  sb\n  sll\n  slli\n  srl\n  srli\n  srw\n  sub\n  subi\n  sw\n  sww\n  time\n  tr\n  tro\n  wdcm\n  wqcm\n  wdop\n  wqop\n  wdml\n  wqml\n  wddv\n  wqdv\n  wdmd\n  wqmd\n  wdam\n  wqam\n  wdmm\n  wqmm\n  xor\n  xori\n  call {\n    ...DependentCostFragment\n  }\n  ccp {\n    ...DependentCostFragment\n  }\n  csiz {\n    ...DependentCostFragment\n  }\n  k256 {\n    ...DependentCostFragment\n  }\n  ldc {\n    ...DependentCostFragment\n  }\n  logd {\n    ...DependentCostFragment\n  }\n  mcl {\n    ...DependentCostFragment\n  }\n  mcli {\n    ...DependentCostFragment\n  }\n  mcp {\n    ...DependentCostFragment\n  }\n  mcpi {\n    ...DependentCostFragment\n  }\n  meq {\n    ...DependentCostFragment\n  }\n  retd {\n    ...DependentCostFragment\n  }\n  s256 {\n    ...DependentCostFragment\n  }\n  scwq {\n    ...DependentCostFragment\n  }\n  smo {\n    ...DependentCostFragment\n  }\n  srwq {\n    ...DependentCostFragment\n  }\n  swwq {\n    ...DependentCostFragment\n  }\n  contractRoot {\n    ...DependentCostFragment\n  }\n  stateRoot {\n    ...DependentCostFragment\n  }\n  vmInitialization {\n    ...DependentCostFragment\n  }\n  newStoragePerByte\n}\n    ${DependentCostFragmentFragmentDoc}`;\nexport const ConsensusParametersFragmentFragmentDoc = gql`\n    fragment consensusParametersFragment on ConsensusParameters {\n  txParams {\n    ...TxParametersFragment\n  }\n  predicateParams {\n    ...PredicateParametersFragment\n  }\n  scriptParams {\n    ...ScriptParametersFragment\n  }\n  contractParams {\n    ...ContractParametersFragment\n  }\n  feeParams {\n    ...FeeParametersFragment\n  }\n  gasCosts {\n    ...GasCostsFragment\n  }\n  baseAssetId\n  chainId\n}\n    ${TxParametersFragmentFragmentDoc}\n${PredicateParametersFragmentFragmentDoc}\n${ScriptParametersFragmentFragmentDoc}\n${ContractParametersFragmentFragmentDoc}\n${FeeParametersFragmentFragmentDoc}\n${GasCostsFragmentFragmentDoc}`;\nexport const ChainInfoFragmentFragmentDoc = gql`\n    fragment chainInfoFragment on ChainInfo {\n  name\n  latestBlock {\n    ...blockFragment\n  }\n  daHeight\n  consensusParameters {\n    ...consensusParametersFragment\n  }\n}\n    ${BlockFragmentFragmentDoc}\n${ConsensusParametersFragmentFragmentDoc}`;\nexport const ContractBalanceFragmentFragmentDoc = gql`\n    fragment contractBalanceFragment on ContractBalance {\n  contract\n  amount\n  assetId\n}\n    `;\nexport const PageInfoFragmentFragmentDoc = gql`\n    fragment pageInfoFragment on PageInfo {\n  hasPreviousPage\n  hasNextPage\n  startCursor\n  endCursor\n}\n    `;\nexport const NodeInfoFragmentFragmentDoc = gql`\n    fragment nodeInfoFragment on NodeInfo {\n  utxoValidation\n  vmBacktrace\n  minGasPrice\n  maxTx\n  maxDepth\n  nodeVersion\n  peers {\n    id\n    addresses\n    clientVersion\n    blockHeight\n    lastHeartbeatMs\n    appScore\n  }\n}\n    `;\nexport const GetVersionDocument = gql`\n    query getVersion {\n  nodeInfo {\n    nodeVersion\n  }\n}\n    `;\nexport const GetNodeInfoDocument = gql`\n    query getNodeInfo {\n  nodeInfo {\n    ...nodeInfoFragment\n  }\n}\n    ${NodeInfoFragmentFragmentDoc}`;\nexport const GetChainDocument = gql`\n    query getChain {\n  chain {\n    ...chainInfoFragment\n  }\n}\n    ${ChainInfoFragmentFragmentDoc}`;\nexport const GetTransactionDocument = gql`\n    query getTransaction($transactionId: TransactionId!) {\n  transaction(id: $transactionId) {\n    ...transactionFragment\n  }\n}\n    ${TransactionFragmentFragmentDoc}`;\nexport const GetTransactionWithReceiptsDocument = gql`\n    query getTransactionWithReceipts($transactionId: TransactionId!) {\n  transaction(id: $transactionId) {\n    ...transactionFragment\n    receipts {\n      ...receiptFragment\n    }\n  }\n}\n    ${TransactionFragmentFragmentDoc}\n${ReceiptFragmentFragmentDoc}`;\nexport const GetTransactionsDocument = gql`\n    query getTransactions($after: String, $before: String, $first: Int, $last: Int) {\n  transactions(after: $after, before: $before, first: $first, last: $last) {\n    edges {\n      node {\n        ...transactionFragment\n      }\n    }\n  }\n}\n    ${TransactionFragmentFragmentDoc}`;\nexport const GetTransactionsByOwnerDocument = gql`\n    query getTransactionsByOwner($owner: Address!, $after: String, $before: String, $first: Int, $last: Int) {\n  transactionsByOwner(\n    owner: $owner\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    pageInfo {\n      ...pageInfoFragment\n    }\n    edges {\n      node {\n        ...transactionFragment\n      }\n    }\n  }\n}\n    ${PageInfoFragmentFragmentDoc}\n${TransactionFragmentFragmentDoc}`;\nexport const EstimatePredicatesDocument = gql`\n    query estimatePredicates($encodedTransaction: HexString!) {\n  estimatePredicates(tx: $encodedTransaction) {\n    ...transactionFragment\n  }\n}\n    ${TransactionFragmentFragmentDoc}`;\nexport const GetBlockDocument = gql`\n    query getBlock($blockId: BlockId, $height: U32) {\n  block(id: $blockId, height: $height) {\n    ...blockFragment\n  }\n}\n    ${BlockFragmentFragmentDoc}`;\nexport const GetBlockWithTransactionsDocument = gql`\n    query getBlockWithTransactions($blockId: BlockId, $blockHeight: U32) {\n  block(id: $blockId, height: $blockHeight) {\n    ...blockFragment\n    transactions {\n      ...transactionFragment\n    }\n  }\n}\n    ${BlockFragmentFragmentDoc}\n${TransactionFragmentFragmentDoc}`;\nexport const GetBlocksDocument = gql`\n    query getBlocks($after: String, $before: String, $first: Int, $last: Int) {\n  blocks(after: $after, before: $before, first: $first, last: $last) {\n    edges {\n      node {\n        ...blockFragment\n      }\n    }\n  }\n}\n    ${BlockFragmentFragmentDoc}`;\nexport const GetCoinDocument = gql`\n    query getCoin($coinId: UtxoId!) {\n  coin(utxoId: $coinId) {\n    ...coinFragment\n  }\n}\n    ${CoinFragmentFragmentDoc}`;\nexport const GetCoinsDocument = gql`\n    query getCoins($filter: CoinFilterInput!, $after: String, $before: String, $first: Int, $last: Int) {\n  coins(\n    filter: $filter\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...coinFragment\n      }\n    }\n  }\n}\n    ${CoinFragmentFragmentDoc}`;\nexport const GetCoinsToSpendDocument = gql`\n    query getCoinsToSpend($owner: Address!, $queryPerAsset: [SpendQueryElementInput!]!, $excludedIds: ExcludeInput) {\n  coinsToSpend(\n    owner: $owner\n    queryPerAsset: $queryPerAsset\n    excludedIds: $excludedIds\n  ) {\n    ...coinFragment\n    ...messageCoinFragment\n  }\n}\n    ${CoinFragmentFragmentDoc}\n${MessageCoinFragmentFragmentDoc}`;\nexport const GetContractDocument = gql`\n    query getContract($contractId: ContractId!) {\n  contract(id: $contractId) {\n    bytecode\n    id\n  }\n}\n    `;\nexport const GetContractBalanceDocument = gql`\n    query getContractBalance($contract: ContractId!, $asset: AssetId!) {\n  contractBalance(contract: $contract, asset: $asset) {\n    ...contractBalanceFragment\n  }\n}\n    ${ContractBalanceFragmentFragmentDoc}`;\nexport const GetBalanceDocument = gql`\n    query getBalance($owner: Address!, $assetId: AssetId!) {\n  balance(owner: $owner, assetId: $assetId) {\n    ...balanceFragment\n  }\n}\n    ${BalanceFragmentFragmentDoc}`;\nexport const GetBalancesDocument = gql`\n    query getBalances($filter: BalanceFilterInput!, $after: String, $before: String, $first: Int, $last: Int) {\n  balances(\n    filter: $filter\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...balanceFragment\n      }\n    }\n  }\n}\n    ${BalanceFragmentFragmentDoc}`;\nexport const GetMessagesDocument = gql`\n    query getMessages($owner: Address!, $after: String, $before: String, $first: Int, $last: Int) {\n  messages(\n    owner: $owner\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...messageFragment\n      }\n    }\n  }\n}\n    ${MessageFragmentFragmentDoc}`;\nexport const GetMessageProofDocument = gql`\n    query getMessageProof($transactionId: TransactionId!, $nonce: Nonce!, $commitBlockId: BlockId, $commitBlockHeight: U32) {\n  messageProof(\n    transactionId: $transactionId\n    nonce: $nonce\n    commitBlockId: $commitBlockId\n    commitBlockHeight: $commitBlockHeight\n  ) {\n    ...messageProofFragment\n  }\n}\n    ${MessageProofFragmentFragmentDoc}`;\nexport const GetMessageStatusDocument = gql`\n    query getMessageStatus($nonce: Nonce!) {\n  messageStatus(nonce: $nonce) {\n    state\n  }\n}\n    `;\nexport const DryRunDocument = gql`\n    mutation dryRun($encodedTransaction: HexString!, $utxoValidation: Boolean) {\n  dryRun(tx: $encodedTransaction, utxoValidation: $utxoValidation) {\n    ...receiptFragment\n  }\n}\n    ${ReceiptFragmentFragmentDoc}`;\nexport const SubmitDocument = gql`\n    mutation submit($encodedTransaction: HexString!) {\n  submit(tx: $encodedTransaction) {\n    id\n  }\n}\n    `;\nexport const ProduceBlocksDocument = gql`\n    mutation produceBlocks($startTimestamp: Tai64Timestamp, $blocksToProduce: U32!) {\n  produceBlocks(\n    blocksToProduce: $blocksToProduce\n    startTimestamp: $startTimestamp\n  )\n}\n    `;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    getVersion(variables?: GqlGetVersionQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetVersionQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetVersionQuery>(GetVersionDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getVersion', 'query');\n    },\n    getNodeInfo(variables?: GqlGetNodeInfoQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetNodeInfoQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetNodeInfoQuery>(GetNodeInfoDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getNodeInfo', 'query');\n    },\n    getChain(variables?: GqlGetChainQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetChainQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetChainQuery>(GetChainDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getChain', 'query');\n    },\n    getTransaction(variables: GqlGetTransactionQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetTransactionQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetTransactionQuery>(GetTransactionDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTransaction', 'query');\n    },\n    getTransactionWithReceipts(variables: GqlGetTransactionWithReceiptsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetTransactionWithReceiptsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetTransactionWithReceiptsQuery>(GetTransactionWithReceiptsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTransactionWithReceipts', 'query');\n    },\n    getTransactions(variables?: GqlGetTransactionsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetTransactionsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetTransactionsQuery>(GetTransactionsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTransactions', 'query');\n    },\n    getTransactionsByOwner(variables: GqlGetTransactionsByOwnerQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetTransactionsByOwnerQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetTransactionsByOwnerQuery>(GetTransactionsByOwnerDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getTransactionsByOwner', 'query');\n    },\n    estimatePredicates(variables: GqlEstimatePredicatesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlEstimatePredicatesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlEstimatePredicatesQuery>(EstimatePredicatesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'estimatePredicates', 'query');\n    },\n    getBlock(variables?: GqlGetBlockQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetBlockQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetBlockQuery>(GetBlockDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getBlock', 'query');\n    },\n    getBlockWithTransactions(variables?: GqlGetBlockWithTransactionsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetBlockWithTransactionsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetBlockWithTransactionsQuery>(GetBlockWithTransactionsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getBlockWithTransactions', 'query');\n    },\n    getBlocks(variables?: GqlGetBlocksQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetBlocksQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetBlocksQuery>(GetBlocksDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getBlocks', 'query');\n    },\n    getCoin(variables: GqlGetCoinQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetCoinQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetCoinQuery>(GetCoinDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getCoin', 'query');\n    },\n    getCoins(variables: GqlGetCoinsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetCoinsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetCoinsQuery>(GetCoinsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getCoins', 'query');\n    },\n    getCoinsToSpend(variables: GqlGetCoinsToSpendQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetCoinsToSpendQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetCoinsToSpendQuery>(GetCoinsToSpendDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getCoinsToSpend', 'query');\n    },\n    getContract(variables: GqlGetContractQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetContractQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetContractQuery>(GetContractDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getContract', 'query');\n    },\n    getContractBalance(variables: GqlGetContractBalanceQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetContractBalanceQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetContractBalanceQuery>(GetContractBalanceDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getContractBalance', 'query');\n    },\n    getBalance(variables: GqlGetBalanceQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetBalanceQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetBalanceQuery>(GetBalanceDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getBalance', 'query');\n    },\n    getBalances(variables: GqlGetBalancesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetBalancesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetBalancesQuery>(GetBalancesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getBalances', 'query');\n    },\n    getMessages(variables: GqlGetMessagesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetMessagesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetMessagesQuery>(GetMessagesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getMessages', 'query');\n    },\n    getMessageProof(variables: GqlGetMessageProofQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetMessageProofQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetMessageProofQuery>(GetMessageProofDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getMessageProof', 'query');\n    },\n    getMessageStatus(variables: GqlGetMessageStatusQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlGetMessageStatusQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlGetMessageStatusQuery>(GetMessageStatusDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'getMessageStatus', 'query');\n    },\n    dryRun(variables: GqlDryRunMutationVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlDryRunMutation> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlDryRunMutation>(DryRunDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'dryRun', 'mutation');\n    },\n    submit(variables: GqlSubmitMutationVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlSubmitMutation> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlSubmitMutation>(SubmitDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'submit', 'mutation');\n    },\n    produceBlocks(variables: GqlProduceBlocksMutationVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<GqlProduceBlocksMutation> {\n      return withWrapper((wrappedRequestHeaders) => client.request<GqlProduceBlocksMutation>(ProduceBlocksDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'produceBlocks', 'mutation');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\ntype Cache = {\n  [key: string]: {\n    expires: number;\n    value: BytesLike;\n  };\n};\nconst cache: Cache = {}; // it's a cache hash ~~> cash?\n\nconst DEFAULT_TTL_IN_MS = 30 * 1000; // 30seconds\n\nexport class MemoryCache {\n  ttl: number;\n  constructor(ttlInMs: number = DEFAULT_TTL_IN_MS) {\n    this.ttl = ttlInMs;\n\n    if (typeof ttlInMs !== 'number' || this.ttl <= 0) {\n      throw new FuelError(\n        ErrorCode.INVALID_TTL,\n        `Invalid TTL: ${this.ttl}. Use a value greater than zero.`\n      );\n    }\n  }\n\n  get(value: BytesLike, isAutoExpiring = true): BytesLike | undefined {\n    const key = hexlify(value);\n    if (cache[key]) {\n      if (!isAutoExpiring || cache[key].expires > Date.now()) {\n        return cache[key].value;\n      }\n\n      this.del(value);\n    }\n\n    return undefined;\n  }\n\n  set(value: BytesLike): number {\n    const expiresAt = Date.now() + this.ttl;\n    const key = hexlify(value);\n    cache[key] = {\n      expires: expiresAt,\n      value,\n    };\n\n    return expiresAt;\n  }\n\n  getAllData(): BytesLike[] {\n    return Object.keys(cache).reduce((list, key) => {\n      const data = this.get(key, false);\n      if (data) {\n        list.push(data);\n      }\n\n      return list;\n    }, [] as BytesLike[]);\n  }\n\n  getActiveData(): BytesLike[] {\n    return Object.keys(cache).reduce((list, key) => {\n      const data = this.get(key);\n      if (data) {\n        list.push(data);\n      }\n\n      return list;\n    }, [] as BytesLike[]);\n  }\n\n  del(value: BytesLike) {\n    const key = hexlify(value);\n    delete cache[key];\n  }\n}\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BigNumberish } from '@fuel-ts/math';\nimport { bn, toNumber } from '@fuel-ts/math';\nimport type { Input } from '@fuel-ts/transactions';\nimport { InputType } from '@fuel-ts/transactions';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport type CoinTransactionRequestInput = {\n  type: InputType.Coin;\n\n  /** UTXO ID */\n  id: BytesLike;\n\n  /** Owning address or script hash */\n  owner: BytesLike;\n\n  /** Amount of coins */\n  amount: BigNumberish;\n\n  /** Asset ID of the coins */\n  assetId: BytesLike;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: BytesLike;\n\n  /** Index of witness that authorizes spending the coin */\n  witnessIndex: number;\n\n  /** UTXO being spent must have been created at least this many blocks ago */\n  maturity?: number;\n\n  /** Gas used by predicate */\n  predicateGasUsed?: BigNumberish;\n\n  /** Predicate bytecode */\n  predicate?: BytesLike;\n\n  /** Predicate input data (parameters) */\n  predicateData?: BytesLike;\n};\n\nexport type MessageTransactionRequestInput = {\n  type: InputType.Message;\n\n  /** Address of sender */\n  sender: BytesLike;\n\n  /** Address of recipient */\n  recipient: BytesLike;\n\n  /** Amount of coins */\n  amount: BigNumberish;\n\n  /** Index of witness that authorizes the message */\n  witnessIndex: number;\n\n  /** Unique nonce of message */\n  nonce: BytesLike;\n\n  /** Gas used by predicate */\n  predicateGasUsed?: BigNumberish;\n\n  /** Predicate bytecode */\n  predicate?: BytesLike;\n\n  /** Predicate input data (parameters) */\n  predicateData?: BytesLike;\n\n  /** data of message */\n  data?: BytesLike;\n};\n\nexport type ContractTransactionRequestInput = {\n  type: InputType.Contract;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: BytesLike;\n\n  /** Contract ID */\n  contractId: BytesLike;\n};\nexport type TransactionRequestInput =\n  | CoinTransactionRequestInput\n  | ContractTransactionRequestInput\n  | MessageTransactionRequestInput;\n\n/** @hidden */\nexport const inputify = (value: TransactionRequestInput): Input => {\n  const { type } = value;\n\n  switch (value.type) {\n    case InputType.Coin: {\n      const predicate = getBytesCopy(value.predicate ?? '0x');\n      const predicateData = getBytesCopy(value.predicateData ?? '0x');\n      return {\n        type: InputType.Coin,\n        txID: hexlify(getBytesCopy(value.id).slice(0, 32)),\n        outputIndex: getBytesCopy(value.id)[32],\n        owner: hexlify(value.owner),\n        amount: bn(value.amount),\n        assetId: hexlify(value.assetId),\n        txPointer: {\n          blockHeight: toNumber(getBytesCopy(value.txPointer).slice(0, 8)),\n          txIndex: toNumber(getBytesCopy(value.txPointer).slice(8, 16)),\n        },\n        witnessIndex: value.witnessIndex,\n        maturity: value.maturity ?? 0,\n        predicateGasUsed: bn(value.predicateGasUsed),\n        predicateLength: predicate.length,\n        predicateDataLength: predicateData.length,\n        predicate: hexlify(predicate),\n        predicateData: hexlify(predicateData),\n      };\n    }\n    case InputType.Contract: {\n      return {\n        type: InputType.Contract,\n        txID: ZeroBytes32,\n        outputIndex: 0,\n        balanceRoot: ZeroBytes32,\n        stateRoot: ZeroBytes32,\n        txPointer: {\n          blockHeight: toNumber(getBytesCopy(value.txPointer).slice(0, 8)),\n          txIndex: toNumber(getBytesCopy(value.txPointer).slice(8, 16)),\n        },\n        contractID: hexlify(value.contractId),\n      };\n    }\n    case InputType.Message: {\n      const predicate = getBytesCopy(value.predicate ?? '0x');\n      const predicateData = getBytesCopy(value.predicateData ?? '0x');\n      const data = getBytesCopy(value.data ?? '0x');\n      return {\n        type: InputType.Message,\n        sender: hexlify(value.sender),\n        recipient: hexlify(value.recipient),\n        amount: bn(value.amount),\n        nonce: hexlify(value.nonce),\n        witnessIndex: value.witnessIndex,\n        predicateGasUsed: bn(value.predicateGasUsed),\n        predicateLength: predicate.length,\n        predicateDataLength: predicateData.length,\n        predicate: hexlify(predicate),\n        predicateData: hexlify(predicateData),\n        data: hexlify(data),\n        dataLength: data.length,\n      };\n    }\n    default: {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_INPUT,\n        `Invalid transaction input type: ${type}.`\n      );\n    }\n  }\n};\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BigNumberish } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { Output } from '@fuel-ts/transactions';\nimport { OutputType } from '@fuel-ts/transactions';\nimport { hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport type CoinTransactionRequestOutput = {\n  type: OutputType.Coin;\n  /** Receiving address or script hash */\n  to: BytesLike;\n  /** Amount of coins to send */\n  amount: BigNumberish;\n  /** Asset ID of coins */\n  assetId: BytesLike;\n};\nexport type ContractTransactionRequestOutput = {\n  type: OutputType.Contract;\n  /** Index of input contract */\n  inputIndex: number;\n};\nexport type ChangeTransactionRequestOutput = {\n  type: OutputType.Change;\n  /** Receiving address or script hash */\n  to: BytesLike;\n  /** Asset ID of coins */\n  assetId: BytesLike;\n};\nexport type VariableTransactionRequestOutput = {\n  type: OutputType.Variable;\n};\nexport type ContractCreatedTransactionRequestOutput = {\n  type: OutputType.ContractCreated;\n  /** Contract ID */\n  contractId: BytesLike;\n  /** State Root */\n  stateRoot: BytesLike;\n};\nexport type TransactionRequestOutput =\n  | CoinTransactionRequestOutput\n  | ContractTransactionRequestOutput\n  | ChangeTransactionRequestOutput\n  | VariableTransactionRequestOutput\n  | ContractCreatedTransactionRequestOutput;\n\n/** @hidden */\nexport const outputify = (value: TransactionRequestOutput): Output => {\n  const { type } = value;\n\n  switch (type) {\n    case OutputType.Coin: {\n      return {\n        type: OutputType.Coin,\n        to: hexlify(value.to),\n        amount: bn(value.amount),\n        assetId: hexlify(value.assetId),\n      };\n    }\n    case OutputType.Contract: {\n      return {\n        type: OutputType.Contract,\n        inputIndex: value.inputIndex,\n        balanceRoot: ZeroBytes32,\n        stateRoot: ZeroBytes32,\n      };\n    }\n    case OutputType.Change: {\n      return {\n        type: OutputType.Change,\n        to: hexlify(value.to),\n        amount: bn(0),\n        assetId: hexlify(value.assetId),\n      };\n    }\n    case OutputType.Variable: {\n      return {\n        type: OutputType.Variable,\n        to: ZeroBytes32,\n        amount: bn(0),\n        assetId: ZeroBytes32,\n      };\n    }\n    case OutputType.ContractCreated: {\n      return {\n        type: OutputType.ContractCreated,\n        contractId: hexlify(value.contractId),\n        stateRoot: hexlify(value.stateRoot),\n      };\n    }\n    default: {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_INPUT,\n        `Invalid transaction output type: ${type}.`\n      );\n    }\n  }\n};\n","import type { BytesLike } from 'ethers';\n\nimport type { Coin } from './coin';\nimport type { MessageCoin } from './message';\n\nexport type RawCoin = {\n  utxoId: string;\n  owner: string;\n  amount: string;\n  assetId: string;\n  maturity: string;\n  blockCreated: string;\n  txCreatedIdx: string;\n};\n\nexport type RawMessage = {\n  amount: string;\n  sender: string;\n  assetId: string;\n  recipient: string;\n  data: string;\n  nonce: string;\n  daHeight: string;\n};\n\nexport type RawResource = RawCoin | RawMessage;\nexport type Resource = Coin | MessageCoin;\n\n/** @hidden */\nexport type ExcludeResourcesOption = {\n  utxos?: BytesLike[];\n  messages?: BytesLike[];\n};\n\n/** @hidden */\nexport const isRawCoin = (resource: RawResource): resource is RawCoin => 'utxoId' in resource;\n/** @hidden */\nexport const isRawMessage = (resource: RawResource): resource is RawMessage =>\n  'recipient' in resource;\n/** @hidden */\nexport const isCoin = (resource: Resource): resource is Coin => 'id' in resource;\n/** @hidden */\nexport const isMessage = (resource: Resource): resource is MessageCoin => 'recipient' in resource;\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport type {\n  ReceiptBurn,\n  ReceiptCall,\n  ReceiptLog,\n  ReceiptLogData,\n  ReceiptMessageOut,\n  ReceiptMint,\n  ReceiptPanic,\n  ReceiptReturn,\n  ReceiptReturnData,\n  ReceiptRevert,\n  ReceiptScriptResult,\n  ReceiptTransfer,\n  ReceiptTransferOut,\n} from '@fuel-ts/transactions';\nimport {\n  ReceiptBurnCoder,\n  ReceiptMessageOutCoder,\n  ReceiptMintCoder,\n  ReceiptType,\n} from '@fuel-ts/transactions';\nimport { FAILED_TRANSFER_TO_ADDRESS_SIGNAL } from '@fuel-ts/transactions/configs';\nimport { getBytesCopy } from 'ethers';\n\nimport type { GqlReceipt } from '../__generated__/operations';\nimport { GqlReceiptType } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\n\n/** @hidden */\nconst doesReceiptHaveMissingOutputVariables = (\n  receipt: TransactionResultReceipt\n): receipt is ReceiptRevert =>\n  receipt.type === ReceiptType.Revert &&\n  receipt.val.toString('hex') === FAILED_TRANSFER_TO_ADDRESS_SIGNAL;\n\n/** @hidden */\nconst doesReceiptHaveMissingContractId = (\n  receipt: TransactionResultReceipt\n): receipt is ReceiptPanic =>\n  receipt.type === ReceiptType.Panic &&\n  receipt.contractId !== '0x0000000000000000000000000000000000000000000000000000000000000000';\n\n/** @hidden */\nexport const getReceiptsWithMissingData = (receipts: Array<TransactionResultReceipt>) =>\n  receipts.reduce<{\n    missingOutputVariables: Array<ReceiptRevert>;\n    missingOutputContractIds: Array<ReceiptPanic>;\n  }>(\n    (memo, receipt) => {\n      if (doesReceiptHaveMissingOutputVariables(receipt)) {\n        memo.missingOutputVariables.push(receipt);\n      }\n      if (doesReceiptHaveMissingContractId(receipt)) {\n        memo.missingOutputContractIds.push(receipt);\n      }\n      return memo;\n    },\n    {\n      missingOutputVariables: [],\n      missingOutputContractIds: [],\n    }\n  );\n\nconst hexOrZero = (hex?: string | null) => hex || ZeroBytes32;\n\nexport function assembleReceiptByType(receipt: GqlReceipt) {\n  const { receiptType } = receipt;\n\n  switch (receiptType) {\n    case GqlReceiptType.Call: {\n      const callReceipt: ReceiptCall = {\n        type: ReceiptType.Call,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt?.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        gas: bn(receipt.gas),\n        param1: bn(receipt.param1),\n        param2: bn(receipt.param2),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return callReceipt;\n    }\n\n    case GqlReceiptType.Return: {\n      const returnReceipt: ReceiptReturn = {\n        type: ReceiptType.Return,\n        id: hexOrZero(receipt.contract?.id),\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return returnReceipt;\n    }\n\n    case GqlReceiptType.ReturnData: {\n      const returnDataReceipt: ReceiptReturnData = {\n        type: ReceiptType.ReturnData,\n        id: hexOrZero(receipt.contract?.id),\n        ptr: bn(receipt.ptr),\n        len: bn(receipt.len),\n        digest: hexOrZero(receipt.digest),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return returnDataReceipt;\n    }\n\n    case GqlReceiptType.Panic: {\n      const panicReceipt: ReceiptPanic = {\n        type: ReceiptType.Panic,\n        id: hexOrZero(receipt.contract?.id),\n        reason: bn(receipt.reason),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n        contractId: hexOrZero(receipt.contractId),\n      };\n\n      return panicReceipt;\n    }\n\n    case GqlReceiptType.Revert: {\n      const revertReceipt: ReceiptRevert = {\n        type: ReceiptType.Revert,\n        id: hexOrZero(receipt.contract?.id),\n        val: bn(receipt.ra),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return revertReceipt;\n    }\n\n    case GqlReceiptType.Log: {\n      const logReceipt: ReceiptLog = {\n        type: ReceiptType.Log,\n        id: hexOrZero(receipt.contract?.id),\n        val0: bn(receipt.ra),\n        val1: bn(receipt.rb),\n        val2: bn(receipt.rc),\n        val3: bn(receipt.rd),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return logReceipt;\n    }\n\n    case GqlReceiptType.LogData: {\n      const logDataReceipt: ReceiptLogData = {\n        type: ReceiptType.LogData,\n        id: hexOrZero(receipt.contract?.id),\n        val0: bn(receipt.ra),\n        val1: bn(receipt.rb),\n        ptr: bn(receipt.ptr),\n        len: bn(receipt.len),\n        digest: hexOrZero(receipt.digest),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return logDataReceipt;\n    }\n\n    case GqlReceiptType.Transfer: {\n      const transferReceipt: ReceiptTransfer = {\n        type: ReceiptType.Transfer,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt.toAddress || receipt?.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return transferReceipt;\n    }\n\n    case GqlReceiptType.TransferOut: {\n      const transferOutReceipt: ReceiptTransferOut = {\n        type: ReceiptType.TransferOut,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt.toAddress || receipt.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return transferOutReceipt;\n    }\n\n    case GqlReceiptType.ScriptResult: {\n      const scriptResultReceipt: ReceiptScriptResult = {\n        type: ReceiptType.ScriptResult,\n        result: bn(receipt.result),\n        gasUsed: bn(receipt.gasUsed),\n      };\n\n      return scriptResultReceipt;\n    }\n\n    case GqlReceiptType.MessageOut: {\n      const sender = hexOrZero(receipt.sender);\n      const recipient = hexOrZero(receipt.recipient);\n      const nonce = hexOrZero(receipt.nonce);\n      const amount = bn(receipt.amount);\n      const data = receipt.data ? getBytesCopy(receipt.data) : Uint8Array.from([]);\n      const digest = hexOrZero(receipt.digest);\n\n      const messageId = ReceiptMessageOutCoder.getMessageId({\n        sender,\n        recipient,\n        nonce,\n        amount,\n        data,\n      });\n\n      const receiptMessageOut: ReceiptMessageOut = {\n        type: ReceiptType.MessageOut,\n        sender,\n        recipient,\n        amount,\n        nonce,\n        data,\n        digest,\n        messageId,\n      };\n\n      return receiptMessageOut;\n    }\n\n    case GqlReceiptType.Mint: {\n      const contractId = hexOrZero(receipt.contract?.id);\n      const subId = hexOrZero(receipt.subId);\n      const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n      const mintReceipt: ReceiptMint = {\n        type: ReceiptType.Mint,\n        subId,\n        contractId,\n        assetId,\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return mintReceipt;\n    }\n\n    case GqlReceiptType.Burn: {\n      const contractId = hexOrZero(receipt.contract?.id);\n      const subId = hexOrZero(receipt.subId);\n      const assetId = ReceiptBurnCoder.getAssetId(contractId, subId);\n\n      const burnReceipt: ReceiptBurn = {\n        type: ReceiptType.Burn,\n        subId,\n        contractId,\n        assetId,\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return burnReceipt;\n    }\n\n    default:\n      throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${receiptType}.`);\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nconst DEFAULT_BLOCK_EXPLORER_URL = 'https://fuellabs.github.io/block-explorer-v2';\n\n/** @hidden */\nconst getPathFromInput = (\n  key: BuildBlockExplorerUrlHelperParam,\n  value: string | number | undefined\n) => {\n  const pathMap = {\n    address: `address`,\n    txId: `transaction`,\n    blockNumber: `block`,\n  };\n  const path = pathMap[key] || key;\n  return `${path}/${value}`;\n};\n\ntype BuildBlockExplorerUrlHelperParam = 'address' | 'txId' | 'blockNumber';\n\n/**\n * @hidden\n *\n * Builds a block explorer url based on and the given path, block explorer URL and provider URL\n */\nexport const buildBlockExplorerUrl = (\n  options: {\n    blockExplorerUrl?: string;\n    path?: string;\n    providerUrl?: string;\n    address?: string;\n    txId?: string;\n    blockNumber?: number;\n  } = {}\n) => {\n  const { blockExplorerUrl, path, providerUrl, address, txId, blockNumber } = options;\n  const explorerUrl = blockExplorerUrl || DEFAULT_BLOCK_EXPLORER_URL;\n\n  // make sure that only ONE or none of the following is defined: address, txId, blockNumber\n  const customInputParams = [\n    {\n      key: 'address',\n      value: address,\n    },\n    {\n      key: 'txId',\n      value: txId,\n    },\n    {\n      key: 'blockNumber',\n      value: blockNumber,\n    },\n  ];\n\n  const definedValues = customInputParams\n    .filter((param) => !!param.value)\n    .map(({ key, value }) => ({\n      key,\n      value,\n    }));\n\n  const hasAnyDefinedValues = definedValues.length > 0;\n\n  if (definedValues.length > 1) {\n    throw new FuelError(\n      ErrorCode.ERROR_BUILDING_BLOCK_EXPLORER_URL,\n      `Only one of the following can be passed in to buildBlockExplorerUrl: ${customInputParams\n        .map((param) => param.key)\n        .join(', ')}.`\n    );\n  }\n\n  if (path && definedValues.length > 0) {\n    const inputKeys = customInputParams.map(({ key }) => key).join(', ');\n    throw new FuelError(\n      ErrorCode.ERROR_BUILDING_BLOCK_EXPLORER_URL,\n      `You cannot pass in a path to 'buildBlockExplorerUrl' along with any of the following: ${inputKeys}.`\n    );\n  }\n\n  const pathGeneratedFromInputParams = hasAnyDefinedValues\n    ? getPathFromInput(\n        definedValues[0].key as BuildBlockExplorerUrlHelperParam,\n        definedValues[0].value\n      )\n    : '';\n\n  // Remove leading and trailing slashes from the path and block explorer url respectively, if present\n  const trimSlashes = /^\\/|\\/$/gm;\n  const cleanPath = path ? path.replace(trimSlashes, '') : pathGeneratedFromInputParams;\n  const cleanBlockExplorerUrl = explorerUrl.replace(trimSlashes, '');\n  const cleanProviderUrl = providerUrl?.replace(trimSlashes, '');\n  const encodedProviderUrl = cleanProviderUrl ? encodeURIComponent(cleanProviderUrl) : undefined;\n\n  // if the block explorer url doesn't have a protocol i.e. http:// or https://, add https://\n  const protocol = cleanBlockExplorerUrl.match(/^https?:\\/\\//) ? '' : 'https://';\n  const providerUrlProtocol = cleanProviderUrl?.match(/^https?:\\/\\//) ? '' : 'https://';\n\n  const url = `${protocol}${cleanBlockExplorerUrl}/${cleanPath}${\n    encodedProviderUrl ? `?providerUrl=${providerUrlProtocol}${encodedProviderUrl}` : ''\n  }`;\n\n  return url;\n};\n","import type { BN, BNInput } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport { ReceiptType, type Input } from '@fuel-ts/transactions';\nimport { getBytesCopy } from 'ethers';\n\nimport type { GqlDependentCost, GqlGasCosts } from '../__generated__/operations';\nimport type { TransactionRequestInput } from '../transaction-request';\nimport type {\n  TransactionResultReceipt,\n  TransactionResultScriptResultReceipt,\n} from '../transaction-response';\n\n/** @hidden */\nexport const calculatePriceWithFactor = (gas: BN, gasPrice: BN, priceFactor: BN): BN =>\n  bn(Math.ceil(gas.mul(gasPrice).toNumber() / priceFactor.toNumber()));\n\n/** @hidden */\nexport const getGasUsedFromReceipts = (receipts: Array<TransactionResultReceipt>): BN => {\n  const scriptResult = receipts.filter(\n    (receipt) => receipt.type === ReceiptType.ScriptResult\n  ) as TransactionResultScriptResultReceipt[];\n\n  const gasUsed = scriptResult.reduce((prev, receipt) => prev.add(receipt.gasUsed), bn(0));\n\n  return gasUsed;\n};\n\nexport function resolveGasDependentCosts(byteSize: BNInput, gasDependentCost: GqlDependentCost) {\n  const base = bn(gasDependentCost.base);\n  let dependentValue = bn(0);\n  if (gasDependentCost.__typename === 'LightOperation') {\n    dependentValue = bn(byteSize).div(bn(gasDependentCost.unitsPerGas));\n  }\n  if (gasDependentCost.__typename === 'HeavyOperation') {\n    dependentValue = bn(byteSize).mul(bn(gasDependentCost.gasPerUnit));\n  }\n  return base.add(dependentValue);\n}\n\nexport function gasUsedByInputs(\n  inputs: Array<TransactionRequestInput | Input>,\n  txBytesSize: number,\n  gasCosts: GqlGasCosts\n) {\n  const witnessCache: Array<number> = [];\n  const totalGas = inputs.reduce((total, input) => {\n    if ('predicate' in input && input.predicate && input.predicate !== '0x') {\n      return total.add(\n        resolveGasDependentCosts(txBytesSize, gasCosts.vmInitialization)\n          .add(\n            resolveGasDependentCosts(getBytesCopy(input.predicate).length, gasCosts.contractRoot)\n          )\n          .add(bn(input.predicateGasUsed))\n      );\n    }\n    if ('witnessIndex' in input && !witnessCache.includes(input.witnessIndex)) {\n      witnessCache.push(input.witnessIndex);\n      return total.add(gasCosts.ecr1);\n    }\n    return total;\n  }, bn());\n  // Never allow gas to exceed MAX_U64\n  return totalGas;\n}\n\nexport interface IGetMinGasParams {\n  inputs: Array<TransactionRequestInput | Input>;\n  gasCosts: GqlGasCosts;\n  txBytesSize: number;\n  metadataGas: BN;\n  gasPerByte: BN;\n}\n\nexport function getMinGas(params: IGetMinGasParams) {\n  const { gasCosts, gasPerByte, inputs, metadataGas, txBytesSize } = params;\n\n  const vmInitGas = resolveGasDependentCosts(txBytesSize, gasCosts.vmInitialization);\n  const bytesGas = bn(txBytesSize).mul(gasPerByte);\n  const inputsGas = gasUsedByInputs(inputs, txBytesSize, gasCosts);\n\n  const minGas = vmInitGas.add(bytesGas).add(inputsGas).add(metadataGas).maxU64();\n\n  return minGas;\n}\n\nexport interface IGetMaxGasParams {\n  witnessesLength: number;\n  witnessLimit?: BN;\n  gasPerByte: BN;\n  minGas: BN;\n  gasLimit?: BN;\n}\n\nexport function getMaxGas(params: IGetMaxGasParams) {\n  const { gasPerByte, witnessesLength, witnessLimit, minGas, gasLimit = bn(0) } = params;\n\n  let remainingAllowedWitnessGas = bn(0);\n\n  if (witnessLimit?.gt(0) && witnessLimit.gte(witnessesLength)) {\n    remainingAllowedWitnessGas = bn(witnessLimit).sub(witnessesLength).mul(gasPerByte);\n  }\n\n  return remainingAllowedWitnessGas.add(minGas).add(gasLimit);\n}\n\nexport function calculateMetadataGasForTxCreate({\n  gasCosts,\n  stateRootSize,\n  txBytesSize,\n  contractBytesSize,\n}: {\n  gasCosts: GqlGasCosts;\n  contractBytesSize: BN;\n  stateRootSize: number;\n  txBytesSize: number;\n}) {\n  const contractRootGas = resolveGasDependentCosts(contractBytesSize, gasCosts.contractRoot);\n  const stateRootGas = resolveGasDependentCosts(stateRootSize, gasCosts.stateRoot);\n  const txIdGas = resolveGasDependentCosts(txBytesSize, gasCosts.s256);\n  // See https://github.com/FuelLabs/fuel-specs/blob/master/src/identifiers/contract-id.md\n  const contractIdInputSize = bn(4 + 32 + 32 + 32);\n  const contractIdGas = resolveGasDependentCosts(contractIdInputSize, gasCosts.s256);\n  const metadataGas = contractRootGas.add(stateRootGas).add(txIdGas).add(contractIdGas);\n  return metadataGas.maxU64();\n}\n\nexport function calculateMetadataGasForTxScript({\n  gasCosts,\n  txBytesSize,\n}: {\n  gasCosts: GqlGasCosts;\n  txBytesSize: number;\n}) {\n  return resolveGasDependentCosts(txBytesSize, gasCosts.s256);\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { hexlify } from 'ethers';\nimport { clone } from 'ramda';\n\n// When parsing a Transaction to JSON we need\n// to convert special types into each respective\n// JSON friendly value. This enables a tx to be\n// stringified and parsed back into a Transaction\n/** @hidden */\nfunction normalize(object: any) {\n  Object.keys(object).forEach((key) => {\n    switch (object[key]?.constructor.name) {\n      case 'Uint8Array':\n        object[key] = hexlify(object[key]);\n        break;\n      case 'Array':\n        object[key] = normalize(object[key]);\n        break;\n      case 'BN':\n        object[key] = object[key].toHex();\n        break;\n      case 'Address':\n        object[key] = object[key].toB256();\n        break;\n      case 'Object':\n        object[key] = normalize(object[key]);\n        break;\n      default:\n        break;\n    }\n  });\n  return object;\n}\n\n/**\n * Stringify Transaction to a JSON object\n * compatible with the Transaction class constructor.\n */\n/** @hidden */\nexport function normalizeJSON(root: any) {\n  // Do a single deep clone before normalizing\n  // to avoid mutating the original object\n  // and doing extra clones on each iteration\n  return normalize(clone(root));\n}\n","/** @hidden */\nexport function sleep(time: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n}\n","/* eslint-disable max-classes-per-file */\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\n/**\n * @hidden\n */\nexport class ChangeOutputCollisionError extends Error {\n  name = 'ChangeOutputCollisionError';\n  message = 'A ChangeOutput with the same \"assetId\" already exists for a different \"to\" address';\n}\n\n/**\n * @hidden\n */\nexport class NoWitnessAtIndexError extends Error {\n  name = 'NoWitnessAtIndexError';\n  constructor(public readonly index: number) {\n    super();\n    this.message = `Witness at index \"${index}\" was not found`;\n  }\n}\n\n/**\n * @hidden\n */\nexport class NoWitnessByOwnerError extends Error {\n  name = 'NoWitnessByOwnerError';\n  constructor(public readonly owner: AbstractAddress) {\n    super();\n    this.message = `A witness for the given owner \"${owner}\" was not found`;\n  }\n}\n","/**\n * @hidden\n *\n * Converts a TAI64 timestamp to a Unix timestamp in milliseconds.\n *\n * TAI64 is a 64-bit unsigned integer format that represents a point in time\n * as the number of TAI seconds elapsed since 00:00:00 TAI, January 1, 1970.\n *\n * Unix timestamp, on the other hand, represents the number of milliseconds\n * elapsed since 00:00:00 UTC, January 1, 1970.\n *\n * To convert a TAI64 timestamp to a Unix timestamp, we need to subtract the\n * TAI64 epoch time (00:00:00 TAI, January 1, 1970) from the TAI64 timestamp\n * and then add the Unix epoch time (00:00:00 UTC, January 1, 1970). The epoch\n * time difference between TAI64 and Unix is 2 ** 62 + 10.\n *\n * @param tai64Timestamp - The TAI64 timestamp to convert.\n * @returns - The Unix timestamp in milliseconds.\n */\nexport const fromTai64ToUnix = (tai64Timestamp: string) =>\n  Number(BigInt(tai64Timestamp) - BigInt(2 ** 62) - BigInt(10));\n\n/**\n * @hidden\n *\n * Converts a Unix timestamp in milliseconds to a TAI64 timestamp.\n *\n * Unix timestamp represents the number of milliseconds elapsed since\n * 00:00:00 UTC, January 1, 1970. TAI64 timestamp is a 64-bit unsigned\n * integer format that represents a point in time as the number of TAI\n * seconds elapsed since 00:00:00 TAI, January 1, 1970.\n *\n * To convert a Unix timestamp to a TAI64 timestamp, we need to add the\n * TAI64 epoch time (00:00:00 TAI, January 1, 1970) to the Unix timestamp\n * and then subtract the Unix epoch time (00:00:00 UTC, January 1, 1970).\n * The epoch time difference between TAI64 and Unix is 2 ** 62 + 10.\n *\n * @param unixTimestampMs - The Unix timestamp in milliseconds to convert.\n * @returns - The TAI64 timestamp as a string.\n */\nexport const fromUnixToTai64 = (unixTimestampMs: number) =>\n  (BigInt(unixTimestampMs) + BigInt(2 ** 62) + BigInt(10)).toString();\n","import type { Witness } from '@fuel-ts/transactions';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport type TransactionRequestWitness = BytesLike;\n\nexport const witnessify = (value: TransactionRequestWitness): Witness => {\n  const data = getBytesCopy(value);\n\n  return {\n    data: hexlify(data),\n    dataLength: data.length,\n  };\n};\n","import { Address, addressify } from '@fuel-ts/address';\nimport { BaseAssetId, ZeroBytes32 } from '@fuel-ts/address/configs';\nimport type { AddressLike, AbstractAddress, AbstractPredicate } from '@fuel-ts/interfaces';\nimport type { BN, BigNumberish } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { TransactionScript, Policy, TransactionCreate } from '@fuel-ts/transactions';\nimport {\n  PolicyType,\n  TransactionCoder,\n  InputType,\n  OutputType,\n  TransactionType,\n} from '@fuel-ts/transactions';\nimport type { BytesLike } from 'ethers';\nimport { concat, getBytesCopy, hexlify } from 'ethers';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { Coin } from '../coin';\nimport type { CoinQuantity, CoinQuantityLike } from '../coin-quantity';\nimport { coinQuantityfy } from '../coin-quantity';\nimport type { MessageCoin } from '../message';\nimport type { ChainInfo } from '../provider';\nimport type { Resource } from '../resource';\nimport { isCoin } from '../resource';\nimport { normalizeJSON } from '../utils';\nimport { getMaxGas, getMinGas } from '../utils/gas';\n\nimport { NoWitnessAtIndexError } from './errors';\nimport type {\n  TransactionRequestInput,\n  CoinTransactionRequestInput,\n  MessageTransactionRequestInput,\n} from './input';\nimport { inputify } from './input';\nimport type {\n  TransactionRequestOutput,\n  ChangeTransactionRequestOutput,\n  CoinTransactionRequestOutput,\n} from './output';\nimport { outputify } from './output';\nimport type { TransactionRequestWitness } from './witness';\nimport { witnessify } from './witness';\n\nexport {\n  /**\n   * @hidden\n   */\n  TransactionType,\n};\n\n/**\n * @hidden\n *\n * Interface defining a like structure for a base transaction request.\n */\nexport interface BaseTransactionRequestLike {\n  /** Gas price for transaction */\n  gasPrice?: BigNumberish;\n  /** Block until which tx cannot be included */\n  maturity?: number;\n  /** The maximum fee payable by this transaction using BASE_ASSET. */\n  maxFee?: BigNumberish;\n  /** The maximum amount of witness data allowed for the transaction */\n  witnessLimit?: BigNumberish;\n  /** List of inputs */\n  inputs?: TransactionRequestInput[];\n  /** List of outputs */\n  outputs?: TransactionRequestOutput[];\n  /** List of witnesses */\n  witnesses?: TransactionRequestWitness[];\n}\n\ntype ToBaseTransactionResponse = Pick<\n  TransactionScript,\n  | 'inputs'\n  | 'inputsCount'\n  | 'outputs'\n  | 'outputsCount'\n  | 'witnesses'\n  | 'witnessesCount'\n  | 'policies'\n  | 'policyTypes'\n>;\n\n/**\n * Abstract class to define the functionalities of a transaction request transaction request.\n */\nexport abstract class BaseTransactionRequest implements BaseTransactionRequestLike {\n  /** Type of the transaction */\n  abstract type: TransactionType;\n  /** Gas price for transaction */\n  gasPrice: BN;\n  /** Block until which tx cannot be included */\n  maturity: number;\n  /** The maximum fee payable by this transaction using BASE_ASSET. */\n  maxFee?: BN;\n  /** The maximum amount of witness data allowed for the transaction */\n  witnessLimit?: BN | undefined;\n  /** List of inputs */\n  inputs: TransactionRequestInput[] = [];\n  /** List of outputs */\n  outputs: TransactionRequestOutput[] = [];\n  /** List of witnesses */\n  witnesses: TransactionRequestWitness[] = [];\n\n  /**\n   * Constructor for initializing a base transaction request.\n   *\n   * @param baseTransactionRequest - Optional object containing properties to initialize the transaction request.\n   */\n  constructor({\n    gasPrice,\n    maturity,\n    maxFee,\n    witnessLimit,\n    inputs,\n    outputs,\n    witnesses,\n  }: BaseTransactionRequestLike = {}) {\n    this.gasPrice = bn(gasPrice);\n    this.maturity = maturity ?? 0;\n    this.witnessLimit = witnessLimit ? bn(witnessLimit) : undefined;\n    this.maxFee = maxFee ? bn(maxFee) : undefined;\n    this.inputs = inputs ?? [];\n    this.outputs = outputs ?? [];\n    this.witnesses = witnesses ?? [];\n  }\n\n  static getPolicyMeta(req: BaseTransactionRequest) {\n    let policyTypes = 0;\n    const policies: Policy[] = [];\n\n    if (req.gasPrice) {\n      policyTypes += PolicyType.GasPrice;\n      policies.push({ data: req.gasPrice, type: PolicyType.GasPrice });\n    }\n    if (req.witnessLimit) {\n      policyTypes += PolicyType.WitnessLimit;\n      policies.push({ data: req.witnessLimit, type: PolicyType.WitnessLimit });\n    }\n    if (req.maturity > 0) {\n      policyTypes += PolicyType.Maturity;\n      policies.push({ data: req.maturity, type: PolicyType.Maturity });\n    }\n    if (req.maxFee) {\n      policyTypes += PolicyType.MaxFee;\n      policies.push({ data: req.maxFee, type: PolicyType.MaxFee });\n    }\n\n    return {\n      policyTypes,\n      policies,\n    };\n  }\n\n  /**\n   * Method to obtain the base transaction details.\n   *\n   * @returns The base transaction details.\n   */\n\n  protected getBaseTransaction(): ToBaseTransactionResponse {\n    const inputs = this.inputs?.map(inputify) ?? [];\n    const outputs = this.outputs?.map(outputify) ?? [];\n    const witnesses = this.witnesses?.map(witnessify) ?? [];\n\n    const { policyTypes, policies } = BaseTransactionRequest.getPolicyMeta(this);\n\n    return {\n      policyTypes,\n      inputs,\n      outputs,\n      policies,\n      witnesses,\n      inputsCount: inputs.length,\n      outputsCount: outputs.length,\n      witnessesCount: witnesses.length,\n    };\n  }\n\n  abstract toTransaction(): TransactionCreate | TransactionScript;\n\n  /**\n   * Converts the transaction request to a byte array.\n   *\n   * @returns The transaction bytes.\n   */\n  toTransactionBytes(): Uint8Array {\n    return new TransactionCoder().encode(this.toTransaction());\n  }\n\n  /**\n   * @hidden\n   *\n   * Pushes an input to the list without any side effects and returns the index\n   */\n  protected pushInput(input: TransactionRequestInput): number {\n    this.inputs.push(input);\n    return this.inputs.length - 1;\n  }\n\n  /**\n   * @hidden\n   *\n   * Pushes an output to the list without any side effects and returns the index\n   */\n  protected pushOutput(output: TransactionRequestOutput): number {\n    this.outputs.push(output);\n    return this.outputs.length - 1;\n  }\n\n  /**\n   * @hidden\n   *\n   * Creates an empty witness without any side effects and returns the index\n   */\n  protected createWitness() {\n    // Push a dummy witness with same byte size as a real witness signature\n    this.witnesses.push(concat([ZeroBytes32, ZeroBytes32]));\n    return this.witnesses.length - 1;\n  }\n\n  /**\n   * Updates the witness for a given owner and signature.\n   *\n   * @param address - The address to get the coin input witness index for.\n   * @param signature - The signature to update the witness with.\n   */\n  updateWitnessByOwner(address: AbstractAddress, signature: BytesLike) {\n    const witnessIndex = this.getCoinInputWitnessIndexByOwner(address);\n    if (typeof witnessIndex === 'number') {\n      this.updateWitness(witnessIndex, signature);\n    }\n  }\n\n  /**\n   * Updates an existing witness without any side effects.\n   *\n   * @param index - The index of the witness to update.\n   * @param witness - The new witness.\n   * @throws If the witness does not exist.\n   */\n  updateWitness(index: number, witness: TransactionRequestWitness) {\n    if (!this.witnesses[index]) {\n      throw new NoWitnessAtIndexError(index);\n    }\n    this.witnesses[index] = witness;\n  }\n\n  /**\n   * Gets the coin inputs for a transaction.\n   *\n   * @returns The coin inputs.\n   */\n  getCoinInputs(): CoinTransactionRequestInput[] {\n    return this.inputs.filter(\n      (input): input is CoinTransactionRequestInput => input.type === InputType.Coin\n    );\n  }\n\n  /**\n   * Gets the coin outputs for a transaction.\n   *\n   * @returns The coin outputs.\n   */\n  getCoinOutputs(): CoinTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is CoinTransactionRequestOutput => output.type === OutputType.Coin\n    );\n  }\n\n  /**\n   * Gets the change outputs for a transaction.\n   *\n   * @returns The change outputs.\n   */\n  getChangeOutputs(): ChangeTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ChangeTransactionRequestOutput => output.type === OutputType.Change\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Returns the witnessIndex of the found CoinInput.\n   */\n  getCoinInputWitnessIndexByOwner(owner: AddressLike): number | undefined {\n    const ownerAddress = addressify(owner);\n\n    const found = this.inputs.find((input) => {\n      switch (input.type) {\n        case InputType.Coin:\n          return hexlify((<CoinTransactionRequestInput>input).owner) === ownerAddress.toB256();\n        case InputType.Message:\n          return (\n            hexlify((<MessageTransactionRequestInput>input).recipient) === ownerAddress.toB256()\n          );\n        default:\n          return false;\n      }\n    });\n\n    return (<CoinTransactionRequestInput>found)?.witnessIndex;\n  }\n\n  /**\n   * Adds a single coin input to the transaction and a change output for the related\n   * assetId, if one it was not added yet.\n   *\n   * @param coin - Coin resource.\n   * @param predicate - Predicate bytes.\n   * @param predicateData - Predicate data bytes.\n   */\n  addCoinInput(coin: Coin, predicate?: AbstractPredicate) {\n    const { assetId, owner, amount } = coin;\n\n    let witnessIndex;\n\n    if (predicate) {\n      witnessIndex = 0;\n    } else {\n      witnessIndex = this.getCoinInputWitnessIndexByOwner(owner);\n\n      // Insert a dummy witness if no witness exists\n      if (typeof witnessIndex !== 'number') {\n        witnessIndex = this.createWitness();\n      }\n    }\n\n    const input: CoinTransactionRequestInput = {\n      ...coin,\n      type: InputType.Coin,\n      owner: owner.toB256(),\n      amount,\n      assetId,\n      txPointer: '0x00000000000000000000000000000000',\n      witnessIndex,\n      predicate: predicate?.bytes,\n      predicateData: predicate?.predicateData,\n    };\n\n    // Insert the Input\n    this.pushInput(input);\n\n    // Insert a ChangeOutput if it does not exist\n    this.addChangeOutput(owner, assetId);\n  }\n\n  /**\n   * Adds a single message input to the transaction and a change output for the\n   * baseAssetId, if one it was not added yet.\n   *\n   * @param message - Message resource.\n   * @param predicate - Predicate bytes.\n   * @param predicateData - Predicate data bytes.\n   */\n  addMessageInput(message: MessageCoin, predicate?: AbstractPredicate) {\n    const { recipient, sender, amount } = message;\n\n    const assetId = BaseAssetId;\n\n    let witnessIndex;\n\n    if (predicate) {\n      witnessIndex = 0;\n    } else {\n      witnessIndex = this.getCoinInputWitnessIndexByOwner(recipient);\n\n      // Insert a dummy witness if no witness exists\n      if (typeof witnessIndex !== 'number') {\n        witnessIndex = this.createWitness();\n      }\n    }\n\n    const input: MessageTransactionRequestInput = {\n      ...message,\n      type: InputType.Message,\n      sender: sender.toB256(),\n      recipient: recipient.toB256(),\n      amount,\n      witnessIndex,\n      predicate: predicate?.bytes,\n      predicateData: predicate?.predicateData,\n    };\n\n    // Insert the Input\n    this.pushInput(input);\n\n    // Insert a ChangeOutput if it does not exist\n    this.addChangeOutput(recipient, assetId);\n  }\n\n  /**\n   * Adds a single resource to the transaction by adding a coin/message input and a\n   * change output for the related assetId, if one it was not added yet.\n   *\n   * @param resource - The resource to add.\n   * @returns This transaction.\n   */\n  addResource(resource: Resource) {\n    if (isCoin(resource)) {\n      this.addCoinInput(resource);\n    } else {\n      this.addMessageInput(resource);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds multiple resources to the transaction by adding coin/message inputs and change\n   * outputs from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addResources(resources: ReadonlyArray<Resource>) {\n    resources.forEach((resource) => this.addResource(resource));\n\n    return this;\n  }\n\n  /**\n   * Adds multiple resources to the transaction by adding coin/message inputs and change\n   * outputs from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addPredicateResource(resource: Resource, predicate: AbstractPredicate) {\n    if (isCoin(resource)) {\n      this.addCoinInput(resource, predicate);\n    } else {\n      this.addMessageInput(resource, predicate);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds multiple predicate coin/message inputs to the transaction and change outputs\n   * from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addPredicateResources(resources: Resource[], predicate: AbstractPredicate) {\n    resources.forEach((resource) => this.addPredicateResource(resource, predicate));\n\n    return this;\n  }\n\n  /**\n   * Adds a coin output to the transaction.\n   *\n   * @param to - Address of the owner.\n   * @param amount - Amount of coin.\n   * @param assetId - Asset ID of coin.\n   */\n  addCoinOutput(to: AddressLike, amount: BigNumberish, assetId: BytesLike = BaseAssetId) {\n    this.pushOutput({\n      type: OutputType.Coin,\n      to: addressify(to).toB256(),\n      amount,\n      assetId,\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds multiple coin outputs to the transaction.\n   *\n   * @param to - Address of the destination.\n   * @param quantities - Quantities of coins.\n   */\n  addCoinOutputs(to: AddressLike, quantities: CoinQuantityLike[]) {\n    quantities.map(coinQuantityfy).forEach((quantity) => {\n      this.pushOutput({\n        type: OutputType.Coin,\n        to: addressify(to).toB256(),\n        amount: quantity.amount,\n        assetId: quantity.assetId,\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds a change output to the transaction.\n   *\n   * @param to - Address of the owner.\n   * @param assetId - Asset ID of coin.\n   */\n  addChangeOutput(to: AddressLike, assetId: BytesLike = BaseAssetId) {\n    // Find the ChangeOutput for the AssetId of the Resource\n    const changeOutput = this.getChangeOutputs().find(\n      (output) => hexlify(output.assetId) === assetId\n    );\n\n    // Insert a ChangeOutput if it does not exist\n    if (!changeOutput) {\n      this.pushOutput({\n        type: OutputType.Change,\n        to: addressify(to).toB256(),\n        assetId,\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  byteSize() {\n    return this.toTransactionBytes().length;\n  }\n\n  /**\n   * @hidden\n   */\n  metadataGas(_gasCosts: GqlGasCosts): BN {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @hidden\n   */\n  calculateMinGas(chainInfo: ChainInfo): BN {\n    const { gasCosts, consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n    return getMinGas({\n      gasPerByte,\n      gasCosts,\n      inputs: this.inputs,\n      txBytesSize: this.byteSize(),\n      metadataGas: this.metadataGas(gasCosts),\n    });\n  }\n\n  calculateMaxGas(chainInfo: ChainInfo, minGas: BN): BN {\n    const { consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n\n    const witnessesLength = this.toTransaction().witnesses.reduce(\n      (acc, wit) => acc + wit.dataLength,\n      0\n    );\n    return getMaxGas({\n      gasPerByte,\n      minGas,\n      witnessesLength,\n      witnessLimit: this.witnessLimit,\n    });\n  }\n\n  /**\n   * Funds the transaction with fake UTXOs for each assetId and amount in the\n   * quantities array.\n   *\n   * @param quantities - CoinQuantity Array.\n   */\n  fundWithFakeUtxos(quantities: CoinQuantity[]) {\n    let idCounter = 0;\n    const generateId = (): string => {\n      const counterString = String(idCounter++);\n      const id = ZeroBytes32.slice(0, -counterString.length).concat(counterString);\n      return id;\n    };\n\n    const findAssetInput = (assetId: string) =>\n      this.inputs.find((input) => {\n        if ('assetId' in input) {\n          return input.assetId === assetId;\n        }\n        return false;\n      });\n\n    const updateAssetInput = (assetId: string, quantity: BN) => {\n      const assetInput = findAssetInput(assetId);\n\n      if (assetInput && 'assetId' in assetInput) {\n        assetInput.id = generateId();\n        assetInput.amount = quantity;\n      } else {\n        this.addResources([\n          {\n            id: generateId(),\n            amount: quantity,\n            assetId,\n            owner: Address.fromRandom(),\n            maturity: 0,\n            blockCreated: bn(1),\n            txCreatedIdx: bn(1),\n          },\n        ]);\n      }\n    };\n\n    updateAssetInput(BaseAssetId, bn(100_000_000_000));\n    quantities.forEach((q) => updateAssetInput(q.assetId, q.amount));\n  }\n\n  /**\n   * Retrieves an array of CoinQuantity for each coin output present in the transaction.\n   * a transaction.\n   *\n   * @returns  CoinQuantity array.\n   */\n  getCoinOutputsQuantities(): CoinQuantity[] {\n    const coinsQuantities = this.getCoinOutputs().map(({ amount, assetId }) => ({\n      amount: bn(amount),\n      assetId: assetId.toString(),\n    }));\n\n    return coinsQuantities;\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  abstract getTransactionId(chainId: number): string;\n\n  /**\n   * Return the minimum amount in native coins required to create\n   * a transaction.\n   *\n   * @returns The transaction as a JSON object.\n   */\n  toJSON() {\n    return normalizeJSON(this);\n  }\n\n  /**\n   * @hidden\n   *\n   * Determines whether the transaction has a predicate input.\n   *\n   * @returns Whether the transaction has a predicate input.\n   */\n  hasPredicateInput(): boolean {\n    return Boolean(\n      this.inputs.find(\n        (input) => 'predicate' in input && input.predicate && input.predicate !== getBytesCopy('0x')\n      )\n    );\n  }\n}\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { uint64ToBytesBE } from '@fuel-ts/hasher';\nimport { bn } from '@fuel-ts/math';\nimport { TransactionType, InputType, OutputType, TransactionCoder } from '@fuel-ts/transactions';\nimport { concat, sha256 } from 'ethers';\nimport { clone } from 'ramda';\n\nimport type { TransactionRequest } from './types';\n\n/**\n * Hash transaction request with sha256. [Read more](https://github.com/FuelLabs/fuel-specs/blob/master/specs/protocol/identifiers.md#transaction-id)\n *\n * @param transactionRequest - Transaction request to be hashed\n * @returns sha256 hash of the transaction\n */\nexport function hashTransaction(transactionRequest: TransactionRequest, chainId: number) {\n  const transaction = transactionRequest.toTransaction();\n\n  if (transaction.type === TransactionType.Script) {\n    transaction.receiptsRoot = ZeroBytes32;\n  }\n\n  // Zero out input fields\n  transaction.inputs = transaction.inputs.map((input) => {\n    const inputClone = clone(input);\n\n    switch (inputClone.type) {\n      // Zero out on signing: txPointer, predicateGasUsed\n      case InputType.Coin: {\n        inputClone.txPointer = {\n          blockHeight: 0,\n          txIndex: 0,\n        };\n        inputClone.predicateGasUsed = bn(0);\n        return inputClone;\n      }\n      // Zero out on signing: predicateGasUsed\n      case InputType.Message: {\n        inputClone.predicateGasUsed = bn(0);\n        return inputClone;\n      }\n      // Zero out on signing: txID, outputIndex, balanceRoot, stateRoot, and txPointer\n      case InputType.Contract: {\n        inputClone.txPointer = {\n          blockHeight: 0,\n          txIndex: 0,\n        };\n        inputClone.txID = ZeroBytes32;\n        inputClone.outputIndex = 0;\n        inputClone.balanceRoot = ZeroBytes32;\n        inputClone.stateRoot = ZeroBytes32;\n        return inputClone;\n      }\n      default:\n        return inputClone;\n    }\n  });\n  // Zero out output fields\n  transaction.outputs = transaction.outputs.map((output) => {\n    const outputClone = clone(output);\n\n    switch (outputClone.type) {\n      // Zero out on signing: balanceRoot, stateRoot\n      case OutputType.Contract: {\n        outputClone.balanceRoot = ZeroBytes32;\n        outputClone.stateRoot = ZeroBytes32;\n        return outputClone;\n      }\n      // Zero out on signing: amount\n      case OutputType.Change: {\n        outputClone.amount = bn(0);\n        return outputClone;\n      }\n      // Zero out on signing: amount, to and assetId\n      case OutputType.Variable: {\n        outputClone.to = ZeroBytes32;\n        outputClone.amount = bn(0);\n        outputClone.assetId = ZeroBytes32;\n        return outputClone;\n      }\n      default:\n        return outputClone;\n    }\n  });\n  transaction.witnessesCount = 0;\n  transaction.witnesses = [];\n\n  const chainIdBytes = uint64ToBytesBE(chainId);\n  const concatenatedData = concat([chainIdBytes, new TransactionCoder().encode(transaction)]);\n  return sha256(concatenatedData);\n}\n","import type { StorageSlot } from '@fuel-ts/transactions';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nexport type TransactionRequestStorageSlot =\n  | {\n      /** Key */\n      key: BytesLike;\n      /** Value */\n      value: BytesLike;\n    }\n  | [key: BytesLike, value: BytesLike];\n\n// Make sure all values have 32 bytes\nconst getStorageValue = (value: BytesLike): Uint8Array => {\n  const v = new Uint8Array(32);\n  v.set(getBytesCopy(value));\n  return v;\n};\n\nexport const storageSlotify = (storageSlot: TransactionRequestStorageSlot): StorageSlot => {\n  let key;\n  let value;\n\n  if (Array.isArray(storageSlot)) {\n    key = storageSlot[0];\n    value = storageSlot[1];\n  } else {\n    key = storageSlot.key;\n    value = storageSlot.value;\n  }\n\n  return {\n    key: hexlify(key),\n    value: hexlify(getStorageValue(value)),\n  };\n};\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { bn, type BN } from '@fuel-ts/math';\nimport type { TransactionCreate } from '@fuel-ts/transactions';\nimport { TransactionType, OutputType } from '@fuel-ts/transactions';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport { calculateMetadataGasForTxCreate } from '../utils/gas';\n\nimport { hashTransaction } from './hash-transaction';\nimport type { ContractCreatedTransactionRequestOutput } from './output';\nimport type { TransactionRequestStorageSlot } from './storage-slot';\nimport { storageSlotify } from './storage-slot';\nimport { BaseTransactionRequest } from './transaction-request';\nimport type { BaseTransactionRequestLike } from './transaction-request';\n\n/**\n * @hidden\n */\nexport interface CreateTransactionRequestLike extends BaseTransactionRequestLike {\n  /** Witness index of contract bytecode to create */\n  bytecodeWitnessIndex?: number;\n  /** Salt */\n  salt?: BytesLike;\n  /** List of storage slots to initialize */\n  storageSlots?: TransactionRequestStorageSlot[];\n}\n\n/**\n * `CreateTransactionRequest` provides functionalities for creating a transaction request that creates a contract.\n */\nexport class CreateTransactionRequest extends BaseTransactionRequest {\n  static from(obj: CreateTransactionRequestLike) {\n    if (obj instanceof this) {\n      return obj;\n    }\n    return new this(obj);\n  }\n\n  /** Type of the transaction */\n  type = TransactionType.Create as const;\n  /** Witness index of contract bytecode to create */\n  bytecodeWitnessIndex: number;\n  /** Salt */\n  salt: string;\n  /** List of storage slots to initialize */\n  storageSlots: TransactionRequestStorageSlot[];\n\n  /**\n   * Creates an instance `CreateTransactionRequest`.\n   *\n   * @param createTransactionRequestLike - The initial values for the instance\n   */\n  constructor({\n    bytecodeWitnessIndex,\n    salt,\n    storageSlots,\n    ...rest\n  }: CreateTransactionRequestLike = {}) {\n    super(rest);\n    this.bytecodeWitnessIndex = bytecodeWitnessIndex ?? 0;\n    this.salt = hexlify(salt ?? ZeroBytes32);\n    this.storageSlots = [...(storageSlots ?? [])];\n  }\n\n  /**\n   * Converts the transaction request to a `TransactionCreate`.\n   *\n   * @returns The transaction create object.\n   */\n  toTransaction(): TransactionCreate {\n    const baseTransaction = this.getBaseTransaction();\n    const bytecodeWitnessIndex = this.bytecodeWitnessIndex;\n    const storageSlots = this.storageSlots?.map(storageSlotify) ?? [];\n    return {\n      type: TransactionType.Create,\n      ...baseTransaction,\n      bytecodeLength: baseTransaction.witnesses[bytecodeWitnessIndex].dataLength / 4,\n      bytecodeWitnessIndex,\n      storageSlotsCount: storageSlots.length,\n      salt: this.salt ? hexlify(this.salt) : ZeroBytes32,\n      storageSlots,\n    };\n  }\n\n  /**\n   * Get contract created outputs for the transaction.\n   *\n   * @returns An array of contract created transaction request outputs.\n   */\n  getContractCreatedOutputs(): ContractCreatedTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ContractCreatedTransactionRequestOutput =>\n        output.type === OutputType.ContractCreated\n    );\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  getTransactionId(chainId: number): string {\n    return hashTransaction(this, chainId);\n  }\n\n  /**\n   * Adds a contract created output to the transaction request.\n   *\n   * @param contractId - The contract ID.\n   * @param stateRoot - The state root.\n   */\n  addContractCreatedOutput(\n    /** Contract ID */\n    contractId: BytesLike,\n    /** State Root */\n    stateRoot: BytesLike\n  ) {\n    this.pushOutput({\n      type: OutputType.ContractCreated,\n      contractId,\n      stateRoot,\n    });\n  }\n\n  metadataGas(gasCosts: GqlGasCosts): BN {\n    return calculateMetadataGasForTxCreate({\n      contractBytesSize: bn(getBytesCopy(this.witnesses[this.bytecodeWitnessIndex] || '0x').length),\n      gasCosts,\n      stateRootSize: this.storageSlots.length,\n      txBytesSize: this.byteSize(),\n    });\n  }\n}\n","import type { AbstractScriptRequest } from '@fuel-ts/interfaces';\nimport { getBytesCopy } from 'ethers';\n\n// We can't import this from `@fuel-ts/script` because it causes\n// cyclic dependency errors so we duplicate it here.\n/** @hidden */\nexport const returnZeroScript: AbstractScriptRequest<void> = {\n  /*\n      Opcode::RET(REG_ZERO)\n      Opcode::NOOP\n    */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  bytes: getBytesCopy('0x24000000'),\n  encodeScriptData: () => new Uint8Array(0),\n};\n\n/** @hidden */\nexport const withdrawScript: AbstractScriptRequest<void> = {\n  /*\n          The following code loads some basic values into registers and calls SMO to create an output message\n          5040C010 \t- ADDI r16 $is i16   [r16 now points to memory 16 bytes from the start of this program (start of receiver data)]\n          5D44C006\t- LW r17 $is i6      [r17 set to the 6th word in this program (6*8=48 bytes from the start of this program)]\n          4C400011\t- SMO r16 r0 r0 r17  [send message out to address starting at memory position r16 with amount in r17]\n          24000000\t- RET                [return 0]\n          00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 [recipient address]\n          00000000 00000000 [amount value]\n      */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  bytes: getBytesCopy('0x5040C0105D44C0064C40001124000000'),\n  encodeScriptData: () => new Uint8Array(0),\n};\n","import type { InputValue, JsonAbi } from '@fuel-ts/abi-coder';\nimport { Interface } from '@fuel-ts/abi-coder';\nimport { addressify } from '@fuel-ts/address';\nimport { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport type { AbstractScriptRequest, ContractIdLike } from '@fuel-ts/interfaces';\nimport { bn } from '@fuel-ts/math';\nimport type { BN, BigNumberish } from '@fuel-ts/math';\nimport type { TransactionScript } from '@fuel-ts/transactions';\nimport { InputType, OutputType, TransactionType } from '@fuel-ts/transactions';\nimport { getBytesCopy, hexlify } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { ChainInfo } from '../provider';\nimport { calculateMetadataGasForTxScript, getMaxGas } from '../utils/gas';\n\nimport { hashTransaction } from './hash-transaction';\nimport type { ContractTransactionRequestInput } from './input';\nimport type { ContractTransactionRequestOutput, VariableTransactionRequestOutput } from './output';\nimport { returnZeroScript } from './scripts';\nimport type { BaseTransactionRequestLike } from './transaction-request';\nimport { BaseTransactionRequest } from './transaction-request';\n\n/**\n * @hidden\n */\nexport interface ScriptTransactionRequestLike extends BaseTransactionRequestLike {\n  /** Gas limit for transaction */\n  gasLimit?: BigNumberish;\n  /** Script to execute */\n  script?: BytesLike;\n  /** Script input data (parameters) */\n  scriptData?: BytesLike;\n}\n\n/**\n * `ScriptTransactionRequest` provides functionalities for creating a transaction request that uses a script.\n */\nexport class ScriptTransactionRequest extends BaseTransactionRequest {\n  static from(obj: ScriptTransactionRequestLike) {\n    if (obj instanceof this) {\n      return obj;\n    }\n    return new this(obj);\n  }\n\n  /** Type of the transaction */\n  type = TransactionType.Script as const;\n  /** Gas limit for transaction */\n  gasLimit: BN;\n  /** Script to execute */\n  script: Uint8Array;\n  /** Script input data (parameters) */\n  scriptData: Uint8Array;\n\n  /**\n   * Constructor for `ScriptTransactionRequest`.\n   *\n   * @param scriptTransactionRequestLike - The initial values for the instance.\n   */\n  constructor({ script, scriptData, gasLimit, ...rest }: ScriptTransactionRequestLike = {}) {\n    super(rest);\n    this.gasLimit = bn(gasLimit);\n    this.script = getBytesCopy(script ?? returnZeroScript.bytes);\n    this.scriptData = getBytesCopy(scriptData ?? returnZeroScript.encodeScriptData());\n  }\n\n  /**\n   * Converts the transaction request to a `TransactionScript`.\n   *\n   * @returns The transaction script object.\n   */\n  toTransaction(): TransactionScript {\n    const script = getBytesCopy(this.script ?? '0x');\n    const scriptData = getBytesCopy(this.scriptData ?? '0x');\n    return {\n      type: TransactionType.Script,\n      scriptGasLimit: this.gasLimit,\n      ...super.getBaseTransaction(),\n      scriptLength: script.length,\n      scriptDataLength: scriptData.length,\n      receiptsRoot: ZeroBytes32,\n      script: hexlify(script),\n      scriptData: hexlify(scriptData),\n    };\n  }\n\n  /**\n   * Get contract inputs for the transaction.\n   *\n   * @returns An array of contract transaction request inputs.\n   */\n  getContractInputs(): ContractTransactionRequestInput[] {\n    return this.inputs.filter(\n      (input): input is ContractTransactionRequestInput => input.type === InputType.Contract\n    );\n  }\n\n  /**\n   * Get contract outputs for the transaction.\n   *\n   * @returns An array of contract transaction request outputs.\n   */\n  getContractOutputs(): ContractTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ContractTransactionRequestOutput => output.type === OutputType.Contract\n    );\n  }\n\n  /**\n   * Get variable outputs for the transaction.\n   *\n   * @returns An array of variable transaction request outputs.\n   */\n  getVariableOutputs(): VariableTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is VariableTransactionRequestOutput => output.type === OutputType.Variable\n    );\n  }\n\n  /**\n   * Set the script and its data.\n   *\n   * @param script - The abstract script request.\n   * @param data - The script data.\n   */\n  setScript<T>(script: AbstractScriptRequest<T>, data: T) {\n    this.scriptData = script.encodeScriptData(data);\n    this.script = script.bytes;\n  }\n\n  /**\n   * Adds variable outputs to the transaction request.\n   *\n   * @param numberOfVariables - The number of variables to add.\n   * @returns The new length of the outputs array.\n   */\n  addVariableOutputs(numberOfVariables: number = 1) {\n    let outputsNumber = numberOfVariables;\n\n    while (outputsNumber) {\n      this.pushOutput({\n        type: OutputType.Variable,\n      });\n      outputsNumber -= 1;\n    }\n\n    return this.outputs.length - 1;\n  }\n\n  calculateMaxGas(chainInfo: ChainInfo, minGas: BN): BN {\n    const { consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n\n    const witnessesLength = this.toTransaction().witnesses.reduce(\n      (acc, wit) => acc + wit.dataLength,\n      0\n    );\n\n    return getMaxGas({\n      gasPerByte,\n      minGas,\n      witnessesLength,\n      witnessLimit: this.witnessLimit,\n      gasLimit: this.gasLimit,\n    });\n  }\n\n  /**\n   * Adds a contract input and output to the transaction request.\n   *\n   * @param contract - The contract ID.\n   * @returns The current instance of the `ScriptTransactionRequest`.\n   */\n  addContractInputAndOutput(contract: ContractIdLike): ScriptTransactionRequest {\n    const contractAddress = addressify(contract);\n\n    // Add only one input contract per contractId\n    if (this.getContractInputs().find((i) => i.contractId === contractAddress.toB256())) {\n      return this;\n    }\n\n    const inputIndex = super.pushInput({\n      type: InputType.Contract,\n      contractId: contractAddress.toB256(),\n      txPointer: '0x00000000000000000000000000000000',\n    });\n\n    this.pushOutput({\n      type: OutputType.Contract,\n      inputIndex,\n    });\n\n    return this;\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  getTransactionId(chainId: number): string {\n    return hashTransaction(this, chainId);\n  }\n\n  /**\n   * Sets the data for the transaction request.\n   *\n   * @param abi - Script JSON ABI.\n   * @param args - The input arguments.\n   * @returns The current instance of the `ScriptTransactionRequest`.\n   */\n  setData(abi: JsonAbi, args: InputValue[]): ScriptTransactionRequest {\n    const abiInterface = new Interface(abi);\n    this.scriptData = abiInterface.functions.main.encodeArguments(args);\n    return this;\n  }\n\n  metadataGas(gasCosts: GqlGasCosts): BN {\n    return calculateMetadataGasForTxScript({\n      gasCosts,\n      txBytesSize: this.byteSize(),\n    });\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { TransactionType } from '@fuel-ts/transactions';\n\nimport { CreateTransactionRequest } from './create-transaction-request';\nimport { ScriptTransactionRequest } from './script-transaction-request';\nimport type { TransactionRequestLike, TransactionRequest } from './types';\n\n/** @hidden */\nexport const transactionRequestify = (obj: TransactionRequestLike): TransactionRequest => {\n  if (obj instanceof ScriptTransactionRequest || obj instanceof CreateTransactionRequest) {\n    return obj;\n  }\n\n  const { type } = obj;\n\n  switch (obj.type) {\n    case TransactionType.Script: {\n      return ScriptTransactionRequest.from(obj);\n    }\n    case TransactionType.Create: {\n      return CreateTransactionRequest.from(obj);\n    }\n    default: {\n      throw new FuelError(ErrorCode.INVALID_TRANSACTION_TYPE, `Invalid transaction type: ${type}.`);\n    }\n  }\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { Input, InputCoin, InputContract, InputMessage } from '@fuel-ts/transactions';\nimport { InputType } from '@fuel-ts/transactions';\n\n/** @hidden */\nexport function getInputsByType<T = Input>(inputs: Input[], type: InputType) {\n  return inputs.filter((i) => i.type === type) as T[];\n}\n\n/** @hidden */\nexport function getInputsCoin(inputs: Input[]) {\n  return getInputsByType<InputCoin>(inputs, InputType.Coin);\n}\n\n/** @hidden */\nexport function getInputsMessage(inputs: Input[]) {\n  return getInputsByType<InputMessage>(inputs, InputType.Message);\n}\n\n/** @hidden */\nexport function getInputsContract(inputs: Input[]) {\n  return getInputsByType<InputContract>(inputs, InputType.Contract);\n}\n\n/** @hidden */\nexport function getInputFromAssetId(inputs: Input[], assetId: string) {\n  const coinInputs = getInputsCoin(inputs);\n  const messageInputs = getInputsMessage(inputs);\n  const coinInput = coinInputs.find((i) => i.assetId === assetId);\n  // TODO: should include assetId in InputMessage as well. for now we're mocking ETH\n  const messageInput = messageInputs.find(\n    (_) => assetId === '0x0000000000000000000000000000000000000000000000000000000000000000'\n  );\n\n  return coinInput || messageInput;\n}\n\n/** @hidden */\nexport function getInputContractFromIndex(\n  inputs: Input[],\n  inputIndex: number\n): InputContract | undefined {\n  if (inputIndex == null) {\n    return undefined;\n  }\n\n  const contractInput = inputs?.[inputIndex];\n\n  if (!contractInput) {\n    return undefined;\n  }\n  if (contractInput.type !== InputType.Contract) {\n    throw new FuelError(\n      ErrorCode.INVALID_TRANSACTION_INPUT,\n      `Contract input should be of type 'contract'.`\n    );\n  }\n\n  return contractInput as InputContract;\n}\n\n/** @hidden */\nexport function getInputAccountAddress(input: Input) {\n  if (input.type === InputType.Coin) {\n    return input.owner.toString();\n  }\n\n  if (input.type === InputType.Message) {\n    return input.recipient.toString();\n  }\n\n  return '';\n}\n","import type {\n  Output,\n  OutputCoin,\n  OutputContract,\n  OutputContractCreated,\n  OutputVariable,\n} from '@fuel-ts/transactions';\nimport { OutputType } from '@fuel-ts/transactions';\n\n/** @hidden */\nexport function getOutputsByType<T = Output>(outputs: Output[], type: OutputType) {\n  return outputs.filter((o) => o.type === type) as T[];\n}\n\n/** @hidden */\nexport function getOutputsContractCreated(outputs: Output[]) {\n  return getOutputsByType<OutputContractCreated>(outputs, OutputType.ContractCreated);\n}\n\n/** @hidden */\nexport function getOutputsCoin(outputs: Output[]) {\n  return getOutputsByType<OutputCoin>(outputs, OutputType.Coin);\n}\n\n/** @hidden */\nexport function getOutputsChange(outputs: Output[]) {\n  return getOutputsByType<OutputCoin>(outputs, OutputType.Change);\n}\n\n/** @hidden */\nexport function getOutputsContract(outputs: Output[]) {\n  return getOutputsByType<OutputContract>(outputs, OutputType.Contract);\n}\n\n/** @hidden */\nexport function getOutputsVariable(outputs: Output[]) {\n  return getOutputsByType<OutputVariable>(outputs, OutputType.Variable);\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { ReceiptType, TransactionType } from '@fuel-ts/transactions';\nimport type { Output } from '@fuel-ts/transactions';\n\nimport type {\n  TransactionResultReceipt,\n  TransactionResultCallReceipt,\n  TransactionResultMessageOutReceipt,\n  TransactionResultTransferOutReceipt,\n  TransactionResultTransferReceipt,\n} from '../transaction-response';\n\nimport { getFunctionCall } from './call';\nimport {\n  getInputFromAssetId,\n  getInputAccountAddress,\n  getInputContractFromIndex,\n  getInputsCoin,\n  getInputsContract,\n} from './input';\nimport {\n  getOutputsChange,\n  getOutputsCoin,\n  getOutputsContract,\n  getOutputsContractCreated,\n} from './output';\nimport { AddressType, ChainName, OperationName, TransactionTypeName } from './types';\nimport type {\n  InputOutputParam,\n  InputParam,\n  OperationCoin,\n  RawPayloadParam,\n  ReceiptParam,\n  Operation,\n  GetOperationParams,\n  GetTransferOperationsParams,\n} from './types';\n\n/** @hidden */\nexport function getReceiptsByType<T = TransactionResultReceipt>(\n  receipts: TransactionResultReceipt[],\n  type: ReceiptType\n) {\n  return (receipts ?? []).filter((r) => r.type === type) as T[];\n}\n\n/** @hidden */\nexport function getTransactionTypeName(transactionType: TransactionType): TransactionTypeName {\n  switch (transactionType) {\n    case TransactionType.Mint:\n      return TransactionTypeName.Mint;\n    case TransactionType.Create:\n      return TransactionTypeName.Create;\n    case TransactionType.Script:\n      return TransactionTypeName.Script;\n    default:\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_TYPE,\n        `Invalid transaction type: ${transactionType}.`\n      );\n  }\n}\n\n/** @hidden */\nexport function isType(transactionType: TransactionType, type: TransactionTypeName) {\n  const txType = getTransactionTypeName(transactionType);\n\n  return txType === type;\n}\n\n/** @hidden */\nexport function isTypeMint(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Mint);\n}\n\n/** @hidden */\nexport function isTypeCreate(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Create);\n}\n\n/** @hidden */\nexport function isTypeScript(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Script);\n}\n\n/** @hidden */\nexport function hasSameAssetId(a: OperationCoin) {\n  return (b: OperationCoin) => a.assetId === b.assetId;\n}\n\n/** @hidden */\nexport function getReceiptsCall(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultCallReceipt>(receipts, ReceiptType.Call);\n}\n\n/** @hidden */\nexport function getReceiptsMessageOut(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultMessageOutReceipt>(receipts, ReceiptType.MessageOut);\n}\n\n/** @hidden */\nconst mergeAssets = (op1: Operation, op2: Operation) => {\n  const assets1 = op1.assetsSent || [];\n  const assets2 = op2.assetsSent || [];\n  const filtered = assets2.filter((c) => !assets1.some(hasSameAssetId(c)));\n  return assets1\n    .map((coin) => {\n      const asset = assets2.find(hasSameAssetId(coin));\n      if (!asset) {\n        return coin;\n      }\n      return { ...coin, amount: bn(coin.amount).add(asset.amount) };\n    })\n    .concat(filtered);\n};\n\n/** @hidden */\nfunction isSameOperation(a: Operation, b: Operation) {\n  return (\n    a.name === b.name &&\n    a.from?.address === b.from?.address &&\n    a.to?.address === b.to?.address &&\n    a.from?.type === b.from?.type &&\n    a.to?.type === b.to?.type\n  );\n}\n\n/** @hidden */\nexport function addOperation(operations: Operation[], toAdd: Operation) {\n  const ops = operations\n    .map((op) => {\n      // if it's not same operation, don't change. we just wanna stack the same operation\n      if (!isSameOperation(op, toAdd)) {\n        return null;\n      }\n\n      let newOp = { ...op };\n\n      // if it's adding new assets\n      if (toAdd.assetsSent?.length) {\n        // if prev op had assets, merge them. Otherwise just add the new assets\n        newOp = {\n          ...newOp,\n          assetsSent: op.assetsSent?.length ? mergeAssets(op, toAdd) : toAdd.assetsSent,\n        };\n      }\n\n      // if it's adding new calls,\n      if (toAdd.calls?.length) {\n        /*\n[]          for calls we don't stack as grouping is not desired.\n          we wanna show all calls in the same operation\n          with each respective assets, amounts, functions, arguments.\n        */\n        newOp = {\n          ...newOp,\n          calls: [...(op.calls || []), ...(toAdd.calls || [])],\n        };\n      }\n\n      return newOp;\n    })\n    .filter(Boolean) as Operation[];\n\n  // if this operation didn't exist before just add it to the end\n  return ops.length ? ops : [...operations, toAdd];\n}\n\n/** @hidden */\nexport function getReceiptsTransferOut(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultTransferOutReceipt>(receipts, ReceiptType.TransferOut);\n}\n\n/** @hidden */\nexport function getContractTransferOperations({ receipts }: ReceiptParam): Operation[] {\n  const transferOutReceipts = getReceiptsTransferOut(receipts);\n\n  const contractTransferOperations = transferOutReceipts.reduce(\n    (prevContractTransferOps, receipt) => {\n      const newContractTransferOps = addOperation(prevContractTransferOps, {\n        name: OperationName.contractTransfer,\n        from: {\n          type: AddressType.contract,\n          address: receipt.from,\n        },\n        to: {\n          type: AddressType.account,\n          address: receipt.to,\n        },\n        assetsSent: [\n          {\n            amount: receipt.amount,\n            assetId: receipt.assetId,\n          },\n        ],\n      });\n\n      return newContractTransferOps;\n    },\n    [] as Operation[]\n  );\n\n  return contractTransferOperations;\n}\n\n/** @hidden */\nexport function getWithdrawFromFuelOperations({\n  inputs,\n  receipts,\n}: InputParam & ReceiptParam): Operation[] {\n  const messageOutReceipts = getReceiptsMessageOut(receipts);\n\n  const withdrawFromFuelOperations = messageOutReceipts.reduce(\n    (prevWithdrawFromFuelOps, receipt) => {\n      // TODO: replace this hardcode with receipt.assetId when assetId gets added to MessageOutReceipt\n      const assetId = '0x0000000000000000000000000000000000000000000000000000000000000000';\n      const input = getInputFromAssetId(inputs, assetId);\n      if (input) {\n        const inputAddress = getInputAccountAddress(input);\n        const newWithdrawFromFuelOps = addOperation(prevWithdrawFromFuelOps, {\n          name: OperationName.withdrawFromFuel,\n          from: {\n            type: AddressType.account,\n            address: inputAddress,\n          },\n          to: {\n            type: AddressType.account,\n            address: receipt.recipient.toString(),\n            chain: ChainName.ethereum,\n          },\n          assetsSent: [\n            {\n              amount: receipt.amount,\n              assetId,\n            },\n          ],\n        });\n\n        return newWithdrawFromFuelOps;\n      }\n\n      return prevWithdrawFromFuelOps;\n    },\n    [] as Operation[]\n  );\n\n  return withdrawFromFuelOperations;\n}\n\n/** @hidden */\nexport function getContractCallOperations({\n  inputs,\n  outputs,\n  receipts,\n  abiMap,\n  rawPayload,\n  maxInputs,\n}: InputOutputParam &\n  ReceiptParam &\n  Pick<GetOperationParams, 'abiMap' | 'maxInputs'> &\n  RawPayloadParam): Operation[] {\n  const contractCallReceipts = getReceiptsCall(receipts);\n  const contractOutputs = getOutputsContract(outputs);\n\n  const contractCallOperations = contractOutputs.reduce((prevOutputCallOps, output) => {\n    const contractInput = getInputContractFromIndex(inputs, output.inputIndex);\n\n    if (contractInput) {\n      const newCallOps = contractCallReceipts.reduce((prevContractCallOps, receipt) => {\n        if (receipt.to === contractInput.contractID) {\n          const input = getInputFromAssetId(inputs, receipt.assetId);\n          if (input) {\n            const inputAddress = getInputAccountAddress(input);\n            const calls = [];\n\n            const abi = abiMap?.[contractInput.contractID];\n            if (abi) {\n              calls.push(\n                getFunctionCall({\n                  abi,\n                  receipt,\n                  rawPayload,\n                  maxInputs,\n                })\n              );\n            }\n\n            const newContractCallOps = addOperation(prevContractCallOps, {\n              name: OperationName.contractCall,\n              from: {\n                type: AddressType.account,\n                address: inputAddress,\n              },\n              to: {\n                type: AddressType.contract,\n                address: receipt.to,\n              },\n              // if no amount is forwarded to the contract, skip showing assetsSent\n              assetsSent: receipt.amount?.isZero()\n                ? undefined\n                : [\n                    {\n                      amount: receipt.amount,\n                      assetId: receipt.assetId,\n                    },\n                  ],\n              calls,\n            });\n\n            return newContractCallOps;\n          }\n        }\n        return prevContractCallOps;\n      }, prevOutputCallOps as Operation[]);\n\n      return newCallOps;\n    }\n\n    return prevOutputCallOps;\n  }, [] as Operation[]);\n\n  return contractCallOperations;\n}\n\n/** @hidden */\nexport function getTransferOperations({\n  inputs,\n  outputs,\n  receipts,\n}: GetTransferOperationsParams): Operation[] {\n  const coinOutputs = getOutputsCoin(outputs);\n\n  const [transferReceipt] = getReceiptsByType<TransactionResultTransferReceipt>(\n    receipts,\n    ReceiptType.Transfer\n  );\n\n  let operations: Operation[] = [];\n\n  // Possible transfer to contract\n  if (transferReceipt) {\n    const changeOutputs = getOutputsChange(outputs);\n    changeOutputs.forEach((output) => {\n      const { assetId } = output;\n      const [contractInput] = getInputsContract(inputs);\n      const utxo = getInputFromAssetId(inputs, assetId);\n\n      if (utxo && contractInput) {\n        const inputAddress = getInputAccountAddress(utxo);\n        operations = addOperation(operations, {\n          name: OperationName.transfer,\n          from: {\n            type: AddressType.account,\n            address: inputAddress,\n          },\n          to: {\n            type: AddressType.contract,\n            address: contractInput.contractID,\n          },\n          assetsSent: [\n            {\n              assetId: assetId.toString(),\n              amount: transferReceipt.amount,\n            },\n          ],\n        });\n      }\n    });\n  } else {\n    coinOutputs.forEach((output) => {\n      const input = getInputFromAssetId(inputs, output.assetId);\n      if (input) {\n        const inputAddress = getInputAccountAddress(input);\n        operations = addOperation(operations, {\n          name: OperationName.transfer,\n          from: {\n            type: AddressType.account,\n            address: inputAddress,\n          },\n          to: {\n            type: AddressType.account,\n            address: output.to.toString(),\n          },\n          assetsSent: [\n            {\n              assetId: output.assetId.toString(),\n              amount: output.amount,\n            },\n          ],\n        });\n      }\n    });\n  }\n\n  return operations;\n}\n\n/** @hidden */\nexport function getPayProducerOperations(outputs: Output[]): Operation[] {\n  const coinOutputs = getOutputsCoin(outputs);\n  const payProducerOperations = coinOutputs.reduce((prev, output) => {\n    const operations = addOperation(prev, {\n      name: OperationName.payBlockProducer,\n      from: {\n        type: AddressType.account,\n        address: 'Network',\n      },\n      to: {\n        type: AddressType.account,\n        address: output.to.toString(),\n      },\n      assetsSent: [\n        {\n          assetId: output.assetId.toString(),\n          amount: output.amount,\n        },\n      ],\n    });\n\n    return operations;\n  }, [] as Operation[]);\n\n  return payProducerOperations;\n}\n\n/** @hidden */\nexport function getContractCreatedOperations({ inputs, outputs }: InputOutputParam): Operation[] {\n  const contractCreatedOutputs = getOutputsContractCreated(outputs);\n  const input = getInputsCoin(inputs)[0];\n  const fromAddress = getInputAccountAddress(input);\n  const contractCreatedOperations = contractCreatedOutputs.reduce((prev, contractCreatedOutput) => {\n    const operations = addOperation(prev, {\n      name: OperationName.contractCreated,\n      from: {\n        type: AddressType.account,\n        address: fromAddress,\n      },\n      to: {\n        type: AddressType.contract,\n        address: contractCreatedOutput?.contractId || '',\n      },\n    });\n\n    return operations;\n  }, [] as Operation[]);\n\n  return contractCreatedOperations;\n}\n\n/** @hidden */\nexport function getOperations({\n  transactionType,\n  inputs,\n  outputs,\n  receipts,\n  abiMap,\n  rawPayload,\n  maxInputs,\n}: GetOperationParams): Operation[] {\n  if (isTypeCreate(transactionType)) {\n    return [\n      ...getContractCreatedOperations({ inputs, outputs }),\n      ...getTransferOperations({ inputs, outputs, receipts }),\n    ];\n  }\n\n  if (isTypeScript(transactionType)) {\n    return [\n      ...getTransferOperations({ inputs, outputs, receipts }),\n      ...getContractCallOperations({\n        inputs,\n        outputs,\n        receipts,\n        abiMap,\n        rawPayload,\n        maxInputs,\n      }),\n      ...getContractTransferOperations({ receipts }),\n      ...getWithdrawFromFuelOperations({ inputs, receipts }),\n    ];\n  }\n  // at this point we are sure it's a mint transaction\n  return [...getPayProducerOperations(outputs)];\n}\n","import { Interface, type JsonAbi, calculateVmTxMemory } from '@fuel-ts/abi-coder';\nimport type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { ReceiptCall } from '@fuel-ts/transactions';\n\ntype GetFunctionCallProps = {\n  abi: JsonAbi;\n  receipt: ReceiptCall;\n  rawPayload?: string;\n  maxInputs: BN;\n};\n\nexport const getFunctionCall = ({ abi, receipt, rawPayload, maxInputs }: GetFunctionCallProps) => {\n  const abiInterface = new Interface(abi);\n  const callFunctionSelector = receipt.param1.toHex(8);\n  const functionFragment = abiInterface.getFunction(callFunctionSelector);\n  const inputs = functionFragment.jsonFn.inputs;\n\n  let encodedArgs;\n\n  // if has more than 1 input or input type is bigger than 8 bytes, then it's a pointer to data\n  if (functionFragment.isInputDataPointer) {\n    if (rawPayload) {\n      // calculate offset to get function params from rawPayload. should also consider vm offset\n      const argsOffset = bn(receipt.param2)\n        .sub(calculateVmTxMemory({ maxInputs: maxInputs.toNumber() }))\n        .toNumber();\n\n      // slice(2) to remove first 0x, then slice again to remove offset and get only args\n      encodedArgs = `0x${rawPayload.slice(2).slice(argsOffset * 2)}`;\n    }\n  } else {\n    // for small inputs, param2 is directly the value\n    encodedArgs = receipt.param2.toHex();\n  }\n\n  let argumentsProvided;\n  if (encodedArgs) {\n    // use bytes got from rawPayload to decode function params\n    const data = functionFragment.decodeArguments(encodedArgs);\n    if (data) {\n      // put together decoded data with input names from abi\n      argumentsProvided = inputs.reduce((prev, input, index) => {\n        const value = data[index];\n        const name = input.name;\n\n        if (name) {\n          return {\n            ...prev,\n            // reparse to remove bn\n            [name]: JSON.parse(JSON.stringify(value)),\n          };\n        }\n\n        return prev;\n      }, {});\n    }\n  }\n\n  const call = {\n    functionSignature: functionFragment.signature,\n    functionName: functionFragment.name,\n    argumentsProvided,\n    ...(receipt.amount?.isZero() ? {} : { amount: receipt.amount, assetId: receipt.assetId }),\n  };\n\n  return call;\n};\n","import { ReceiptType } from '@fuel-ts/transactions';\n\nimport type { GqlReceipt } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\nimport { assembleReceiptByType } from '../utils';\n\nimport type { BurnedAsset, MintedAsset } from './types';\n\nexport const processGqlReceipt = (gqlReceipt: GqlReceipt): TransactionResultReceipt => {\n  const receipt = assembleReceiptByType(gqlReceipt);\n\n  switch (receipt.type) {\n    case ReceiptType.ReturnData: {\n      return {\n        ...receipt,\n        data: gqlReceipt.data || '0x',\n      };\n    }\n    case ReceiptType.LogData: {\n      return {\n        ...receipt,\n        data: gqlReceipt.data || '0x',\n      };\n    }\n    default:\n      return receipt;\n  }\n};\n\nexport const extractMintedAssetsFromReceipts = (\n  receipts: Array<TransactionResultReceipt>\n): MintedAsset[] => {\n  const mintedAssets: MintedAsset[] = [];\n\n  receipts.forEach((receipt) => {\n    if (receipt.type === ReceiptType.Mint) {\n      mintedAssets.push({\n        subId: receipt.subId,\n        contractId: receipt.contractId,\n        assetId: receipt.assetId,\n        amount: receipt.val,\n      });\n    }\n  });\n\n  return mintedAssets;\n};\n\nexport const extractBurnedAssetsFromReceipts = (\n  receipts: Array<TransactionResultReceipt>\n): BurnedAsset[] => {\n  const burnedAssets: BurnedAsset[] = [];\n\n  receipts.forEach((receipt) => {\n    if (receipt.type === ReceiptType.Burn) {\n      burnedAssets.push({\n        subId: receipt.subId,\n        contractId: receipt.contractId,\n        assetId: receipt.assetId,\n        amount: receipt.val,\n      });\n    }\n  });\n\n  return burnedAssets;\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type {\n  BlockId,\n  GqlTransactionStatusesNames,\n  GraphqlTransactionStatus,\n  Time,\n  TransactionSummary,\n} from './types';\nimport { TransactionStatus } from './types';\n\n/** @hidden */\nexport const getTransactionStatusName = (gqlStatus: GqlTransactionStatusesNames) => {\n  switch (gqlStatus) {\n    case 'FailureStatus':\n      return TransactionStatus.failure;\n    case 'SuccessStatus':\n      return TransactionStatus.success;\n    case 'SubmittedStatus':\n      return TransactionStatus.submitted;\n    case 'SqueezedOutStatus':\n      return TransactionStatus.squeezedout;\n    default:\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_STATUS,\n        `Invalid transaction status: ${gqlStatus}.`\n      );\n  }\n};\n\ntype IProcessGraphqlStatusResponse = Pick<\n  TransactionSummary,\n  'time' | 'blockId' | 'isStatusPending' | 'isStatusSuccess' | 'isStatusFailure' | 'status'\n>;\n\n/** @hidden */\nexport const processGraphqlStatus = (gqlTransactionStatus?: GraphqlTransactionStatus) => {\n  let time: Time;\n  let blockId: BlockId | undefined;\n  let status: TransactionStatus | undefined;\n\n  let isStatusFailure = false;\n  let isStatusSuccess = false;\n  let isStatusPending = false;\n\n  if (gqlTransactionStatus?.type) {\n    status = getTransactionStatusName(gqlTransactionStatus.type);\n\n    switch (gqlTransactionStatus.type) {\n      case 'SuccessStatus':\n        time = gqlTransactionStatus.time;\n        blockId = gqlTransactionStatus.block.id;\n        isStatusSuccess = true;\n        break;\n\n      case 'FailureStatus':\n        time = gqlTransactionStatus.time;\n        blockId = gqlTransactionStatus.block.id;\n        isStatusFailure = true;\n        break;\n\n      case 'SubmittedStatus':\n        time = gqlTransactionStatus.time;\n        isStatusPending = true;\n        break;\n      default:\n    }\n  }\n\n  const processedGraphqlStatus: IProcessGraphqlStatusResponse = {\n    time,\n    blockId,\n    status,\n    isStatusFailure,\n    isStatusSuccess,\n    isStatusPending,\n  };\n\n  return processedGraphqlStatus;\n};\n","import { type BN } from '@fuel-ts/math';\nimport { type Transaction } from '@fuel-ts/transactions';\nimport { hexlify } from 'ethers';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\nimport { getGasUsedFromReceipts } from '../utils';\n\nimport { calculateTransactionFee } from './calculate-transaction-fee';\nimport { fromTai64ToDate } from './date';\nimport {\n  getOperations,\n  getTransactionTypeName,\n  isTypeMint,\n  isTypeCreate,\n  isTypeScript,\n} from './operations';\nimport { extractBurnedAssetsFromReceipts, extractMintedAssetsFromReceipts } from './receipt';\nimport { processGraphqlStatus } from './status';\nimport type { AbiMap, GraphqlTransactionStatus, TransactionSummary } from './types';\n\nexport interface AssembleTransactionSummaryParams {\n  gasPerByte: BN;\n  gasPriceFactor: BN;\n  transaction: Transaction;\n  id?: string;\n  transactionBytes: Uint8Array;\n  gqlTransactionStatus?: GraphqlTransactionStatus;\n  receipts: TransactionResultReceipt[];\n  abiMap?: AbiMap;\n  maxInputs: BN;\n  gasCosts: GqlGasCosts;\n}\n\n/** @hidden */\nexport function assembleTransactionSummary<TTransactionType = void>(\n  params: AssembleTransactionSummaryParams\n) {\n  const {\n    id,\n    receipts,\n    gasPerByte,\n    gasPriceFactor,\n    transaction,\n    transactionBytes,\n    gqlTransactionStatus,\n    abiMap = {},\n    maxInputs,\n    gasCosts,\n  } = params;\n\n  const gasUsed = getGasUsedFromReceipts(receipts);\n\n  const rawPayload = hexlify(transactionBytes);\n\n  const operations = getOperations({\n    transactionType: transaction.type,\n    inputs: transaction.inputs || [],\n    outputs: transaction.outputs || [],\n    receipts,\n    rawPayload,\n    abiMap,\n    maxInputs,\n  });\n\n  const typeName = getTransactionTypeName(transaction.type);\n\n  const { fee } = calculateTransactionFee({\n    gasUsed,\n    rawPayload,\n    consensusParameters: {\n      gasCosts,\n      feeParams: {\n        gasPerByte,\n        gasPriceFactor,\n      },\n    },\n  });\n\n  const { isStatusFailure, isStatusPending, isStatusSuccess, blockId, status, time } =\n    processGraphqlStatus(gqlTransactionStatus);\n\n  const mintedAssets = extractMintedAssetsFromReceipts(receipts);\n  const burnedAssets = extractBurnedAssetsFromReceipts(receipts);\n\n  let date: Date | undefined;\n\n  if (time) {\n    date = fromTai64ToDate(time);\n  }\n\n  const transactionSummary: TransactionSummary<TTransactionType> = {\n    id,\n    fee,\n    gasUsed,\n    operations,\n    type: typeName,\n    blockId,\n    time,\n    status,\n    receipts,\n    mintedAssets,\n    burnedAssets,\n    isTypeMint: isTypeMint(transaction.type),\n    isTypeCreate: isTypeCreate(transaction.type),\n    isTypeScript: isTypeScript(transaction.type),\n    isStatusFailure,\n    isStatusSuccess,\n    isStatusPending,\n    date,\n    transaction: transaction as Transaction<TTransactionType>,\n  };\n\n  return transactionSummary;\n}\n","import type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { TransactionCreate, TransactionScript } from '@fuel-ts/transactions';\nimport { PolicyType, TransactionCoder, TransactionType } from '@fuel-ts/transactions';\nimport { getBytesCopy } from 'ethers';\n\nimport type { GqlConsensusParameters, GqlFeeParameters } from '../__generated__/operations';\nimport { calculatePriceWithFactor } from '../utils';\nimport {\n  calculateMetadataGasForTxCreate,\n  calculateMetadataGasForTxScript,\n  getMaxGas,\n  getMinGas,\n} from '../utils/gas';\n\ntype FeeParams =\n  | Pick<GqlFeeParameters, 'gasPerByte' | 'gasPriceFactor'>\n  | {\n      gasPerByte: BN | number;\n      gasPriceFactor: BN | number;\n    };\n\nexport type CalculateTransactionFeeParams = {\n  gasUsed: BN;\n  rawPayload: string;\n  consensusParameters: Pick<GqlConsensusParameters, 'gasCosts'> & { feeParams: FeeParams };\n};\n\nexport const calculateTransactionFee = (params: CalculateTransactionFeeParams) => {\n  const {\n    gasUsed,\n    rawPayload,\n    consensusParameters: { gasCosts, feeParams },\n  } = params;\n\n  const gasPerByte = bn(feeParams.gasPerByte);\n  const gasPriceFactor = bn(feeParams.gasPriceFactor);\n\n  const transactionBytes = getBytesCopy(rawPayload);\n\n  const [transaction] = new TransactionCoder().decode(transactionBytes, 0);\n\n  if (transaction.type === TransactionType.Mint) {\n    return {\n      fee: bn(0),\n      minFee: bn(0),\n      maxFee: bn(0),\n      feeFromGasUsed: bn(0),\n    };\n  }\n\n  const { type, witnesses, inputs, policies } = transaction as\n    | TransactionCreate\n    | TransactionScript;\n\n  let metadataGas = bn(0);\n  let gasLimit = bn(0);\n\n  if (type === TransactionType.Create) {\n    const { bytecodeWitnessIndex, storageSlots } = transaction as TransactionCreate;\n\n    const contractBytesSize = bn(getBytesCopy(witnesses[bytecodeWitnessIndex].data).length);\n\n    metadataGas = calculateMetadataGasForTxCreate({\n      contractBytesSize,\n      gasCosts,\n      stateRootSize: storageSlots.length || 0,\n      txBytesSize: transactionBytes.length,\n    });\n  } else {\n    const { scriptGasLimit } = transaction;\n\n    if (scriptGasLimit) {\n      gasLimit = scriptGasLimit;\n    }\n\n    metadataGas = calculateMetadataGasForTxScript({\n      gasCosts,\n      txBytesSize: transactionBytes.length,\n    });\n  }\n\n  const minGas = getMinGas({\n    gasCosts,\n    gasPerByte: bn(gasPerByte),\n    inputs,\n    metadataGas,\n    txBytesSize: transactionBytes.length,\n  });\n\n  const gasPrice = bn(policies.find((policy) => policy.type === PolicyType.GasPrice)?.data);\n  const witnessLimit = policies.find((policy) => policy.type === PolicyType.WitnessLimit)?.data as\n    | BN\n    | undefined;\n\n  const witnessesLength = witnesses.reduce((acc, wit) => acc + wit.dataLength, 0);\n\n  const maxGas = getMaxGas({\n    gasPerByte,\n    minGas,\n    witnessesLength,\n    gasLimit,\n    witnessLimit,\n  });\n\n  const feeFromGasUsed = calculatePriceWithFactor(gasUsed, gasPrice, gasPriceFactor);\n  const minFee = calculatePriceWithFactor(minGas, gasPrice, gasPriceFactor);\n  const maxFee = calculatePriceWithFactor(maxGas, gasPrice, gasPriceFactor);\n  const fee = minFee.add(feeFromGasUsed);\n\n  return {\n    fee,\n    minFee,\n    maxFee,\n    feeFromGasUsed,\n  };\n};\n","import { TAI64 } from 'tai64';\n\nexport const fromTai64ToDate = (tai64Timestamp: string) => {\n  const timestamp = TAI64.fromString(tai64Timestamp, 10).toUnix();\n  return new Date(timestamp * 1000);\n};\n\nexport const fromDateToTai64 = (date: Date) =>\n  TAI64.fromUnix(Math.floor(date.getTime() / 1000)).toString(10);\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type {\n  ReceiptCall,\n  ReceiptLog,\n  ReceiptLogData,\n  ReceiptPanic,\n  ReceiptReturn,\n  ReceiptReturnData,\n  ReceiptRevert,\n  ReceiptTransfer,\n  ReceiptTransferOut,\n  ReceiptScriptResult,\n  ReceiptMessageOut,\n  Transaction,\n  ReceiptMint,\n  ReceiptBurn,\n} from '@fuel-ts/transactions';\nimport { TransactionCoder } from '@fuel-ts/transactions';\nimport { getBytesCopy } from 'ethers';\n\nimport type Provider from '../provider';\nimport { assembleTransactionSummary } from '../transaction-summary/assemble-transaction-summary';\nimport { processGqlReceipt } from '../transaction-summary/receipt';\nimport type {\n  TransactionSummary,\n  FailureStatus,\n  GqlTransaction,\n  AbiMap,\n} from '../transaction-summary/types';\nimport { sleep } from '../utils';\n\n/** @hidden */\nexport type TransactionResultCallReceipt = ReceiptCall;\n/** @hidden */\nexport type TransactionResultReturnReceipt = ReceiptReturn;\n/** @hidden */\nexport type TransactionResultReturnDataReceipt = ReceiptReturnData & { data: string };\n/** @hidden */\nexport type TransactionResultPanicReceipt = ReceiptPanic;\n/** @hidden */\nexport type TransactionResultRevertReceipt = ReceiptRevert;\n/** @hidden */\nexport type TransactionResultLogReceipt = ReceiptLog;\n/** @hidden */\nexport type TransactionResultLogDataReceipt = ReceiptLogData & { data: string };\n/** @hidden */\nexport type TransactionResultTransferReceipt = ReceiptTransfer;\n/** @hidden */\nexport type TransactionResultTransferOutReceipt = ReceiptTransferOut;\n/** @hidden */\nexport type TransactionResultScriptResultReceipt = ReceiptScriptResult;\n/** @hidden */\nexport type TransactionResultMessageOutReceipt = ReceiptMessageOut;\nexport type TransactionResultMintReceipt = ReceiptMint;\nexport type TransactionResultBurnReceipt = ReceiptBurn;\n\n/** @hidden */\nexport type TransactionResultReceipt =\n  | ReceiptCall\n  | ReceiptReturn\n  | (ReceiptReturnData & { data: string })\n  | ReceiptPanic\n  | ReceiptRevert\n  | ReceiptLog\n  | (ReceiptLogData & { data: string })\n  | ReceiptTransfer\n  | ReceiptTransferOut\n  | ReceiptScriptResult\n  | ReceiptMessageOut\n  | TransactionResultMintReceipt\n  | TransactionResultBurnReceipt;\n\nconst STATUS_POLLING_INTERVAL_MAX_MS = 5000;\nconst STATUS_POLLING_INTERVAL_MIN_MS = 1000;\n\n/** @hidden */\nexport type TransactionResult<TTransactionType = void> = TransactionSummary<TTransactionType> & {\n  gqlTransaction: GqlTransaction;\n};\n\n/**\n * Represents a response for a transaction.\n */\nexport class TransactionResponse {\n  /** Transaction ID */\n  id: string;\n  /** Current provider */\n  provider: Provider;\n  /** Gas used on the transaction */\n  gasUsed: BN = bn(0);\n  /** Number of attempts made to fetch the transaction */\n  fetchAttempts: number = 0;\n  /** Number of attempts made to retrieve a processed transaction. */\n  resultAttempts: number = 0;\n  /** The graphql Transaction with receipts object. */\n  gqlTransaction?: GqlTransaction;\n\n  /**\n   * Constructor for `TransactionResponse`.\n   *\n   * @param id - The transaction ID.\n   * @param provider - The provider.\n   */\n  constructor(id: string, provider: Provider) {\n    this.id = id;\n    this.provider = provider;\n  }\n\n  /**\n   * Async constructor for `TransactionResponse`. This method can be used to create\n   * an instance of `TransactionResponse` and wait for the transaction to be fetched\n   * from the chain, ensuring that the `gqlTransaction` property is set.\n   *\n   * @param id - The transaction ID.\n   * @param provider - The provider.\n   */\n  static async create(id: string, provider: Provider): Promise<TransactionResponse> {\n    const response = new TransactionResponse(id, provider);\n    await response.fetch();\n    return response;\n  }\n\n  /**\n   * Fetch the transaction with receipts from the provider.\n   *\n   * @returns Transaction with receipts query result.\n   */\n  async fetch(): Promise<GqlTransaction> {\n    const response = await this.provider.operations.getTransactionWithReceipts({\n      transactionId: this.id,\n    });\n\n    if (!response.transaction) {\n      await this.sleepBasedOnAttempts(++this.fetchAttempts);\n      return this.fetch();\n    }\n\n    this.gqlTransaction = response.transaction;\n\n    return response.transaction;\n  }\n\n  /**\n   * Decode the raw payload of the transaction.\n   *\n   * @param transactionWithReceipts - The transaction with receipts object.\n   * @returns The decoded transaction.\n   */\n  decodeTransaction<TTransactionType = void>(transactionWithReceipts: GqlTransaction) {\n    return new TransactionCoder().decode(\n      getBytesCopy(transactionWithReceipts.rawPayload),\n      0\n    )?.[0] as Transaction<TTransactionType>;\n  }\n\n  /**\n   * Retrieves the TransactionSummary. If the `gqlTransaction` is not set, it will\n   * fetch it from the provider\n   *\n   * @param contractsAbiMap - The contracts ABI map.\n   * @returns\n   */\n  async getTransactionSummary<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionSummary<TTransactionType>> {\n    let transaction = this.gqlTransaction;\n\n    if (!transaction) {\n      transaction = await this.fetch();\n    }\n\n    const decodedTransaction = this.decodeTransaction<TTransactionType>(\n      transaction\n    ) as Transaction<TTransactionType>;\n\n    const receipts = transaction.receipts?.map(processGqlReceipt) || [];\n\n    const { gasPerByte, gasPriceFactor, gasCosts } = this.provider.getGasConfig();\n    const maxInputs = this.provider.getChain().consensusParameters.maxInputs;\n\n    const transactionSummary = assembleTransactionSummary<TTransactionType>({\n      id: this.id,\n      receipts,\n      transaction: decodedTransaction,\n      transactionBytes: getBytesCopy(transaction.rawPayload),\n      gqlTransactionStatus: transaction.status,\n      gasPerByte,\n      gasPriceFactor,\n      abiMap: contractsAbiMap,\n      maxInputs,\n      gasCosts,\n    });\n\n    return transactionSummary;\n  }\n\n  /**\n   * Waits for transaction to complete and returns the result.\n   *\n   * @returns The completed transaction result\n   */\n  async waitForResult<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionResult<TTransactionType>> {\n    await this.fetch();\n\n    if (this.gqlTransaction?.status?.type === 'SubmittedStatus') {\n      await this.sleepBasedOnAttempts(++this.resultAttempts);\n\n      return this.waitForResult<TTransactionType>(contractsAbiMap);\n    }\n\n    const transactionSummary = await this.getTransactionSummary<TTransactionType>(contractsAbiMap);\n\n    const transactionResult: TransactionResult<TTransactionType> = {\n      gqlTransaction: this.gqlTransaction as GqlTransaction,\n      ...transactionSummary,\n    };\n\n    return transactionResult;\n  }\n\n  /**\n   * Waits for transaction to complete and returns the result.\n   *\n   * @param contractsAbiMap - The contracts ABI map.\n   */\n  async wait<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionResult<TTransactionType>> {\n    const result = await this.waitForResult<TTransactionType>(contractsAbiMap);\n\n    if (result.isStatusFailure) {\n      throw new FuelError(\n        ErrorCode.TRANSACTION_FAILED,\n        `Transaction failed: ${(<FailureStatus>result.gqlTransaction.status).reason}`\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Introduces a delay based on the number of previous attempts made.\n   *\n   * @param attempts - The number of attempts.\n   */\n  private async sleepBasedOnAttempts(attempts: number): Promise<void> {\n    // TODO: Consider adding `maxTimeout` or `maxAttempts` parameter.\n    // The aim is to avoid perpetual execution; when the limit\n    // is reached, we can throw accordingly.\n    await sleep(\n      Math.min(STATUS_POLLING_INTERVAL_MIN_MS * attempts, STATUS_POLLING_INTERVAL_MAX_MS)\n    );\n  }\n}\n","import type { BN } from '@fuel-ts/math';\n\nimport type { CoinQuantity } from '../coin-quantity';\n\nexport const mergeQuantities = (arr1: CoinQuantity[], arr2: CoinQuantity[]): CoinQuantity[] => {\n  const resultMap: { [key: string]: BN } = {};\n\n  function addToMap({ amount, assetId }: CoinQuantity) {\n    if (resultMap[assetId]) {\n      resultMap[assetId] = resultMap[assetId].add(amount);\n    } else {\n      resultMap[assetId] = amount;\n    }\n  }\n\n  // Process both arrays\n  arr1.forEach(addToMap);\n  arr2.forEach(addToMap);\n\n  // Convert the resultMap back to an array\n  return Object.entries(resultMap).map(([assetId, amount]) => ({ assetId, amount }));\n};\n","import { Address } from '@fuel-ts/address';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\nimport type { BN } from '@fuel-ts/math';\nimport { bn, max } from '@fuel-ts/math';\nimport type { Transaction } from '@fuel-ts/transactions';\nimport {\n  InputType,\n  TransactionType,\n  InputMessageCoder,\n  TransactionCoder,\n} from '@fuel-ts/transactions';\nimport { checkFuelCoreVersionCompatibility } from '@fuel-ts/versions';\nimport type { BytesLike } from 'ethers';\nimport { getBytesCopy, hexlify, Network } from 'ethers';\nimport { GraphQLClient } from 'graphql-request';\nimport { clone } from 'ramda';\n\nimport { getSdk as getOperationsSdk } from './__generated__/operations';\nimport type {\n  GqlChainInfoFragmentFragment,\n  GqlGasCosts,\n  GqlGetBlocksQueryVariables,\n  GqlPeerInfo,\n} from './__generated__/operations';\nimport type { Coin } from './coin';\nimport type { CoinQuantity, CoinQuantityLike } from './coin-quantity';\nimport { coinQuantityfy } from './coin-quantity';\nimport { MemoryCache } from './memory-cache';\nimport type { Message, MessageCoin, MessageProof, MessageStatus } from './message';\nimport type { ExcludeResourcesOption, Resource } from './resource';\nimport type {\n  TransactionRequestLike,\n  TransactionRequest,\n  TransactionRequestInput,\n  CoinTransactionRequestInput,\n} from './transaction-request';\nimport { transactionRequestify, ScriptTransactionRequest } from './transaction-request';\nimport type { TransactionResultReceipt } from './transaction-response';\nimport { TransactionResponse } from './transaction-response';\nimport { processGqlReceipt } from './transaction-summary/receipt';\nimport {\n  calculatePriceWithFactor,\n  fromUnixToTai64,\n  getGasUsedFromReceipts,\n  getReceiptsWithMissingData,\n} from './utils';\nimport { mergeQuantities } from './utils/merge-quantities';\n\nconst MAX_RETRIES = 10;\n\nexport type CallResult = {\n  receipts: TransactionResultReceipt[];\n};\n\n/**\n * A Fuel block\n */\nexport type Block = {\n  id: string;\n  height: BN;\n  time: string;\n  transactionIds: string[];\n};\n\n/**\n * Deployed Contract bytecode and contract id\n */\nexport type ContractResult = {\n  id: string;\n  bytecode: string;\n};\n\ntype ConsensusParameters = {\n  contractMaxSize: BN;\n  maxInputs: BN;\n  maxOutputs: BN;\n  maxWitnesses: BN;\n  maxGasPerTx: BN;\n  maxScriptLength: BN;\n  maxScriptDataLength: BN;\n  maxStorageSlots: BN;\n  maxPredicateLength: BN;\n  maxPredicateDataLength: BN;\n  maxGasPerPredicate: BN;\n  gasPriceFactor: BN;\n  gasPerByte: BN;\n  maxMessageDataLength: BN;\n  chainId: BN;\n  gasCosts: GqlGasCosts;\n};\n\n/**\n * Chain information\n */\nexport type ChainInfo = {\n  name: string;\n  baseChainHeight: BN;\n  consensusParameters: ConsensusParameters;\n  gasCosts: GqlGasCosts;\n  latestBlock: {\n    id: string;\n    height: BN;\n    time: string;\n    transactions: Array<{ id: string }>;\n  };\n};\n\n/**\n * Node information\n */\nexport type NodeInfo = {\n  utxoValidation: boolean;\n  vmBacktrace: boolean;\n  minGasPrice: BN;\n  maxTx: BN;\n  maxDepth: BN;\n  nodeVersion: string;\n  peers: GqlPeerInfo[];\n};\n\nexport type NodeInfoAndConsensusParameters = {\n  minGasPrice: BN;\n  nodeVersion: string;\n  gasPerByte: BN;\n  gasPriceFactor: BN;\n  maxGasPerTx: BN;\n};\n\n// #region cost-estimation-1\nexport type TransactionCost = {\n  requiredQuantities: CoinQuantity[];\n  receipts: TransactionResultReceipt[];\n  minGasPrice: BN;\n  gasPrice: BN;\n  minGas: BN;\n  maxGas: BN;\n  gasUsed: BN;\n  minFee: BN;\n  maxFee: BN;\n  usedFee: BN;\n};\n// #endregion cost-estimation-1\n\nconst processGqlChain = (chain: GqlChainInfoFragmentFragment): ChainInfo => {\n  const { name, daHeight, consensusParameters, latestBlock } = chain;\n\n  const { contractParams, feeParams, predicateParams, scriptParams, txParams, gasCosts } =\n    consensusParameters;\n\n  return {\n    name,\n    baseChainHeight: bn(daHeight),\n    consensusParameters: {\n      contractMaxSize: bn(contractParams.contractMaxSize),\n      maxInputs: bn(txParams.maxInputs),\n      maxOutputs: bn(txParams.maxOutputs),\n      maxWitnesses: bn(txParams.maxWitnesses),\n      maxGasPerTx: bn(txParams.maxGasPerTx),\n      maxScriptLength: bn(scriptParams.maxScriptLength),\n      maxScriptDataLength: bn(scriptParams.maxScriptDataLength),\n      maxStorageSlots: bn(contractParams.maxStorageSlots),\n      maxPredicateLength: bn(predicateParams.maxPredicateLength),\n      maxPredicateDataLength: bn(predicateParams.maxPredicateDataLength),\n      maxGasPerPredicate: bn(predicateParams.maxGasPerPredicate),\n      gasPriceFactor: bn(feeParams.gasPriceFactor),\n      gasPerByte: bn(feeParams.gasPerByte),\n      maxMessageDataLength: bn(predicateParams.maxMessageDataLength),\n      chainId: bn(consensusParameters.chainId),\n      gasCosts,\n    },\n    gasCosts,\n    latestBlock: {\n      id: latestBlock.id,\n      height: bn(latestBlock.header.height),\n      time: latestBlock.header.time,\n      transactions: latestBlock.transactions.map((i) => ({\n        id: i.id,\n      })),\n    },\n  };\n};\n\n/**\n * @hidden\n *\n * Cursor pagination arguments\n *\n * https://relay.dev/graphql/connections.htm#sec-Arguments\n */\nexport type CursorPaginationArgs = {\n  /** Forward pagination limit */\n  first?: number | null;\n  /** Forward pagination cursor */\n  after?: string | null;\n  /** Backward pagination limit  */\n  last?: number | null;\n  /** Backward pagination cursor */\n  before?: string | null;\n};\n\nexport type FetchRequestOptions = {\n  method: 'POST';\n  headers: { [key: string]: string };\n  body: string;\n};\n\n/*\n * Provider initialization options\n */\nexport type ProviderOptions = {\n  fetch?: (url: string, options: FetchRequestOptions) => Promise<unknown>;\n  cacheUtxo?: number;\n};\n\n/**\n * UTXO Validation Param\n */\nexport type UTXOValidationParams = {\n  utxoValidation?: boolean;\n};\n\n/**\n * Transaction estimation Param\n */\nexport type EstimateTransactionParams = {\n  estimateTxDependencies?: boolean;\n};\n\nexport type EstimatePredicateParams = {\n  estimatePredicates?: boolean;\n};\n\nexport type TransactionCostParams = EstimateTransactionParams & EstimatePredicateParams;\n\n/**\n * Provider Call transaction params\n */\nexport type ProviderCallParams = UTXOValidationParams & EstimateTransactionParams;\n\n/**\n * Provider Send transaction params\n */\nexport type ProviderSendTxParams = EstimateTransactionParams;\n\n/**\n * URL - Consensus Params mapping.\n */\ntype ChainInfoCache = Record<string, ChainInfo>;\n\n/**\n * URL - Node Info mapping.\n */\ntype NodeInfoCache = Record<string, NodeInfo>;\n\n/**\n * A provider for connecting to a node\n */\nexport default class Provider {\n  operations: ReturnType<typeof getOperationsSdk>;\n  cache?: MemoryCache;\n\n  static clearChainAndNodeCaches() {\n    Provider.nodeInfoCache = {};\n    Provider.chainInfoCache = {};\n  }\n\n  private static chainInfoCache: ChainInfoCache = {};\n  private static nodeInfoCache: NodeInfoCache = {};\n\n  /**\n   * Constructor to initialize a Provider.\n   *\n   * @param url - GraphQL endpoint of the Fuel node\n   * @param chainInfo - Chain info of the Fuel node\n   * @param options - Additional options for the provider\n   * @hidden\n   */\n  protected constructor(\n    /** GraphQL endpoint of the Fuel node */\n    public url: string,\n    public options: ProviderOptions = {}\n  ) {\n    this.operations = this.createOperations(url, options);\n    this.cache = options.cacheUtxo ? new MemoryCache(options.cacheUtxo) : undefined;\n  }\n\n  /**\n   * Creates a new instance of the Provider class. This is the recommended way to initialize a Provider.\n   * @param url - GraphQL endpoint of the Fuel node\n   * @param options - Additional options for the provider\n   */\n  static async create(url: string, options: ProviderOptions = {}) {\n    const provider = new Provider(url, options);\n    await provider.fetchChainAndNodeInfo();\n    return provider;\n  }\n\n  /**\n   * Returns the cached chainInfo for the current URL.\n   */\n  getChain() {\n    const chain = Provider.chainInfoCache[this.url];\n    if (!chain) {\n      throw new FuelError(\n        ErrorCode.CHAIN_INFO_CACHE_EMPTY,\n        'Chain info cache is empty. Make sure you have called `Provider.create` to initialize the provider.'\n      );\n    }\n    return chain;\n  }\n\n  /**\n   * Returns the cached nodeInfo for the current URL.\n   */\n  getNode() {\n    const node = Provider.nodeInfoCache[this.url];\n    if (!node) {\n      throw new FuelError(\n        ErrorCode.NODE_INFO_CACHE_EMPTY,\n        'Node info cache is empty. Make sure you have called `Provider.create` to initialize the provider.'\n      );\n    }\n    return node;\n  }\n\n  /**\n   * Returns some helpful parameters related to gas fees.\n   */\n  getGasConfig() {\n    const { minGasPrice } = this.getNode();\n    const { maxGasPerTx, maxGasPerPredicate, gasPriceFactor, gasPerByte, gasCosts } =\n      this.getChain().consensusParameters;\n    return {\n      minGasPrice,\n      maxGasPerTx,\n      maxGasPerPredicate,\n      gasPriceFactor,\n      gasPerByte,\n      gasCosts,\n    };\n  }\n\n  /**\n   * Updates the URL for the provider and fetches the consensus parameters for the new URL, if needed.\n   */\n  async connect(url: string, options?: ProviderOptions) {\n    this.url = url;\n    this.operations = this.createOperations(url, options ?? this.options);\n    await this.fetchChainAndNodeInfo();\n  }\n\n  /**\n   * Fetches both the chain and node information, saves it to the cache, and return it.\n   *\n   * @returns NodeInfo and Chain\n   */\n  async fetchChainAndNodeInfo() {\n    const chain = await this.fetchChain();\n    const nodeInfo = await this.fetchNode();\n\n    Provider.ensureClientVersionIsSupported(nodeInfo);\n\n    return {\n      chain,\n      nodeInfo,\n    };\n  }\n\n  private static ensureClientVersionIsSupported(nodeInfo: NodeInfo) {\n    const { isMajorSupported, isMinorSupported, supportedVersion } =\n      checkFuelCoreVersionCompatibility(nodeInfo.nodeVersion);\n\n    if (!isMajorSupported || !isMinorSupported) {\n      throw new FuelError(\n        FuelError.CODES.UNSUPPORTED_FUEL_CLIENT_VERSION,\n        `Fuel client version: ${nodeInfo.nodeVersion}, Supported version: ${supportedVersion}`\n      );\n    }\n  }\n\n  /**\n   * Create GraphQL client and set operations.\n   *\n   * @param url - The URL of the Fuel node\n   * @param options - Additional options for the provider\n   * @returns The operation SDK object\n   */\n  private createOperations(url: string, options: ProviderOptions = {}) {\n    this.url = url;\n    const gqlClient = new GraphQLClient(url, options.fetch ? { fetch: options.fetch } : undefined);\n    return getOperationsSdk(gqlClient);\n  }\n\n  /**\n   * Returns the version of the connected node.\n   *\n   * @returns A promise that resolves to the version string.\n   */\n  async getVersion(): Promise<string> {\n    const {\n      nodeInfo: { nodeVersion },\n    } = await this.operations.getVersion();\n    return nodeVersion;\n  }\n\n  /**\n   * @hidden\n   *\n   * Returns the network configuration of the connected Fuel node.\n   *\n   * @returns A promise that resolves to the network configuration object\n   */\n  async getNetwork(): Promise<Network> {\n    const {\n      name,\n      consensusParameters: { chainId },\n    } = await this.getChain();\n    const network = new Network(name, chainId.toNumber());\n    return Promise.resolve(network);\n  }\n\n  /**\n   * Returns the block number.\n   *\n   * @returns A promise that resolves to the block number\n   */\n  async getBlockNumber(): Promise<BN> {\n    const { chain } = await this.operations.getChain();\n    return bn(chain.latestBlock.header.height, 10);\n  }\n\n  /**\n   * Returns the chain information.\n   * @param url - The URL of the Fuel node\n   * @returns NodeInfo object\n   */\n  async fetchNode(): Promise<NodeInfo> {\n    const { nodeInfo } = await this.operations.getNodeInfo();\n\n    const processedNodeInfo: NodeInfo = {\n      maxDepth: bn(nodeInfo.maxDepth),\n      maxTx: bn(nodeInfo.maxTx),\n      minGasPrice: bn(nodeInfo.minGasPrice),\n      nodeVersion: nodeInfo.nodeVersion,\n      utxoValidation: nodeInfo.utxoValidation,\n      vmBacktrace: nodeInfo.vmBacktrace,\n      peers: nodeInfo.peers,\n    };\n\n    Provider.nodeInfoCache[this.url] = processedNodeInfo;\n\n    return processedNodeInfo;\n  }\n\n  /**\n   * Fetches the `chainInfo` for the given node URL.\n   * @param url - The URL of the Fuel node\n   * @returns ChainInfo object\n   */\n  async fetchChain(): Promise<ChainInfo> {\n    const { chain } = await this.operations.getChain();\n\n    const processedChain = processGqlChain(chain);\n\n    Provider.chainInfoCache[this.url] = processedChain;\n\n    return processedChain;\n  }\n\n  /**\n   * Returns the chain ID\n   * @returns A promise that resolves to the chain ID number\n   */\n  getChainId() {\n    const {\n      consensusParameters: { chainId },\n    } = this.getChain();\n    return chainId.toNumber();\n  }\n\n  /**\n   * @hidden\n   */\n  #cacheInputs(inputs: TransactionRequestInput[]): void {\n    if (!this.cache) {\n      return;\n    }\n\n    inputs.forEach((input) => {\n      if (input.type === InputType.Coin) {\n        this.cache?.set(input.id);\n      }\n    });\n  }\n\n  /**\n   * Submits a transaction to the chain to be executed.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added.\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @returns A promise that resolves to the transaction response object.\n   */\n  // #region Provider-sendTransaction\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true }: ProviderSendTxParams = {}\n  ): Promise<TransactionResponse> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    this.#cacheInputs(transactionRequest.inputs);\n    if (estimateTxDependencies) {\n      await this.estimateTxDependencies(transactionRequest);\n    }\n    // #endregion Provider-sendTransaction\n\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const { gasUsed, minGasPrice } = await this.getTransactionCost(transactionRequest, [], {\n      estimateTxDependencies: false,\n      estimatePredicates: false,\n    });\n\n    if (bn(minGasPrice).gt(bn(transactionRequest.gasPrice))) {\n      throw new FuelError(\n        ErrorCode.GAS_PRICE_TOO_LOW,\n        `Gas price '${transactionRequest.gasPrice}' is lower than the required: '${minGasPrice}'.`\n      );\n    }\n\n    const isScriptTransaction = transactionRequest.type === TransactionType.Script;\n\n    if (isScriptTransaction && bn(gasUsed).gt(bn(transactionRequest.gasLimit))) {\n      throw new FuelError(\n        ErrorCode.GAS_LIMIT_TOO_LOW,\n        `Gas limit '${transactionRequest.gasLimit}' is lower than the required: '${gasUsed}'.`\n      );\n    }\n\n    const {\n      submit: { id: transactionId },\n    } = await this.operations.submit({ encodedTransaction });\n\n    const response = new TransactionResponse(transactionId, this);\n    return response;\n  }\n\n  /**\n   * Executes a transaction without actually submitting it to the chain.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added.\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @param utxoValidation - Additional provider call parameters.\n   * @returns A promise that resolves to the call result object.\n   */\n  async call(\n    transactionRequestLike: TransactionRequestLike,\n    { utxoValidation, estimateTxDependencies = true }: ProviderCallParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.estimateTxDependencies(transactionRequest);\n    }\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const { dryRun: gqlReceipts } = await this.operations.dryRun({\n      encodedTransaction,\n      utxoValidation: utxoValidation || false,\n    });\n    const receipts = gqlReceipts.map(processGqlReceipt);\n    return {\n      receipts,\n    };\n  }\n\n  /**\n   * Verifies whether enough gas is available to complete transaction.\n   *\n   * @param transactionRequest - The transaction request object.\n   * @returns A promise that resolves to the estimated transaction request object.\n   */\n  async estimatePredicates(transactionRequest: TransactionRequest): Promise<TransactionRequest> {\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const response = await this.operations.estimatePredicates({\n      encodedTransaction,\n    });\n\n    const estimatedTransaction = transactionRequest;\n    const [decodedTransaction] = new TransactionCoder().decode(\n      getBytesCopy(response.estimatePredicates.rawPayload),\n      0\n    );\n\n    if (decodedTransaction.inputs) {\n      decodedTransaction.inputs.forEach((input, index) => {\n        if ('predicate' in input && input.predicateGasUsed.gt(0)) {\n          (<CoinTransactionRequestInput>estimatedTransaction.inputs[index]).predicateGasUsed =\n            input.predicateGasUsed;\n        }\n      });\n    }\n\n    return estimatedTransaction;\n  }\n\n  /**\n   * Will dryRun a transaction and check for missing dependencies.\n   *\n   * If there are missing variable outputs,\n   * `addVariableOutputs` is called on the transaction.\n   *\n   * @privateRemarks\n   * TODO: Investigate support for missing contract IDs\n   * TODO: Add support for missing output messages\n   *\n   * @param transactionRequest - The transaction request object.\n   * @returns A promise.\n   */\n  async estimateTxDependencies(transactionRequest: TransactionRequest): Promise<void> {\n    let missingOutputVariableCount = 0;\n    let missingOutputContractIdsCount = 0;\n    let tries = 0;\n\n    if (transactionRequest.type === TransactionType.Create) {\n      return;\n    }\n\n    let txRequest = transactionRequest;\n\n    if (txRequest.hasPredicateInput()) {\n      txRequest = (await this.estimatePredicates(txRequest)) as ScriptTransactionRequest;\n    }\n\n    do {\n      const { dryRun: gqlReceipts } = await this.operations.dryRun({\n        encodedTransaction: hexlify(txRequest.toTransactionBytes()),\n        utxoValidation: false,\n      });\n      const receipts = gqlReceipts.map(processGqlReceipt);\n      const { missingOutputVariables, missingOutputContractIds } =\n        getReceiptsWithMissingData(receipts);\n\n      missingOutputVariableCount = missingOutputVariables.length;\n      missingOutputContractIdsCount = missingOutputContractIds.length;\n\n      if (missingOutputVariableCount === 0 && missingOutputContractIdsCount === 0) {\n        return;\n      }\n\n      if (txRequest instanceof ScriptTransactionRequest) {\n        txRequest.addVariableOutputs(missingOutputVariableCount);\n\n        missingOutputContractIds.forEach(({ contractId }) =>\n          txRequest.addContractInputAndOutput(Address.fromString(contractId))\n        );\n      }\n\n      tries += 1;\n    } while (tries < MAX_RETRIES);\n  }\n\n  /**\n   * Executes a signed transaction without applying the states changes\n   * on the chain.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @returns A promise that resolves to the call result object.\n   */\n  async simulate(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true }: EstimateTransactionParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.estimateTxDependencies(transactionRequest);\n    }\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const { dryRun: gqlReceipts } = await this.operations.dryRun({\n      encodedTransaction,\n      utxoValidation: true,\n    });\n    const receipts = gqlReceipts.map(processGqlReceipt);\n    return {\n      receipts,\n    };\n  }\n\n  /**\n   * Returns a transaction cost to enable user\n   * to set gasLimit and also reserve balance amounts\n   * on the the transaction.\n   *\n   * @privateRemarks\n   * The tolerance is add on top of the gasUsed calculated\n   * from the node, this create a safe margin costs like\n   * change states on transfer that don't occur on the dryRun\n   * transaction. The default value is 0.2 or 20%\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @param tolerance - The tolerance to add on top of the gasUsed.\n   * @returns A promise that resolves to the transaction cost object.\n   */\n  async getTransactionCost(\n    transactionRequestLike: TransactionRequestLike,\n    forwardingQuantities: CoinQuantity[] = [],\n    { estimateTxDependencies = true, estimatePredicates = true }: TransactionCostParams = {}\n  ): Promise<TransactionCost> {\n    const transactionRequest = transactionRequestify(clone(transactionRequestLike));\n    const chainInfo = this.getChain();\n    const { gasPriceFactor, minGasPrice, maxGasPerTx } = this.getGasConfig();\n    const gasPrice = max(transactionRequest.gasPrice, minGasPrice);\n    const isScriptTransaction = transactionRequest.type === TransactionType.Script;\n\n    /**\n     * Estimate predicates gasUsed\n     */\n    if (transactionRequest.hasPredicateInput() && estimatePredicates) {\n      // Remove gasLimit to avoid gasLimit when estimating predicates\n      if (isScriptTransaction) {\n        transactionRequest.gasLimit = bn(0);\n      }\n      await this.estimatePredicates(transactionRequest);\n    }\n\n    /**\n     * Calculate minGas and maxGas based on the real transaction\n     */\n    const minGas = transactionRequest.calculateMinGas(chainInfo);\n    const maxGas = transactionRequest.calculateMaxGas(chainInfo, minGas);\n\n    /**\n     * Fund with fake UTXOs to avoid not enough funds error\n     */\n    // Getting coin quantities from amounts being transferred\n    const coinOutputsQuantities = transactionRequest.getCoinOutputsQuantities();\n    // Combining coin quantities from amounts being transferred and forwarding to contracts\n    const allQuantities = mergeQuantities(coinOutputsQuantities, forwardingQuantities);\n    // Funding transaction with fake utxos\n    transactionRequest.fundWithFakeUtxos(allQuantities);\n\n    /**\n     * Estimate gasUsed for script transactions\n     */\n\n    let gasUsed = minGas;\n    let receipts: TransactionResultReceipt[] = [];\n    // Transactions of type Create does not consume any gas so we can the dryRun\n    if (isScriptTransaction) {\n      /**\n       * Setting the gasPrice to 0 on a dryRun will result in no fees being charged.\n       * This simplifies the funding with fake utxos, since the coin quantities required\n       * will only be amounts being transferred (coin outputs) and amounts being forwarded\n       * to contract calls.\n       */\n      // Calculate the gasLimit again as we insert a fake UTXO and signer\n\n      transactionRequest.gasPrice = bn(0);\n      transactionRequest.gasLimit = bn(maxGasPerTx.sub(maxGas).toNumber() * 0.9);\n      // Executing dryRun with fake utxos to get gasUsed\n      const result = await this.call(transactionRequest, {\n        estimateTxDependencies,\n      });\n      receipts = result.receipts;\n      gasUsed = getGasUsedFromReceipts(receipts);\n    } else {\n      // For CreateTransaction the gasUsed is going to be the minGas\n      gasUsed = minGas;\n    }\n\n    const usedFee = calculatePriceWithFactor(\n      gasUsed,\n      gasPrice,\n      gasPriceFactor\n    ).normalizeZeroToOne();\n    const minFee = calculatePriceWithFactor(minGas, gasPrice, gasPriceFactor).normalizeZeroToOne();\n    const maxFee = calculatePriceWithFactor(maxGas, gasPrice, gasPriceFactor).normalizeZeroToOne();\n\n    return {\n      requiredQuantities: allQuantities,\n      receipts,\n      gasUsed,\n      minGasPrice,\n      gasPrice,\n      minGas,\n      maxGas,\n      usedFee,\n      minFee,\n      maxFee,\n    };\n  }\n\n  async getResourcesForTransaction(\n    owner: AbstractAddress,\n    transactionRequestLike: TransactionRequestLike,\n    forwardingQuantities: CoinQuantity[] = []\n  ) {\n    const transactionRequest = transactionRequestify(clone(transactionRequestLike));\n    const transactionCost = await this.getTransactionCost(transactionRequest, forwardingQuantities);\n\n    // Add the required resources to the transaction from the owner\n    transactionRequest.addResources(\n      await this.getResourcesToSpend(owner, transactionCost.requiredQuantities)\n    );\n    // Refetch transaction costs with the new resources\n    // TODO: we could find a way to avoid fetch estimatePredicates again, by returning the transaction or\n    // returning a specific gasUsed by the predicate.\n    // Also for the dryRun we could have the same issue as we are going to run twice the dryRun and the\n    // estimateTxDependencies as we don't have access to the transaction, maybe returning the transaction would\n    // be better.\n    const { requiredQuantities, ...txCost } = await this.getTransactionCost(\n      transactionRequest,\n      forwardingQuantities\n    );\n    const resources = await this.getResourcesToSpend(owner, requiredQuantities);\n\n    return {\n      resources,\n      requiredQuantities,\n      ...txCost,\n    };\n  }\n\n  /**\n   * Returns coins for the given owner.\n   */\n  async getCoins(\n    /** The address to get coins for */\n    owner: AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId?: BytesLike,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<Coin[]> {\n    const result = await this.operations.getCoins({\n      first: 10,\n      ...paginationArgs,\n      filter: { owner: owner.toB256(), assetId: assetId && hexlify(assetId) },\n    });\n\n    const coins = result.coins.edges.map((edge) => edge.node);\n\n    return coins.map((coin) => ({\n      id: coin.utxoId,\n      assetId: coin.assetId,\n      amount: bn(coin.amount),\n      owner: Address.fromAddressOrString(coin.owner),\n      maturity: bn(coin.maturity).toNumber(),\n      blockCreated: bn(coin.blockCreated),\n      txCreatedIdx: bn(coin.txCreatedIdx),\n    }));\n  }\n\n  /**\n   * Returns resources for the given owner satisfying the spend query.\n   *\n   * @param owner - The address to get resources for.\n   * @param quantities - The quantities to get.\n   * @param excludedIds - IDs of excluded resources from the selection.\n   * @returns A promise that resolves to the resources.\n   */\n  async getResourcesToSpend(\n    /** The address to get coins for */\n    owner: AbstractAddress,\n    /** The quantities to get */\n    quantities: CoinQuantityLike[],\n    /** IDs of excluded resources from the selection. */\n    excludedIds?: ExcludeResourcesOption\n  ): Promise<Resource[]> {\n    const excludeInput = {\n      messages: excludedIds?.messages?.map((nonce) => hexlify(nonce)) || [],\n      utxos: excludedIds?.utxos?.map((id) => hexlify(id)) || [],\n    };\n\n    if (this.cache) {\n      const uniqueUtxos = new Set(\n        excludeInput.utxos.concat(this.cache?.getActiveData().map((id) => hexlify(id)))\n      );\n      excludeInput.utxos = Array.from(uniqueUtxos);\n    }\n    const coinsQuery = {\n      owner: owner.toB256(),\n      queryPerAsset: quantities\n        .map(coinQuantityfy)\n        .map(({ assetId, amount, max: maxPerAsset }) => ({\n          assetId: hexlify(assetId),\n          amount: amount.toString(10),\n          max: maxPerAsset ? maxPerAsset.toString(10) : undefined,\n        })),\n      excludedIds: excludeInput,\n    };\n\n    const result = await this.operations.getCoinsToSpend(coinsQuery);\n\n    const coins = result.coinsToSpend\n      .flat()\n      .map((coin) => {\n        switch (coin.__typename) {\n          case 'MessageCoin':\n            return {\n              amount: bn(coin.amount),\n              assetId: coin.assetId,\n              daHeight: bn(coin.daHeight),\n              sender: Address.fromAddressOrString(coin.sender),\n              recipient: Address.fromAddressOrString(coin.recipient),\n              nonce: coin.nonce,\n            } as MessageCoin;\n          case 'Coin':\n            return {\n              id: coin.utxoId,\n              amount: bn(coin.amount),\n              assetId: coin.assetId,\n              owner: Address.fromAddressOrString(coin.owner),\n              maturity: bn(coin.maturity).toNumber(),\n              blockCreated: bn(coin.blockCreated),\n              txCreatedIdx: bn(coin.txCreatedIdx),\n            } as Coin;\n          default:\n            return null;\n        }\n      })\n      .filter((v) => !!v) as Array<Resource>;\n\n    return coins;\n  }\n\n  /**\n   * Returns block matching the given ID or height.\n   *\n   * @param idOrHeight - ID or height of the block.\n   * @returns A promise that resolves to the block.\n   */\n  async getBlock(\n    /** ID or height of the block */\n    idOrHeight: string | number | 'latest'\n  ): Promise<Block | null> {\n    let variables;\n    if (typeof idOrHeight === 'number') {\n      variables = { height: bn(idOrHeight).toString(10) };\n    } else if (idOrHeight === 'latest') {\n      variables = { height: (await this.getBlockNumber()).toString(10) };\n    } else if (idOrHeight.length === 66) {\n      variables = { blockId: idOrHeight };\n    } else {\n      variables = { blockId: bn(idOrHeight).toString(10) };\n    }\n\n    const { block } = await this.operations.getBlock(variables);\n\n    if (!block) {\n      return null;\n    }\n\n    return {\n      id: block.id,\n      height: bn(block.header.height),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n    };\n  }\n\n  /**\n   * Returns all the blocks matching the given parameters.\n   *\n   * @param params - The parameters to query blocks.\n   * @returns A promise that resolves to the blocks.\n   */\n  async getBlocks(params: GqlGetBlocksQueryVariables): Promise<Block[]> {\n    const { blocks: fetchedData } = await this.operations.getBlocks(params);\n\n    const blocks: Block[] = fetchedData.edges.map(({ node: block }) => ({\n      id: block.id,\n      height: bn(block.header.height),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n    }));\n\n    return blocks;\n  }\n\n  /**\n   * Returns block matching the given ID or type, including transaction data.\n   *\n   * @param idOrHeight - ID or height of the block.\n   * @returns A promise that resolves to the block.\n   */\n  async getBlockWithTransactions(\n    /** ID or height of the block */\n    idOrHeight: string | number | 'latest'\n  ): Promise<(Block & { transactions: Transaction[] }) | null> {\n    let variables;\n    if (typeof idOrHeight === 'number') {\n      variables = { blockHeight: bn(idOrHeight).toString(10) };\n    } else if (idOrHeight === 'latest') {\n      variables = { blockHeight: (await this.getBlockNumber()).toString() };\n    } else {\n      variables = { blockId: idOrHeight };\n    }\n\n    const { block } = await this.operations.getBlockWithTransactions(variables);\n\n    if (!block) {\n      return null;\n    }\n\n    return {\n      id: block.id,\n      height: bn(block.header.height, 10),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n      transactions: block.transactions.map(\n        (tx) => new TransactionCoder().decode(getBytesCopy(tx.rawPayload), 0)?.[0]\n      ),\n    };\n  }\n\n  /**\n   * Get transaction with the given ID.\n   *\n   * @param transactionId - ID of the transaction.\n   * @returns A promise that resolves to the transaction.\n   */\n  async getTransaction<TTransactionType = void>(\n    transactionId: string\n  ): Promise<Transaction<TTransactionType> | null> {\n    const { transaction } = await this.operations.getTransaction({ transactionId });\n    if (!transaction) {\n      return null;\n    }\n    return new TransactionCoder().decode(\n      getBytesCopy(transaction.rawPayload),\n      0\n    )?.[0] as Transaction<TTransactionType>;\n  }\n\n  /**\n   * Get deployed contract with the given ID.\n   *\n   * @param contractId - ID of the contract.\n   * @returns A promise that resolves to the contract.\n   */\n  async getContract(contractId: string): Promise<ContractResult | null> {\n    const { contract } = await this.operations.getContract({ contractId });\n    if (!contract) {\n      return null;\n    }\n    return contract;\n  }\n\n  /**\n   * Returns the balance for the given contract for the given asset ID.\n   *\n   * @param contractId - The contract ID to get the balance for.\n   * @param assetId - The asset ID of coins to get.\n   * @returns A promise that resolves to the balance.\n   */\n  async getContractBalance(\n    /** The contract ID to get the balance for */\n    contractId: AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId: BytesLike\n  ): Promise<BN> {\n    const { contractBalance } = await this.operations.getContractBalance({\n      contract: contractId.toB256(),\n      asset: hexlify(assetId),\n    });\n    return bn(contractBalance.amount, 10);\n  }\n\n  /**\n   * Returns the balance for the given owner for the given asset ID.\n   *\n   * @param owner - The address to get coins for.\n   * @param assetId - The asset ID of coins to get.\n   * @returns A promise that resolves to the balance.\n   */\n  async getBalance(\n    /** The address to get coins for */\n    owner: AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId: BytesLike\n  ): Promise<BN> {\n    const { balance } = await this.operations.getBalance({\n      owner: owner.toB256(),\n      assetId: hexlify(assetId),\n    });\n    return bn(balance.amount, 10);\n  }\n\n  /**\n   * Returns balances for the given owner.\n   *\n   * @param owner - The address to get coins for.\n   * @param paginationArgs - Pagination arguments.\n   * @returns A promise that resolves to the balances.\n   */\n  async getBalances(\n    /** The address to get coins for */\n    owner: AbstractAddress,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<CoinQuantity[]> {\n    const result = await this.operations.getBalances({\n      first: 10,\n      ...paginationArgs,\n      filter: { owner: owner.toB256() },\n    });\n\n    const balances = result.balances.edges.map((edge) => edge.node);\n\n    return balances.map((balance) => ({\n      assetId: balance.assetId,\n      amount: bn(balance.amount),\n    }));\n  }\n\n  /**\n   * Returns message for the given address.\n   *\n   * @param address - The address to get message from.\n   * @param paginationArgs - Pagination arguments.\n   * @returns A promise that resolves to the messages.\n   */\n  async getMessages(\n    /** The address to get message from */\n    address: AbstractAddress,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<Message[]> {\n    const result = await this.operations.getMessages({\n      first: 10,\n      ...paginationArgs,\n      owner: address.toB256(),\n    });\n\n    const messages = result.messages.edges.map((edge) => edge.node);\n\n    return messages.map((message) => ({\n      messageId: InputMessageCoder.getMessageId({\n        sender: message.sender,\n        recipient: message.recipient,\n        nonce: message.nonce,\n        amount: bn(message.amount),\n        data: message.data,\n      }),\n      sender: Address.fromAddressOrString(message.sender),\n      recipient: Address.fromAddressOrString(message.recipient),\n      nonce: message.nonce,\n      amount: bn(message.amount),\n      data: InputMessageCoder.decodeData(message.data),\n      daHeight: bn(message.daHeight),\n    }));\n  }\n\n  /**\n   * Returns Message Proof for given transaction id and the message id from MessageOut receipt.\n   *\n   * @param transactionId - The transaction to get message from.\n   * @param messageId - The message id from MessageOut receipt.\n   * @param commitBlockId - The commit block id.\n   * @param commitBlockHeight - The commit block height.\n   * @returns A promise that resolves to the message proof.\n   */\n  async getMessageProof(\n    /** The transaction to get message from */\n    transactionId: string,\n    nonce: string,\n    commitBlockId?: string,\n    commitBlockHeight?: BN\n  ): Promise<MessageProof | null> {\n    let inputObject: {\n      /** The transaction to get message from */\n      transactionId: string;\n      /** The message id from MessageOut receipt */\n      nonce: string;\n      commitBlockId?: string;\n      commitBlockHeight?: string;\n    } = {\n      transactionId,\n      nonce,\n    };\n\n    if (commitBlockId && commitBlockHeight) {\n      throw new FuelError(\n        ErrorCode.INVALID_INPUT_PARAMETERS,\n        'commitBlockId and commitBlockHeight cannot be used together'\n      );\n    }\n\n    if (commitBlockId) {\n      inputObject = {\n        ...inputObject,\n        commitBlockId,\n      };\n    }\n\n    if (commitBlockHeight) {\n      inputObject = {\n        ...inputObject,\n        // Conver BN into a number string required on the query\n        // This should problably be fixed on the fuel client side\n        commitBlockHeight: commitBlockHeight.toNumber().toString(),\n      };\n    }\n\n    const result = await this.operations.getMessageProof(inputObject);\n\n    if (!result.messageProof) {\n      return null;\n    }\n\n    const {\n      messageProof,\n      messageBlockHeader,\n      commitBlockHeader,\n      blockProof,\n      sender,\n      recipient,\n      amount,\n      data,\n    } = result.messageProof;\n\n    return {\n      messageProof: {\n        proofIndex: bn(messageProof.proofIndex),\n        proofSet: messageProof.proofSet,\n      },\n      blockProof: {\n        proofIndex: bn(blockProof.proofIndex),\n        proofSet: blockProof.proofSet,\n      },\n      messageBlockHeader: {\n        id: messageBlockHeader.id,\n        daHeight: bn(messageBlockHeader.daHeight),\n        transactionsCount: bn(messageBlockHeader.transactionsCount),\n        transactionsRoot: messageBlockHeader.transactionsRoot,\n        height: bn(messageBlockHeader.height),\n        prevRoot: messageBlockHeader.prevRoot,\n        time: messageBlockHeader.time,\n        applicationHash: messageBlockHeader.applicationHash,\n        messageReceiptRoot: messageBlockHeader.messageReceiptRoot,\n        messageReceiptCount: bn(messageBlockHeader.messageReceiptCount),\n      },\n      commitBlockHeader: {\n        id: commitBlockHeader.id,\n        daHeight: bn(commitBlockHeader.daHeight),\n        transactionsCount: bn(commitBlockHeader.transactionsCount),\n        transactionsRoot: commitBlockHeader.transactionsRoot,\n        height: bn(commitBlockHeader.height),\n        prevRoot: commitBlockHeader.prevRoot,\n        time: commitBlockHeader.time,\n        applicationHash: commitBlockHeader.applicationHash,\n        messageReceiptRoot: commitBlockHeader.messageReceiptRoot,\n        messageReceiptCount: bn(commitBlockHeader.messageReceiptCount),\n      },\n      sender: Address.fromAddressOrString(sender),\n      recipient: Address.fromAddressOrString(recipient),\n      nonce,\n      amount: bn(amount),\n      data,\n    };\n  }\n\n  /**\n   * Returns Message Proof for given transaction id and the message id from MessageOut receipt.\n   *\n   * @param nonce - The nonce of the message to get status from.\n   * @returns A promise that resolves to the message status\n   */\n  async getMessageStatus(\n    /** The nonce of the message to get status from */\n    nonce: string\n  ): Promise<MessageStatus> {\n    const result = await this.operations.getMessageStatus({ nonce });\n    return result.messageStatus;\n  }\n\n  /**\n   * Lets you produce blocks with custom timestamps and the block number of the last block produced.\n   *\n   * @param amount - The amount of blocks to produce\n   * @param startTime - The UNIX timestamp to set for the first produced block\n   * @returns A promise that resolves to the block number of the last produced block.\n   */\n  async produceBlocks(amount: number, startTime?: number) {\n    const { produceBlocks: latestBlockHeight } = await this.operations.produceBlocks({\n      blocksToProduce: bn(amount).toString(10),\n      startTimestamp: startTime ? fromUnixToTai64(startTime) : undefined,\n    });\n    return bn(latestBlockHeight);\n  }\n}\n","let wasm$1;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); }\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm$1.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n*Adds two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction add(dst, lhs, rhs) {\n    const ret = wasm$1.add(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ANDs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction and(dst, lhs, rhs) {\n    const ret = wasm$1.and(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divides two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction div(dst, lhs, rhs) {\n    const ret = wasm$1.div(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for equality.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction eq(dst, lhs, rhs) {\n    const ret = wasm$1.eq(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Raises one register to the power of another.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction exp(dst, lhs, rhs) {\n    const ret = wasm$1.exp(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for greater-than.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction gt(dst, lhs, rhs) {\n    const ret = wasm$1.gt(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for less-than.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction lt(dst, lhs, rhs) {\n    const ret = wasm$1.lt(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The integer logarithm of a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mlog(dst, lhs, rhs) {\n    const ret = wasm$1.mlog(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The integer root of a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mroo(dst, lhs, rhs) {\n    const ret = wasm$1.mroo(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Modulo remainder of two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mod_(dst, lhs, rhs) {\n    const ret = wasm$1.mod_(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy from one register to another.\n* @param {number} dst\n* @param {number} src\n* @returns {Instruction}\n*/\nfunction move_(dst, src) {\n    const ret = wasm$1.move_(dst, src);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiplies two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mul(dst, lhs, rhs) {\n    const ret = wasm$1.mul(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise NOT a register.\n* @param {number} dst\n* @param {number} arg\n* @returns {Instruction}\n*/\nfunction not(dst, arg) {\n    const ret = wasm$1.not(dst, arg);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ORs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction or(dst, lhs, rhs) {\n    const ret = wasm$1.or(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Left shifts a register by a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction sll(dst, lhs, rhs) {\n    const ret = wasm$1.sll(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Right shifts a register by a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction srl(dst, lhs, rhs) {\n    const ret = wasm$1.srl(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Subtracts two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction sub(dst, lhs, rhs) {\n    const ret = wasm$1.sub(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise XORs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction xor(dst, lhs, rhs) {\n    const ret = wasm$1.xor(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide with arbitrary precision intermediate step.\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction mldv(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.mldv(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Return from context.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction ret(value) {\n    const ret = wasm$1.ret(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Return from context with data.\n* @param {number} addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction retd(addr, len) {\n    const ret = wasm$1.retd(addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Allocate a number of bytes from the heap.\n* @param {number} bytes\n* @returns {Instruction}\n*/\nfunction aloc(bytes) {\n    const ret = wasm$1.aloc(bytes);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear a variable number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcl(dst_addr, len) {\n    const ret = wasm$1.mcl(dst_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy a variable number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcp(dst_addr, src_addr, len) {\n    const ret = wasm$1.mcp(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare bytes in memory.\n* @param {number} result\n* @param {number} lhs_addr\n* @param {number} rhs_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction meq(result, lhs_addr, rhs_addr, len) {\n    const ret = wasm$1.meq(result, lhs_addr, rhs_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get block header hash for height.\n* @param {number} dst\n* @param {number} heigth\n* @returns {Instruction}\n*/\nfunction bhsh(dst, heigth) {\n    const ret = wasm$1.bhsh(dst, heigth);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get current block height.\n* @param {number} dst\n* @returns {Instruction}\n*/\nfunction bhei(dst) {\n    const ret = wasm$1.bhei(dst);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Burns `amount` coins of the asset ID created from `sub_id` for the current contract.\n* @param {number} amount\n* @param {number} sub_id_addr\n* @returns {Instruction}\n*/\nfunction burn(amount, sub_id_addr) {\n    const ret = wasm$1.burn(amount, sub_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Call a contract.\n* @param {number} target_struct\n* @param {number} fwd_coins\n* @param {number} asset_id_addr\n* @param {number} fwd_gas\n* @returns {Instruction}\n*/\nfunction call(target_struct, fwd_coins, asset_id_addr, fwd_gas) {\n    const ret = wasm$1.call(target_struct, fwd_coins, asset_id_addr, fwd_gas);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy contract code for a contract.\n* @param {number} dst_addr\n* @param {number} contract_id_addr\n* @param {number} offset\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction ccp(dst_addr, contract_id_addr, offset, len) {\n    const ret = wasm$1.ccp(dst_addr, contract_id_addr, offset, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get code root of a contract.\n* @param {number} dst_addr\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction croo(dst_addr, contract_id_addr) {\n    const ret = wasm$1.croo(dst_addr, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get code size of a contract.\n* @param {number} dst\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction csiz(dst, contract_id_addr) {\n    const ret = wasm$1.csiz(dst, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get current block proposer's address.\n* @param {number} dst\n* @returns {Instruction}\n*/\nfunction cb(dst) {\n    const ret = wasm$1.cb(dst);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a contract's code as executable.\n* @param {number} contract_id_addr\n* @param {number} offset\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction ldc(contract_id_addr, offset, len) {\n    const ret = wasm$1.ldc(contract_id_addr, offset, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Log an event.\n* @param {number} a\n* @param {number} b\n* @param {number} c\n* @param {number} d\n* @returns {Instruction}\n*/\nfunction log(a, b, c, d) {\n    const ret = wasm$1.log(a, b, c, d);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Log data.\n* @param {number} a\n* @param {number} b\n* @param {number} addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction logd(a, b, addr, len) {\n    const ret = wasm$1.logd(a, b, addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Mints `amount` coins of the asset ID created from `sub_id` for the current contract.\n* @param {number} amount\n* @param {number} sub_id_addr\n* @returns {Instruction}\n*/\nfunction mint(amount, sub_id_addr) {\n    const ret = wasm$1.mint(amount, sub_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Halt execution, reverting state changes and returning a value.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction rvrt(value) {\n    const ret = wasm$1.rvrt(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear a series of slots from contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction scwq(key_addr, status, lenq) {\n    const ret = wasm$1.scwq(key_addr, status, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a word from contract storage.\n* @param {number} dst\n* @param {number} status\n* @param {number} key_addr\n* @returns {Instruction}\n*/\nfunction srw(dst, status, key_addr) {\n    const ret = wasm$1.srw(dst, status, key_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a series of 32 byte slots from contract storage.\n* @param {number} dst_addr\n* @param {number} status\n* @param {number} key_addr\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction srwq(dst_addr, status, key_addr, lenq) {\n    const ret = wasm$1.srwq(dst_addr, status, key_addr, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Store a word in contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction sww(key_addr, status, value) {\n    const ret = wasm$1.sww(key_addr, status, value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Store a series of 32 byte slots in contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} src_addr\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction swwq(key_addr, status, src_addr, lenq) {\n    const ret = wasm$1.swwq(key_addr, status, src_addr, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Transfer coins to a contract unconditionally.\n* @param {number} contract_id_addr\n* @param {number} amount\n* @param {number} asset_id_addr\n* @returns {Instruction}\n*/\nfunction tr(contract_id_addr, amount, asset_id_addr) {\n    const ret = wasm$1.tr(contract_id_addr, amount, asset_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Transfer coins to a variable output.\n* @param {number} contract_id_addr\n* @param {number} output_index\n* @param {number} amount\n* @param {number} asset_id_addr\n* @returns {Instruction}\n*/\nfunction tro(contract_id_addr, output_index, amount, asset_id_addr) {\n    const ret = wasm$1.tro(contract_id_addr, output_index, amount, asset_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The 64-byte public key (x, y) recovered from 64-byte signature on 32-byte message.\n* @param {number} dst_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction eck1(dst_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.eck1(dst_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The 64-byte Secp256r1 public key (x, y) recovered from 64-byte signature on 32-byte message.\n* @param {number} dst_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction ecr1(dst_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.ecr1(dst_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Verify ED25519 public key and signature match a 32-byte message.\n* @param {number} pub_key_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction ed19(pub_key_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.ed19(pub_key_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The keccak-256 hash of a slice.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction k256(dst_addr, src_addr, len) {\n    const ret = wasm$1.k256(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The SHA-2-256 hash of a slice.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction s256(dst_addr, src_addr, len) {\n    const ret = wasm$1.s256(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get timestamp of block at given height.\n* @param {number} dst\n* @param {number} heigth\n* @returns {Instruction}\n*/\nfunction time(dst, heigth) {\n    const ret = wasm$1.time(dst, heigth);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Performs no operation.\n* @returns {Instruction}\n*/\nfunction noop() {\n    const ret = wasm$1.noop();\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Set flag register to a register.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction flag(value) {\n    const ret = wasm$1.flag(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get the balance of contract of an asset ID.\n* @param {number} dst\n* @param {number} asset_id_addr\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction bal(dst, asset_id_addr, contract_id_addr) {\n    const ret = wasm$1.bal(dst, asset_id_addr, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic jump.\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jmp(abs_target) {\n    const ret = wasm$1.jmp(abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional dynamic jump.\n* @param {number} abs_target\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction jne(abs_target, lhs, rhs) {\n    const ret = wasm$1.jne(abs_target, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Send a message to recipient address with call abi, coins, and output.\n* @param {number} recipient_addr\n* @param {number} data_addr\n* @param {number} data_len\n* @param {number} coins\n* @returns {Instruction}\n*/\nfunction smo(recipient_addr, data_addr, data_len, coins) {\n    const ret = wasm$1.smo(recipient_addr, data_addr, data_len, coins);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Adds a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction addi(dst, lhs, rhs) {\n    const ret = wasm$1.addi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ANDs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction andi(dst, lhs, rhs) {\n    const ret = wasm$1.andi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divides a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction divi(dst, lhs, rhs) {\n    const ret = wasm$1.divi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Raises one register to the power of an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction expi(dst, lhs, rhs) {\n    const ret = wasm$1.expi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Modulo remainder of a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction modi(dst, lhs, rhs) {\n    const ret = wasm$1.modi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiplies a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction muli(dst, lhs, rhs) {\n    const ret = wasm$1.muli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ORs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction ori(dst, lhs, rhs) {\n    const ret = wasm$1.ori(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Left shifts a register by an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction slli(dst, lhs, rhs) {\n    const ret = wasm$1.slli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Right shifts a register by an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction srli(dst, lhs, rhs) {\n    const ret = wasm$1.srli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Subtracts a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction subi(dst, lhs, rhs) {\n    const ret = wasm$1.subi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise XORs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction xori(dst, lhs, rhs) {\n    const ret = wasm$1.xori(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional jump.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jnei(cond_lhs, cond_rhs, abs_target) {\n    const ret = wasm$1.jnei(cond_lhs, cond_rhs, abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*A byte is loaded from the specified address offset by an immediate value.\n* @param {number} dst\n* @param {number} addr\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction lb(dst, addr, offset) {\n    const ret = wasm$1.lb(dst, addr, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*A word is loaded from the specified address offset by an immediate value.\n* @param {number} dst\n* @param {number} addr\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction lw(dst, addr, offset) {\n    const ret = wasm$1.lw(dst, addr, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Write the least significant byte of a register to memory.\n* @param {number} addr\n* @param {number} value\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction sb(addr, value, offset) {\n    const ret = wasm$1.sb(addr, value, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Write a register to memory.\n* @param {number} addr\n* @param {number} value\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction sw(addr, value, offset) {\n    const ret = wasm$1.sw(addr, value, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy an immediate number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcpi(dst_addr, src_addr, len) {\n    const ret = wasm$1.mcpi(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get transaction fields.\n* @param {number} dst\n* @param {number} arg\n* @param {number} selector\n* @returns {Instruction}\n*/\nfunction gtf(dst, arg, selector) {\n    const ret = wasm$1.gtf(dst, arg, selector);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear an immediate number of bytes in memory.\n* @param {number} addr\n* @param {number} count\n* @returns {Instruction}\n*/\nfunction mcli(addr, count) {\n    const ret = wasm$1.mcli(addr, count);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get metadata from memory.\n* @param {number} dst\n* @param {number} selector\n* @returns {Instruction}\n*/\nfunction gm(dst, selector) {\n    const ret = wasm$1.gm(dst, selector);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy immediate value into a register\n* @param {number} dst\n* @param {number} val\n* @returns {Instruction}\n*/\nfunction movi(dst, val) {\n    const ret = wasm$1.movi(dst, val);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional jump against zero.\n* @param {number} cond_nz\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jnzi(cond_nz, abs_target) {\n    const ret = wasm$1.jnzi(cond_nz, abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Unconditional dynamic relative jump forwards, with a constant offset.\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jmpf(dynamic, fixed) {\n    const ret = wasm$1.jmpf(dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Unconditional dynamic relative jump backwards, with a constant offset.\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jmpb(dynamic, fixed) {\n    const ret = wasm$1.jmpb(dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump forwards, conditional against zero, with a constant offset.\n* @param {number} cond_nz\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnzf(cond_nz, dynamic, fixed) {\n    const ret = wasm$1.jnzf(cond_nz, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump backwards, conditional against zero, with a constant offset.\n* @param {number} cond_nz\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnzb(cond_nz, dynamic, fixed) {\n    const ret = wasm$1.jnzb(cond_nz, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump forwards, conditional on comparsion, with a constant offset.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnef(cond_lhs, cond_rhs, dynamic, fixed) {\n    const ret = wasm$1.jnef(cond_lhs, cond_rhs, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump backwards, conditional on comparsion, with a constant offset.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jneb(cond_lhs, cond_rhs, dynamic, fixed) {\n    const ret = wasm$1.jneb(cond_lhs, cond_rhs, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Jump.\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction ji(abs_target) {\n    const ret = wasm$1.ji(abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Extend the current call frame's stack by an immediate value.\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfei(amount) {\n    const ret = wasm$1.cfei(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Shrink the current call frame's stack by an immediate value.\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfsi(amount) {\n    const ret = wasm$1.cfsi(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Extend the current call frame's stack\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfe(amount) {\n    const ret = wasm$1.cfe(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Shrink the current call frame's stack\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfs(amount) {\n    const ret = wasm$1.cfs(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Push a bitmask-selected set of registers in range 16..40 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction pshl(bitmask) {\n    const ret = wasm$1.pshl(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Push a bitmask-selected set of registers in range 40..64 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction pshh(bitmask) {\n    const ret = wasm$1.pshh(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Pop a bitmask-selected set of registers in range 16..40 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction popl(bitmask) {\n    const ret = wasm$1.popl(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Pop a bitmask-selected set of registers in range 40..64 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction poph(bitmask) {\n    const ret = wasm$1.poph(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare 128bit integers\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdcm(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdcm(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare 256bit integers\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqcm(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqcm(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Simple 128bit operations\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdop(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdop(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Simple 256bit operations\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqop(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqop(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiply 128bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdml(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdml(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiply 256bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqml(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqml(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divide 128bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wddv(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wddv(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divide 256bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqdv(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqdv(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide 128bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction wdmd(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.wdmd(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide 256bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction wqmd(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.wqmd(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*AddMod 128bit\n* @param {number} dst\n* @param {number} add_lhs\n* @param {number} add_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wdam(dst, add_lhs, add_rhs, modulo) {\n    const ret = wasm$1.wdam(dst, add_lhs, add_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*AddMod 256bit\n* @param {number} dst\n* @param {number} add_lhs\n* @param {number} add_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wqam(dst, add_lhs, add_rhs, modulo) {\n    const ret = wasm$1.wqam(dst, add_lhs, add_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*MulMod 128bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wdmm(dst, mul_lhs, mul_rhs, modulo) {\n    const ret = wasm$1.wdmm(dst, mul_lhs, mul_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*MulMod 256bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wqmm(dst, mul_lhs, mul_rhs, modulo) {\n    const ret = wasm$1.wqmm(dst, mul_lhs, mul_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Call external function\n* @param {number} a\n* @param {number} b\n* @param {number} c\n* @param {number} d\n* @returns {Instruction}\n*/\nfunction ecal(a, b, c, d) {\n    const ret = wasm$1.ecal(a, b, c, d);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `GM` instruction from its arguments.\n* @param {number} ra\n* @param {GMArgs} args\n* @returns {Instruction}\n*/\nfunction gm_args(ra, args) {\n    const ret = wasm$1.gm_args(ra, args);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `GM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {GTFArgs} args\n* @returns {Instruction}\n*/\nfunction gtf_args(ra, rb, args) {\n    const ret = wasm$1.gtf_args(ra, rb, args);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDCM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {CompareArgs} args\n* @returns {Instruction}\n*/\nfunction wdcm_args(ra, rb, rc, args) {\n    _assertClass(args, CompareArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdcm_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQCM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {CompareArgs} args\n* @returns {Instruction}\n*/\nfunction wqcm_args(ra, rb, rc, args) {\n    _assertClass(args, CompareArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqcm_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDOP` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MathArgs} args\n* @returns {Instruction}\n*/\nfunction wdop_args(ra, rb, rc, args) {\n    _assertClass(args, MathArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdop_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQOP` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MathArgs} args\n* @returns {Instruction}\n*/\nfunction wqop_args(ra, rb, rc, args) {\n    _assertClass(args, MathArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqop_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDML` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MulArgs} args\n* @returns {Instruction}\n*/\nfunction wdml_args(ra, rb, rc, args) {\n    _assertClass(args, MulArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdml_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQML` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MulArgs} args\n* @returns {Instruction}\n*/\nfunction wqml_args(ra, rb, rc, args) {\n    _assertClass(args, MulArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqml_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDDV` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {DivArgs} args\n* @returns {Instruction}\n*/\nfunction wddv_args(ra, rb, rc, args) {\n    _assertClass(args, DivArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wddv_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQDV` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {DivArgs} args\n* @returns {Instruction}\n*/\nfunction wqdv_args(ra, rb, rc, args) {\n    _assertClass(args, DivArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqdv_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm$1.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*r\" Argument list for GM (get metadata) instruction\n*r\" The VM is the only who should match this struct, and it *MUST* always perform\n*r\" exhaustive match so all offered variants are covered.\n*/\nconst GMArgs = Object.freeze({\n/**\n*r\" Get if caller is external.\n*/\nIsCallerExternal:1,\"1\":\"IsCallerExternal\",\n/**\n*r\" Get caller's contract ID.\n*/\nGetCaller:2,\"2\":\"GetCaller\",\n/**\n*r\" Get index of current predicate.\n*/\nGetVerifyingPredicate:3,\"3\":\"GetVerifyingPredicate\",\n/**\n*r\" Get the Chain ID this VM is operating within\n*/\nGetChainId:4,\"4\":\"GetChainId\", });\n/**\n*r\" Argument list for GTF (get tx fields) instruction\n*r\" The VM is the only who should match this struct, and it *MUST* always perform\n*r\" exhaustive match so all offered variants are covered.\n*/\nconst GTFArgs = Object.freeze({\n/**\n*r\" Set `$rA` to `tx.type`\n*/\nType:1,\"1\":\"Type\",\n/**\n*r\" Set `$rA` to `tx.scriptGasLimit`\n*/\nScriptGasLimit:2,\"2\":\"ScriptGasLimit\",\n/**\n*r\" Set `$rA` to `tx.scriptLength`\n*/\nScriptLength:3,\"3\":\"ScriptLength\",\n/**\n*r\" Set `$rA` to `tx.scriptDataLength`\n*/\nScriptDataLength:4,\"4\":\"ScriptDataLength\",\n/**\n*r\" Set `$rA` to `tx.inputsCount`\n*/\nScriptInputsCount:5,\"5\":\"ScriptInputsCount\",\n/**\n*r\" Set `$rA` to `tx.outputsCount`\n*/\nScriptOutputsCount:6,\"6\":\"ScriptOutputsCount\",\n/**\n*r\" Set `$rA` to `tx.witnessesCount`\n*/\nScriptWitnessesCount:7,\"7\":\"ScriptWitnessesCount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.receiptsRoot`\n*/\nScriptReceiptsRoot:8,\"8\":\"ScriptReceiptsRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.script`\n*/\nScript:9,\"9\":\"Script\",\n/**\n*r\" Set `$rA` to `Memory address of tx.scriptData`\n*/\nScriptData:10,\"10\":\"ScriptData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB]`\n*/\nScriptInputAtIndex:11,\"11\":\"ScriptInputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of t.outputs[$rB]`\n*/\nScriptOutputAtIndex:12,\"12\":\"ScriptOutputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB]`\n*/\nScriptWitnessAtIndex:13,\"13\":\"ScriptWitnessAtIndex\",\n/**\n*r\" Set `$rA` to `tx.bytecodeLength`\n*/\nCreateBytecodeLength:256,\"256\":\"CreateBytecodeLength\",\n/**\n*r\" Set `$rA` to `tx.bytecodeWitnessIndex`\n*/\nCreateBytecodeWitnessIndex:257,\"257\":\"CreateBytecodeWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.storageSlotsCount`\n*/\nCreateStorageSlotsCount:258,\"258\":\"CreateStorageSlotsCount\",\n/**\n*r\" Set `$rA` to `tx.inputsCount`\n*/\nCreateInputsCount:259,\"259\":\"CreateInputsCount\",\n/**\n*r\" Set `$rA` to `tx.outputsCount`\n*/\nCreateOutputsCount:260,\"260\":\"CreateOutputsCount\",\n/**\n*r\" Set `$rA` to `tx.witnessesCount`\n*/\nCreateWitnessesCount:261,\"261\":\"CreateWitnessesCount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.salt`\n*/\nCreateSalt:262,\"262\":\"CreateSalt\",\n/**\n*r\" Set `$rA` to `Memory address of tx.storageSlots[$rB]`\n*/\nCreateStorageSlotAtIndex:263,\"263\":\"CreateStorageSlotAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB]`\n*/\nCreateInputAtIndex:264,\"264\":\"CreateInputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of t.outputs[$rB]`\n*/\nCreateOutputAtIndex:265,\"265\":\"CreateOutputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB]`\n*/\nCreateWitnessAtIndex:266,\"266\":\"CreateWitnessAtIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].type`\n*/\nInputType:512,\"512\":\"InputType\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txID`\n*/\nInputCoinTxId:513,\"513\":\"InputCoinTxId\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].outputIndex`\n*/\nInputCoinOutputIndex:514,\"514\":\"InputCoinOutputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].owner`\n*/\nInputCoinOwner:515,\"515\":\"InputCoinOwner\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].amount`\n*/\nInputCoinAmount:516,\"516\":\"InputCoinAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].asset_id`\n*/\nInputCoinAssetId:517,\"517\":\"InputCoinAssetId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txPointer`\n*/\nInputCoinTxPointer:518,\"518\":\"InputCoinTxPointer\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].witnessIndex`\n*/\nInputCoinWitnessIndex:519,\"519\":\"InputCoinWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].maturity`\n*/\nInputCoinMaturity:520,\"520\":\"InputCoinMaturity\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateLength`\n*/\nInputCoinPredicateLength:521,\"521\":\"InputCoinPredicateLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateDataLength`\n*/\nInputCoinPredicateDataLength:522,\"522\":\"InputCoinPredicateDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicate`\n*/\nInputCoinPredicate:523,\"523\":\"InputCoinPredicate\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateData`\n*/\nInputCoinPredicateData:524,\"524\":\"InputCoinPredicateData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateGasUsed`\n*/\nInputCoinPredicateGasUsed:525,\"525\":\"InputCoinPredicateGasUsed\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txID`\n*/\nInputContractTxId:544,\"544\":\"InputContractTxId\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].outputIndex`\n*/\nInputContractOutputIndex:545,\"545\":\"InputContractOutputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].balanceRoot`\n*/\nInputContractBalanceRoot:546,\"546\":\"InputContractBalanceRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].stateRoot`\n*/\nInputContractStateRoot:547,\"547\":\"InputContractStateRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txPointer`\n*/\nInputContractTxPointer:548,\"548\":\"InputContractTxPointer\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].contractID`\n*/\nInputContractId:549,\"549\":\"InputContractId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].sender`\n*/\nInputMessageSender:576,\"576\":\"InputMessageSender\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].recipient`\n*/\nInputMessageRecipient:577,\"577\":\"InputMessageRecipient\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].amount`\n*/\nInputMessageAmount:578,\"578\":\"InputMessageAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].nonce`\n*/\nInputMessageNonce:579,\"579\":\"InputMessageNonce\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].witnessIndex`\n*/\nInputMessageWitnessIndex:580,\"580\":\"InputMessageWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].dataLength`\n*/\nInputMessageDataLength:581,\"581\":\"InputMessageDataLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateLength`\n*/\nInputMessagePredicateLength:582,\"582\":\"InputMessagePredicateLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateDataLength`\n*/\nInputMessagePredicateDataLength:583,\"583\":\"InputMessagePredicateDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].data`\n*/\nInputMessageData:584,\"584\":\"InputMessageData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicate`\n*/\nInputMessagePredicate:585,\"585\":\"InputMessagePredicate\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateData`\n*/\nInputMessagePredicateData:586,\"586\":\"InputMessagePredicateData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateGasUsed`\n*/\nInputMessagePredicateGasUsed:587,\"587\":\"InputMessagePredicateGasUsed\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].type`\n*/\nOutputType:768,\"768\":\"OutputType\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].to`\n*/\nOutputCoinTo:769,\"769\":\"OutputCoinTo\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].amount`\n*/\nOutputCoinAmount:770,\"770\":\"OutputCoinAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].asset_id`\n*/\nOutputCoinAssetId:771,\"771\":\"OutputCoinAssetId\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].inputIndex`\n*/\nOutputContractInputIndex:772,\"772\":\"OutputContractInputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].balanceRoot`\n*/\nOutputContractBalanceRoot:773,\"773\":\"OutputContractBalanceRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].stateRoot`\n*/\nOutputContractStateRoot:774,\"774\":\"OutputContractStateRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].contractID`\n*/\nOutputContractCreatedContractId:775,\"775\":\"OutputContractCreatedContractId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].stateRoot`\n*/\nOutputContractCreatedStateRoot:776,\"776\":\"OutputContractCreatedStateRoot\",\n/**\n*r\" Set `$rA` to `tx.witnesses[$rB].dataLength`\n*/\nWitnessDataLength:1024,\"1024\":\"WitnessDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB].data`\n*/\nWitnessData:1025,\"1025\":\"WitnessData\",\n/**\n*r\" Set `$rA` to `tx.policyTypes`\n*/\nPolicyTypes:1280,\"1280\":\"PolicyTypes\",\n/**\n*r\" Set `$rA` to `tx.policies[0x00].gasPrice`\n*/\nPolicyGasPrice:1281,\"1281\":\"PolicyGasPrice\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b11 & tx.policyTypes) - 1].witnessLimit`\n*/\nPolicyWitnessLimit:1282,\"1282\":\"PolicyWitnessLimit\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b111 & tx.policyTypes) - 1].maturity`\n*/\nPolicyMaturity:1283,\"1283\":\"PolicyMaturity\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b1111 & tx.policyTypes) - 1].maxFee`\n*/\nPolicyMaxFee:1284,\"1284\":\"PolicyMaxFee\", });\n/**\n* Comparison mode used by WDCM and WQCM instructions.\n*/\nconst CompareMode = Object.freeze({\n/**\n* Equality (`==`)\n*/\nEQ:0,\"0\":\"EQ\",\n/**\n* Inequality (`!=`)\n*/\nNE:1,\"1\":\"NE\",\n/**\n* Less than (`<`)\n*/\nLT:2,\"2\":\"LT\",\n/**\n* Greater than (`>`)\n*/\nGT:3,\"3\":\"GT\",\n/**\n* Less than or equals (`>=`)\n*/\nLTE:4,\"4\":\"LTE\",\n/**\n* Greater than or equals (`>=`)\n*/\nGTE:5,\"5\":\"GTE\",\n/**\n* Number of leading zeroes in lhs (`lzcnt`) (discards rhs)\n*/\nLZC:6,\"6\":\"LZC\", });\n/**\n*r\" Panic reason representation for the interpreter.\n*/\nconst PanicReason = Object.freeze({\n/**\n*r\" The byte can't be mapped to any known `PanicReason`.\n*/\nUnknownPanicReason:0,\"0\":\"UnknownPanicReason\",\n/**\n*r\" Found `RVRT` instruction.\n*/\nRevert:1,\"1\":\"Revert\",\n/**\n*r\" Execution ran out of gas.\n*/\nOutOfGas:2,\"2\":\"OutOfGas\",\n/**\n*r\" The transaction validity is violated.\n*/\nTransactionValidity:3,\"3\":\"TransactionValidity\",\n/**\n*r\" Attempt to write outside interpreter memory boundaries.\n*/\nMemoryOverflow:4,\"4\":\"MemoryOverflow\",\n/**\n*r\" Overflow while executing arithmetic operation.\n*r\" These errors are ignored using the WRAPPING flag.\n*/\nArithmeticOverflow:5,\"5\":\"ArithmeticOverflow\",\n/**\n*r\" Designed contract was not found in the storage.\n*/\nContractNotFound:6,\"6\":\"ContractNotFound\",\n/**\n*r\" Memory ownership rules are violated.\n*/\nMemoryOwnership:7,\"7\":\"MemoryOwnership\",\n/**\n*r\" The asset ID balance isn't enough for the instruction.\n*/\nNotEnoughBalance:8,\"8\":\"NotEnoughBalance\",\n/**\n*r\" The interpreter is expected to be in internal context.\n*/\nExpectedInternalContext:9,\"9\":\"ExpectedInternalContext\",\n/**\n*r\" The queried asset ID was not found in the state.\n*/\nAssetIdNotFound:10,\"10\":\"AssetIdNotFound\",\n/**\n*r\" The provided input is not found in the transaction.\n*/\nInputNotFound:11,\"11\":\"InputNotFound\",\n/**\n*r\" The provided output is not found in the transaction.\n*/\nOutputNotFound:12,\"12\":\"OutputNotFound\",\n/**\n*r\" The provided witness is not found in the transaction.\n*/\nWitnessNotFound:13,\"13\":\"WitnessNotFound\",\n/**\n*r\" The transaction maturity is not valid for this request.\n*/\nTransactionMaturity:14,\"14\":\"TransactionMaturity\",\n/**\n*r\" The metadata identifier is invalid.\n*/\nInvalidMetadataIdentifier:15,\"15\":\"InvalidMetadataIdentifier\",\n/**\n*r\" The call structure is not valid.\n*/\nMalformedCallStructure:16,\"16\":\"MalformedCallStructure\",\n/**\n*r\" The provided register does not allow write operations.\n*/\nReservedRegisterNotWritable:17,\"17\":\"ReservedRegisterNotWritable\",\n/**\n*r\" The execution resulted in an erroneous state of the interpreter.\n*/\nInvalidFlags:18,\"18\":\"InvalidFlags\",\n/**\n*r\" The provided immediate value is not valid for this instruction.\n*/\nInvalidImmediateValue:19,\"19\":\"InvalidImmediateValue\",\n/**\n*r\" The provided transaction input is not of type `Coin`.\n*/\nExpectedCoinInput:20,\"20\":\"ExpectedCoinInput\",\n/**\n*r\" `ECAL` instruction failed.\n*/\nEcalError:21,\"21\":\"EcalError\",\n/**\n*r\" Two segments of the interpreter memory should not intersect for write operations.\n*/\nMemoryWriteOverlap:22,\"22\":\"MemoryWriteOverlap\",\n/**\n*r\" The requested contract is not listed in the transaction inputs.\n*/\nContractNotInInputs:23,\"23\":\"ContractNotInInputs\",\n/**\n*r\" The internal asset ID balance overflowed with the provided instruction.\n*/\nInternalBalanceOverflow:24,\"24\":\"InternalBalanceOverflow\",\n/**\n*r\" The maximum allowed contract size is violated.\n*/\nContractMaxSize:25,\"25\":\"ContractMaxSize\",\n/**\n*r\" This instruction expects the stack area to be unallocated for this call.\n*/\nExpectedUnallocatedStack:26,\"26\":\"ExpectedUnallocatedStack\",\n/**\n*r\" The maximum allowed number of static contracts was reached for this transaction.\n*/\nMaxStaticContractsReached:27,\"27\":\"MaxStaticContractsReached\",\n/**\n*r\" The requested transfer amount cannot be zero.\n*/\nTransferAmountCannotBeZero:28,\"28\":\"TransferAmountCannotBeZero\",\n/**\n*r\" The provided transaction output should be of type `Variable`.\n*/\nExpectedOutputVariable:29,\"29\":\"ExpectedOutputVariable\",\n/**\n*r\" The expected context of the stack parent is internal.\n*/\nExpectedParentInternalContext:30,\"30\":\"ExpectedParentInternalContext\",\n/**\n*r\" The predicate returned non `1`. The `1` means successful verification\n*r\" of the predicate, all other values means unsuccessful.\n*/\nPredicateReturnedNonOne:31,\"31\":\"PredicateReturnedNonOne\",\n/**\n*r\" The contract ID is already deployed and can't be overwritten.\n*/\nContractIdAlreadyDeployed:32,\"32\":\"ContractIdAlreadyDeployed\",\n/**\n*r\" The loaded contract mismatch expectations.\n*/\nContractMismatch:33,\"33\":\"ContractMismatch\",\n/**\n*r\" Attempting to send message data longer than `MAX_MESSAGE_DATA_LENGTH`\n*/\nMessageDataTooLong:34,\"34\":\"MessageDataTooLong\",\n/**\n*r\" Mathematically invalid arguments where given to an arithmetic instruction.\n*r\" For instance, division by zero produces this.\n*r\" These errors are ignored using the UNSAFEMATH flag.\n*/\nArithmeticError:35,\"35\":\"ArithmeticError\",\n/**\n*r\" The contract instruction is not allowed in predicates.\n*/\nContractInstructionNotAllowed:36,\"36\":\"ContractInstructionNotAllowed\",\n/**\n*r\" Transfer of zero coins is not allowed.\n*/\nTransferZeroCoins:37,\"37\":\"TransferZeroCoins\",\n/**\n*r\" Attempted to execute an invalid instruction\n*/\nInvalidInstruction:38,\"38\":\"InvalidInstruction\",\n/**\n*r\" Memory outside $is..$ssp range is not executable\n*/\nMemoryNotExecutable:39,\"39\":\"MemoryNotExecutable\",\n/**\n*r\" The policy is not set.\n*/\nPolicyIsNotSet:40,\"40\":\"PolicyIsNotSet\",\n/**\n*r\" The policy is not found across policies.\n*/\nPolicyNotFound:41,\"41\":\"PolicyNotFound\",\n/**\n*r\" Receipt context is full\n*/\nTooManyReceipts:42,\"42\":\"TooManyReceipts\",\n/**\n*r\" Balance of a contract overflowed\n*/\nBalanceOverflow:43,\"43\":\"BalanceOverflow\",\n/**\n*r\" Block height value is invalid, typically because it is too large\n*/\nInvalidBlockHeight:44,\"44\":\"InvalidBlockHeight\",\n/**\n*r\" Attempt to use sequential memory instructions with too large slot count,\n*r\" typically because it cannot fit into usize\n*/\nTooManySlots:45,\"45\":\"TooManySlots\", });\n/**\n* The operation performed by WDOP and WQOP instructions, determined as\n*/\nconst MathOp = Object.freeze({\n/**\n* Add\n*/\nADD:0,\"0\":\"ADD\",\n/**\n* Subtract\n*/\nSUB:1,\"1\":\"SUB\",\n/**\n* Invert bits (discards rhs)\n*/\nNOT:2,\"2\":\"NOT\",\n/**\n* Bitwise or\n*/\nOR:3,\"3\":\"OR\",\n/**\n* Bitwise exclusive or\n*/\nXOR:4,\"4\":\"XOR\",\n/**\n* Bitwise and\n*/\nAND:5,\"5\":\"AND\",\n/**\n* Shift left\n*/\nSHL:6,\"6\":\"SHL\",\n/**\n* Shift right\n*/\nSHR:7,\"7\":\"SHR\", });\n/**\n*Adds two registers.\n*/\nclass ADD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_add_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Adds a register and an immediate value.\n*/\nclass ADDI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_addi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Allocate a number of bytes from the heap.\n*/\nclass ALOC {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_aloc_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} bytes\n    */\n    constructor(bytes) {\n        _assertClass(bytes, RegId);\n        var ptr0 = bytes.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ANDs two registers.\n*/\nclass AND {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_and_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ANDs a register and an immediate value.\n*/\nclass ANDI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_andi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Get the balance of contract of an asset ID.\n*/\nclass BAL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bal_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} asset_id_addr\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst, asset_id_addr, contract_id_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr1 = asset_id_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr2 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get current block height.\n*/\nclass BHEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bhei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    */\n    constructor(dst) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get block header hash for height.\n*/\nclass BHSH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bhsh_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} heigth\n    */\n    constructor(dst, heigth) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(heigth, RegId);\n        var ptr1 = heigth.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Burns `amount` coins of the asset ID created from `sub_id` for the current contract.\n*/\nclass BURN {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_burn_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    * @param {RegId} sub_id_addr\n    */\n    constructor(amount, sub_id_addr) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        _assertClass(sub_id_addr, RegId);\n        var ptr1 = sub_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Call a contract.\n*/\nclass CALL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_call_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} target_struct\n    * @param {RegId} fwd_coins\n    * @param {RegId} asset_id_addr\n    * @param {RegId} fwd_gas\n    */\n    constructor(target_struct, fwd_coins, asset_id_addr, fwd_gas) {\n        _assertClass(target_struct, RegId);\n        var ptr0 = target_struct.__destroy_into_raw();\n        _assertClass(fwd_coins, RegId);\n        var ptr1 = fwd_coins.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr2 = asset_id_addr.__destroy_into_raw();\n        _assertClass(fwd_gas, RegId);\n        var ptr3 = fwd_gas.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get current block proposer's address.\n*/\nclass CB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    */\n    constructor(dst) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy contract code for a contract.\n*/\nclass CCP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ccp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} contract_id_addr\n    * @param {RegId} offset\n    * @param {RegId} len\n    */\n    constructor(dst_addr, contract_id_addr, offset, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        _assertClass(offset, RegId);\n        var ptr2 = offset.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Extend the current call frame's stack\n*/\nclass CFE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfe_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Extend the current call frame's stack by an immediate value.\n*/\nclass CFEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, Imm24);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Shrink the current call frame's stack\n*/\nclass CFS {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfs_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Shrink the current call frame's stack by an immediate value.\n*/\nclass CFSI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfsi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, Imm24);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Get code root of a contract.\n*/\nclass CROO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_croo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst_addr, contract_id_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get code size of a contract.\n*/\nclass CSIZ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_csiz_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst, contract_id_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n* Arguments for WDCM and WQCM instructions.\n*/\nclass CompareArgs {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(CompareArgs.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_compareargs_free(ptr);\n    }\n    /**\n    * Comparison mode\n    * @returns {CompareMode}\n    */\n    get mode() {\n        const ret = wasm$1.__wbg_get_compareargs_mode(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Comparison mode\n    * @param {CompareMode} arg0\n    */\n    set mode(arg0) {\n        wasm$1.__wbg_set_compareargs_mode(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Convert to immediate value.\n    * @returns {Imm06}\n    */\n    to_imm() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm$1.compareargs_to_imm(ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct from `Imm06`. Returns `None` if the value has reserved flags set.\n    * @param {Imm06} bits\n    * @returns {CompareArgs | undefined}\n    */\n    static from_imm(bits) {\n        _assertClass(bits, Imm06);\n        var ptr0 = bits.__destroy_into_raw();\n        const ret = wasm$1.compareargs_from_imm(ptr0);\n        return ret === 0 ? undefined : CompareArgs.__wrap(ret);\n    }\n}\n/**\n*Divides two registers.\n*/\nclass DIV {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_div_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Divides a register and an immediate value.\n*/\nclass DIVI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_divi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n* Additional arguments for WMDV and WDDV instructions.\n*/\nclass DivArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_divargs_free(ptr);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n*Call external function\n*/\nclass ECAL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ecal_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} c\n    * @param {RegId} d\n    */\n    constructor(a, b, c, d) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(c, RegId);\n        var ptr2 = c.__destroy_into_raw();\n        _assertClass(d, RegId);\n        var ptr3 = d.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The 64-byte public key (x, y) recovered from 64-byte signature on 32-byte message.\n*/\nclass ECK1 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_eck1_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(dst_addr, sig_addr, msg_hash_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The 64-byte Secp256r1 public key (x, y) recovered from 64-byte signature on 32-byte message.\n*/\nclass ECR1 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ecr1_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(dst_addr, sig_addr, msg_hash_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Verify ED25519 public key and signature match a 32-byte message.\n*/\nclass ED19 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ed19_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} pub_key_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(pub_key_addr, sig_addr, msg_hash_addr) {\n        _assertClass(pub_key_addr, RegId);\n        var ptr0 = pub_key_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for equality.\n*/\nclass EQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_eq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Raises one register to the power of another.\n*/\nclass EXP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_exp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Raises one register to the power of an immediate value.\n*/\nclass EXPI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_expi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Set flag register to a register.\n*/\nclass FLAG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_flag_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get metadata from memory.\n*/\nclass GM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {Imm18} selector\n    */\n    constructor(dst, selector) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(selector, Imm18);\n        var ptr1 = selector.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n    /**\n    * Construct a `GM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {GMArgs} args\n    * @returns {GM}\n    */\n    static from_args(ra, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        const ret = wasm$1.gm_from_args(ptr0, args);\n        return GM.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for greater-than.\n*/\nclass GT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get transaction fields.\n*/\nclass GTF {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GTF.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gtf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} arg\n    * @param {Imm12} selector\n    */\n    constructor(dst, arg, selector) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(arg, RegId);\n        var ptr1 = arg.__destroy_into_raw();\n        _assertClass(selector, Imm12);\n        var ptr2 = selector.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n    /**\n    * Construct a `GTF` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {GTFArgs} args\n    * @returns {GTF}\n    */\n    static from_args(ra, rb, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        const ret = wasm$1.gtf_from_args(ptr0, ptr1, args);\n        return GTF.__wrap(ret);\n    }\n}\n/**\n* Represents a 6-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm06 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm06.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm06_free(ptr);\n    }\n}\n/**\n* Represents a 12-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm12 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm12.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm12_free(ptr);\n    }\n}\n/**\n* Represents a 18-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm18 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm18.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm18_free(ptr);\n    }\n}\n/**\n* Represents a 24-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm24 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm24.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm24_free(ptr);\n    }\n}\n/**\n* Representation of a single instruction for the interpreter.\n*\n* The opcode is represented in the tag (variant), or may be retrieved in the\n* form of an `Opcode` byte using the `opcode` method.\n*\n* The register and immediate data associated with the instruction is represented\n* within an inner unit type wrapper around the 3 remaining bytes.\n*/\nclass Instruction {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Instruction.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_instruction_free(ptr);\n    }\n    /**\n    * Convenience method for converting to bytes\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm$1.__wbindgen_add_to_stack_pointer(-16);\n            wasm$1.instruction_to_bytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm$1.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm$1.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Size of an instruction in bytes\n    * @returns {number}\n    */\n    static size() {\n        const ret = wasm$1.instruction_size();\n        return ret >>> 0;\n    }\n}\n/**\n*Jump.\n*/\nclass JI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ji_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} abs_target\n    */\n    constructor(abs_target) {\n        _assertClass(abs_target, Imm24);\n        var ptr0 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Dynamic jump.\n*/\nclass JMP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} abs_target\n    */\n    constructor(abs_target) {\n        _assertClass(abs_target, RegId);\n        var ptr0 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Unconditional dynamic relative jump backwards, with a constant offset.\n*/\nclass JMPB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmpb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dynamic\n    * @param {Imm18} fixed\n    */\n    constructor(dynamic, fixed) {\n        _assertClass(dynamic, RegId);\n        var ptr0 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm18);\n        var ptr1 = fixed.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Unconditional dynamic relative jump forwards, with a constant offset.\n*/\nclass JMPF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmpf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dynamic\n    * @param {Imm18} fixed\n    */\n    constructor(dynamic, fixed) {\n        _assertClass(dynamic, RegId);\n        var ptr0 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm18);\n        var ptr1 = fixed.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Conditional dynamic jump.\n*/\nclass JNE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jne_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} abs_target\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(abs_target, lhs, rhs) {\n        _assertClass(abs_target, RegId);\n        var ptr0 = abs_target.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump backwards, conditional on comparsion, with a constant offset.\n*/\nclass JNEB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jneb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {RegId} dynamic\n    * @param {Imm06} fixed\n    */\n    constructor(cond_lhs, cond_rhs, dynamic, fixed) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr2 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm06);\n        var ptr3 = fixed.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump forwards, conditional on comparsion, with a constant offset.\n*/\nclass JNEF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnef_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {RegId} dynamic\n    * @param {Imm06} fixed\n    */\n    constructor(cond_lhs, cond_rhs, dynamic, fixed) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr2 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm06);\n        var ptr3 = fixed.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n}\n/**\n*Conditional jump.\n*/\nclass JNEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {Imm12} abs_target\n    */\n    constructor(cond_lhs, cond_rhs, abs_target) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(abs_target, Imm12);\n        var ptr2 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump backwards, conditional against zero, with a constant offset.\n*/\nclass JNZB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {RegId} dynamic\n    * @param {Imm12} fixed\n    */\n    constructor(cond_nz, dynamic, fixed) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr1 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm12);\n        var ptr2 = fixed.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump forwards, conditional against zero, with a constant offset.\n*/\nclass JNZF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {RegId} dynamic\n    * @param {Imm12} fixed\n    */\n    constructor(cond_nz, dynamic, fixed) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr1 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm12);\n        var ptr2 = fixed.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Conditional jump against zero.\n*/\nclass JNZI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {Imm18} abs_target\n    */\n    constructor(cond_nz, abs_target) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(abs_target, Imm18);\n        var ptr1 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*The keccak-256 hash of a slice.\n*/\nclass K256 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_k256_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*A byte is loaded from the specified address offset by an immediate value.\n*/\nclass LB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} addr\n    * @param {Imm12} offset\n    */\n    constructor(dst, addr, offset) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr1 = addr.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Load a contract's code as executable.\n*/\nclass LDC {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ldc_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} offset\n    * @param {RegId} len\n    */\n    constructor(contract_id_addr, offset, len) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(offset, RegId);\n        var ptr1 = offset.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Log an event.\n*/\nclass LOG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_log_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} c\n    * @param {RegId} d\n    */\n    constructor(a, b, c, d) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(c, RegId);\n        var ptr2 = c.__destroy_into_raw();\n        _assertClass(d, RegId);\n        var ptr3 = d.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Log data.\n*/\nclass LOGD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_logd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} addr\n    * @param {RegId} len\n    */\n    constructor(a, b, addr, len) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr2 = addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for less-than.\n*/\nclass LT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*A word is loaded from the specified address offset by an immediate value.\n*/\nclass LW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} addr\n    * @param {Imm12} offset\n    */\n    constructor(dst, addr, offset) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr1 = addr.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Clear a variable number of bytes in memory.\n*/\nclass MCL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr1 = len.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Clear an immediate number of bytes in memory.\n*/\nclass MCLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {Imm18} count\n    */\n    constructor(addr, count) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(count, Imm18);\n        var ptr1 = count.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Copy a variable number of bytes in memory.\n*/\nclass MCP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy an immediate number of bytes in memory.\n*/\nclass MCPI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcpi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {Imm12} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, Imm12);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Compare bytes in memory.\n*/\nclass MEQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_meq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} result\n    * @param {RegId} lhs_addr\n    * @param {RegId} rhs_addr\n    * @param {RegId} len\n    */\n    constructor(result, lhs_addr, rhs_addr, len) {\n        _assertClass(result, RegId);\n        var ptr0 = result.__destroy_into_raw();\n        _assertClass(lhs_addr, RegId);\n        var ptr1 = lhs_addr.__destroy_into_raw();\n        _assertClass(rhs_addr, RegId);\n        var ptr2 = rhs_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Mints `amount` coins of the asset ID created from `sub_id` for the current contract.\n*/\nclass MINT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mint_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    * @param {RegId} sub_id_addr\n    */\n    constructor(amount, sub_id_addr) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        _assertClass(sub_id_addr, RegId);\n        var ptr1 = sub_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide with arbitrary precision intermediate step.\n*/\nclass MLDV {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mldv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The integer logarithm of a register.\n*/\nclass MLOG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mlog_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Modulo remainder of two registers.\n*/\nclass MOD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mod_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Modulo remainder of a register and an immediate value.\n*/\nclass MODI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_modi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Copy from one register to another.\n*/\nclass MOVE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_move_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} src\n    */\n    constructor(dst, src) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(src, RegId);\n        var ptr1 = src.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy immediate value into a register\n*/\nclass MOVI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_movi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {Imm18} val\n    */\n    constructor(dst, val) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(val, Imm18);\n        var ptr1 = val.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*The integer root of a register.\n*/\nclass MROO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mroo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiplies two registers.\n*/\nclass MUL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mul_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiplies a register and an immediate value.\n*/\nclass MULI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_muli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n* Additional arguments for WDOP and WQOP instructions.\n*/\nclass MathArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mathargs_free(ptr);\n    }\n    /**\n    * The operation to perform\n    * @returns {MathOp}\n    */\n    get op() {\n        const ret = wasm$1.__wbg_get_mathargs_op(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The operation to perform\n    * @param {MathOp} arg0\n    */\n    set op(arg0) {\n        wasm$1.__wbg_set_mathargs_op(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n* Additional arguments for WDML and WQML instructions.\n*/\nclass MulArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mulargs_free(ptr);\n    }\n    /**\n    * Load LHSS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_lhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load LHSS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_lhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_mulargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_mulargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n*Performs no operation.\n*/\nclass NOOP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_noop_free(ptr);\n    }\n    /**\n    * Construct the instruction.\n    */\n    constructor() {\n        const ret = wasm$1.noop_new_typescript();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n}\n/**\n*Bitwise NOT a register.\n*/\nclass NOT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_not_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} arg\n    */\n    constructor(dst, arg) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(arg, RegId);\n        var ptr1 = arg.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ORs two registers.\n*/\nclass OR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_or_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ORs a register and an immediate value.\n*/\nclass ORI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ori_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Pop a bitmask-selected set of registers in range 40..64 to the stack.\n*/\nclass POPH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_poph_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Pop a bitmask-selected set of registers in range 16..40 to the stack.\n*/\nclass POPL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_popl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Push a bitmask-selected set of registers in range 40..64 to the stack.\n*/\nclass PSHH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_pshh_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Push a bitmask-selected set of registers in range 16..40 to the stack.\n*/\nclass PSHL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_pshl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n* Describe a panic reason with the instruction that generated it\n*/\nclass PanicInstruction {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_panicinstruction_free(ptr);\n    }\n    /**\n    * Represents an error described by a reason and an instruction.\n    * @param {PanicReason} reason\n    * @param {number} instruction\n    */\n    constructor(reason, instruction) {\n        const ret = wasm$1.panicinstruction_error_typescript(reason, instruction);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Underlying panic reason\n    * @returns {PanicReason}\n    */\n    reason() {\n        const ret = wasm$1.panicinstruction_reason(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Underlying instruction\n    * @returns {number}\n    */\n    instruction() {\n        const ret = wasm$1.panicinstruction_instruction(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*Return from context.\n*/\nclass RET {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ret_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Return from context with data.\n*/\nclass RETD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_retd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} len\n    */\n    constructor(addr, len) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr1 = len.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Halt execution, reverting state changes and returning a value.\n*/\nclass RVRT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_rvrt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n* Represents a 6-bit register ID, guaranteed to be masked by construction.\n*/\nclass RegId {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RegId.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_regid_free(ptr);\n    }\n    /**\n    * Construct a register ID from the given value.\n    *\n    * Returns `None` if the value is outside the 6-bit value range.\n    * @param {number} u\n    * @returns {RegId | undefined}\n    */\n    static new_checked(u) {\n        const ret = wasm$1.regid_new_checked(u);\n        return ret === 0 ? undefined : RegId.__wrap(ret);\n    }\n    /**\n    * Received balance for this context.\n    * @returns {RegId}\n    */\n    static bal() {\n        const ret = wasm$1.regid_bal();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Remaining gas in the context.\n    * @returns {RegId}\n    */\n    static cgas() {\n        const ret = wasm$1.regid_cgas();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Error codes for particular operations.\n    * @returns {RegId}\n    */\n    static err() {\n        const ret = wasm$1.regid_err();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Flags register.\n    * @returns {RegId}\n    */\n    static flag() {\n        const ret = wasm$1.regid_flag();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Frame pointer. Memory address of beginning of current call frame.\n    * @returns {RegId}\n    */\n    static fp() {\n        const ret = wasm$1.regid_fp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Remaining gas globally.\n    * @returns {RegId}\n    */\n    static ggas() {\n        const ret = wasm$1.regid_ggas();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Heap pointer. Memory address below the current bottom of the heap (points to free\n    * memory).\n    * @returns {RegId}\n    */\n    static hp() {\n        const ret = wasm$1.regid_hp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Instructions start. Pointer to the start of the currently-executing code.\n    * @returns {RegId}\n    */\n    static is() {\n        const ret = wasm$1.regid_is();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains overflow/underflow of addition, subtraction, and multiplication.\n    * @returns {RegId}\n    */\n    static of() {\n        const ret = wasm$1.regid_of();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains one (1), for convenience.\n    * @returns {RegId}\n    */\n    static one() {\n        const ret = wasm$1.regid_one();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * The program counter. Memory address of the current instruction.\n    * @returns {RegId}\n    */\n    static pc() {\n        const ret = wasm$1.regid_pc();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Return value or pointer.\n    * @returns {RegId}\n    */\n    static ret() {\n        const ret = wasm$1.regid_ret();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Return value length in bytes.\n    * @returns {RegId}\n    */\n    static retl() {\n        const ret = wasm$1.regid_retl();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Stack pointer. Memory address on top of current writable stack area (points to\n    * free memory).\n    * @returns {RegId}\n    */\n    static sp() {\n        const ret = wasm$1.regid_sp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Stack start pointer. Memory address of bottom of current writable stack area.\n    * @returns {RegId}\n    */\n    static spp() {\n        const ret = wasm$1.regid_spp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Smallest writable register.\n    * @returns {RegId}\n    */\n    static writable() {\n        const ret = wasm$1.regid_writable();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains zero (0), for convenience.\n    * @returns {RegId}\n    */\n    static zero() {\n        const ret = wasm$1.regid_zero();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Construct a register ID from the given value.\n    *\n    * The given value will be masked to 6 bits.\n    * @param {number} u\n    */\n    constructor(u) {\n        const ret = wasm$1.regid_new_typescript(u);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * A const alternative to the `Into<u8>` implementation.\n    * @returns {number}\n    */\n    to_u8() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm$1.regid_to_u8(ptr);\n        return ret;\n    }\n}\n/**\n*The SHA-2-256 hash of a slice.\n*/\nclass S256 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_s256_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Write the least significant byte of a register to memory.\n*/\nclass SB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} value\n    * @param {Imm12} offset\n    */\n    constructor(addr, value, offset) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr1 = value.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Clear a series of slots from contract storage.\n*/\nclass SCWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_scwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} lenq\n    */\n    constructor(key_addr, status, lenq) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr2 = lenq.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Left shifts a register by a register.\n*/\nclass SLL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sll_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Left shifts a register by an immediate value.\n*/\nclass SLLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_slli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Send a message to recipient address with call abi, coins, and output.\n*/\nclass SMO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_smo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} recipient_addr\n    * @param {RegId} data_addr\n    * @param {RegId} data_len\n    * @param {RegId} coins\n    */\n    constructor(recipient_addr, data_addr, data_len, coins) {\n        _assertClass(recipient_addr, RegId);\n        var ptr0 = recipient_addr.__destroy_into_raw();\n        _assertClass(data_addr, RegId);\n        var ptr1 = data_addr.__destroy_into_raw();\n        _assertClass(data_len, RegId);\n        var ptr2 = data_len.__destroy_into_raw();\n        _assertClass(coins, RegId);\n        var ptr3 = coins.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Right shifts a register by a register.\n*/\nclass SRL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Right shifts a register by an immediate value.\n*/\nclass SRLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Load a word from contract storage.\n*/\nclass SRW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} status\n    * @param {RegId} key_addr\n    */\n    constructor(dst, status, key_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(key_addr, RegId);\n        var ptr2 = key_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Load a series of 32 byte slots from contract storage.\n*/\nclass SRWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} status\n    * @param {RegId} key_addr\n    * @param {RegId} lenq\n    */\n    constructor(dst_addr, status, key_addr, lenq) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(key_addr, RegId);\n        var ptr2 = key_addr.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr3 = lenq.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Subtracts two registers.\n*/\nclass SUB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sub_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Subtracts a register and an immediate value.\n*/\nclass SUBI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_subi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Write a register to memory.\n*/\nclass SW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} value\n    * @param {Imm12} offset\n    */\n    constructor(addr, value, offset) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr1 = value.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Store a word in contract storage.\n*/\nclass SWW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sww_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} value\n    */\n    constructor(key_addr, status, value) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr2 = value.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Store a series of 32 byte slots in contract storage.\n*/\nclass SWWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_swwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} src_addr\n    * @param {RegId} lenq\n    */\n    constructor(key_addr, status, src_addr, lenq) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr2 = src_addr.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr3 = lenq.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get timestamp of block at given height.\n*/\nclass TIME {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_time_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} heigth\n    */\n    constructor(dst, heigth) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(heigth, RegId);\n        var ptr1 = heigth.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Transfer coins to a contract unconditionally.\n*/\nclass TR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_tr_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} amount\n    * @param {RegId} asset_id_addr\n    */\n    constructor(contract_id_addr, amount, asset_id_addr) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(amount, RegId);\n        var ptr1 = amount.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr2 = asset_id_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Transfer coins to a variable output.\n*/\nclass TRO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_tro_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} output_index\n    * @param {RegId} amount\n    * @param {RegId} asset_id_addr\n    */\n    constructor(contract_id_addr, output_index, amount, asset_id_addr) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(output_index, RegId);\n        var ptr1 = output_index.__destroy_into_raw();\n        _assertClass(amount, RegId);\n        var ptr2 = amount.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr3 = asset_id_addr.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*AddMod 128bit\n*/\nclass WDAM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdam_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} add_lhs\n    * @param {RegId} add_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, add_lhs, add_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(add_lhs, RegId);\n        var ptr1 = add_lhs.__destroy_into_raw();\n        _assertClass(add_rhs, RegId);\n        var ptr2 = add_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compare 128bit integers\n*/\nclass WDCM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDCM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdcm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDCM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {CompareArgs} args\n    * @returns {WDCM}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, CompareArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdcm_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDCM.__wrap(ret);\n    }\n}\n/**\n*Divide 128bit\n*/\nclass WDDV {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDDV.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wddv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDDV` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {DivArgs} args\n    * @returns {WDDV}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, DivArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wddv_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDDV.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide 128bit\n*/\nclass WDMD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdmd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiply 128bit\n*/\nclass WDML {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDML.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdml_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDML` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MulArgs} args\n    * @returns {WDML}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MulArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdml_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDML.__wrap(ret);\n    }\n}\n/**\n*MulMod 128bit\n*/\nclass WDMM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdmm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, mul_lhs, mul_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Simple 128bit operations\n*/\nclass WDOP {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDOP.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdop_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDOP` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MathArgs} args\n    * @returns {WDOP}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MathArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdop_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDOP.__wrap(ret);\n    }\n}\n/**\n*AddMod 256bit\n*/\nclass WQAM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqam_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} add_lhs\n    * @param {RegId} add_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, add_lhs, add_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(add_lhs, RegId);\n        var ptr1 = add_lhs.__destroy_into_raw();\n        _assertClass(add_rhs, RegId);\n        var ptr2 = add_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compare 256bit integers\n*/\nclass WQCM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQCM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqcm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQCM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {CompareArgs} args\n    * @returns {WQCM}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, CompareArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdcm_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQCM.__wrap(ret);\n    }\n}\n/**\n*Divide 256bit\n*/\nclass WQDV {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQDV.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqdv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQDV` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {DivArgs} args\n    * @returns {WQDV}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, DivArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wddv_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQDV.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide 256bit\n*/\nclass WQMD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqmd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiply 256bit\n*/\nclass WQML {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQML.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqml_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQML` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MulArgs} args\n    * @returns {WQML}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MulArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdml_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQML.__wrap(ret);\n    }\n}\n/**\n*MulMod 256bit\n*/\nclass WQMM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqmm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, mul_lhs, mul_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Simple 256bit operations\n*/\nclass WQOP {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQOP.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqop_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQOP` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MathArgs} args\n    * @returns {WQOP}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MathArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdop_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQOP.__wrap(ret);\n    }\n}\n/**\n*Bitwise XORs two registers.\n*/\nclass XOR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_xor_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise XORs a register and an immediate value.\n*/\nclass XORI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_xori_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm$1 = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm$1;\n}\n\nfunction initSync(module) {\n    if (wasm$1 !== undefined) return wasm$1;\n\n    const imports = __wbg_get_imports();\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm$1 !== undefined) return wasm$1;\n    const imports = __wbg_get_imports();\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nfunction _loadWasmModule (sync, filepath, src, imports) {\n  function _instantiateOrCompile(source, imports, stream) {\n    var instantiateFunc = stream ? WebAssembly.instantiateStreaming : WebAssembly.instantiate;\n    var compileFunc = stream ? WebAssembly.compileStreaming : WebAssembly.compile;\n\n    if (imports) {\n      return instantiateFunc(source, imports)\n    } else {\n      return compileFunc(source)\n    }\n  }\n\n  \nvar buf = null;\nvar isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\nif (isNode) {\n  \nbuf = Buffer.from(src, 'base64');\n\n} else {\n  \nvar raw = globalThis.atob(src);\nvar rawLength = raw.length;\nbuf = new Uint8Array(new ArrayBuffer(rawLength));\nfor(var i = 0; i < rawLength; i++) {\n   buf[i] = raw.charCodeAt(i);\n}\n\n}\n\n\n  if(sync) {\n    var mod = new WebAssembly.Module(buf);\n    return imports ? new WebAssembly.Instance(mod, imports) : mod\n  } else {\n    return _instantiateOrCompile(buf, imports, false)\n  }\n}\n\nfunction wasm(imports){return _loadWasmModule(1, null, '', imports)}\n\nasync function initWasm () {\n  return await __wbg_init(wasm());\n}\n\n/**\n * calling it right away for pre-caching\n * the wasm async initialization at startup\n */\ninitWasm();\n\nexport { ADD, ADDI, ALOC, AND, ANDI, BAL, BHEI, BHSH, BURN, CALL, CB, CCP, CFE, CFEI, CFS, CFSI, CROO, CSIZ, CompareArgs, CompareMode, DIV, DIVI, DivArgs, ECAL, ECK1, ECR1, ED19, EQ, EXP, EXPI, FLAG, GM, GMArgs, GT, GTF, GTFArgs, Imm06, Imm12, Imm18, Imm24, Instruction, JI, JMP, JMPB, JMPF, JNE, JNEB, JNEF, JNEI, JNZB, JNZF, JNZI, K256, LB, LDC, LOG, LOGD, LT, LW, MCL, MCLI, MCP, MCPI, MEQ, MINT, MLDV, MLOG, MOD, MODI, MOVE, MOVI, MROO, MUL, MULI, MathArgs, MathOp, MulArgs, NOOP, NOT, OR, ORI, POPH, POPL, PSHH, PSHL, PanicInstruction, PanicReason, RET, RETD, RVRT, RegId, S256, SB, SCWQ, SLL, SLLI, SMO, SRL, SRLI, SRW, SRWQ, SUB, SUBI, SW, SWW, SWWQ, TIME, TR, TRO, WDAM, WDCM, WDDV, WDMD, WDML, WDMM, WDOP, WQAM, WQCM, WQDV, WQMD, WQML, WQMM, WQOP, XOR, XORI, add, addi, aloc, and, andi, bal, bhei, bhsh, burn, call, cb, ccp, cfe, cfei, cfs, cfsi, croo, csiz, div, divi, ecal, eck1, ecr1, ed19, eq, exp, expi, flag, gm, gm_args, gt, gtf, gtf_args, initSync, initWasm, ji, jmp, jmpb, jmpf, jne, jneb, jnef, jnei, jnzb, jnzf, jnzi, k256, lb, ldc, log, logd, lt, lw, mcl, mcli, mcp, mcpi, meq, mint, mldv, mlog, mod_, modi, move_, movi, mroo, mul, muli, noop, not, or, ori, poph, popl, pshh, pshl, ret, retd, rvrt, s256, sb, scwq, sll, slli, smo, srl, srli, srw, srwq, sub, subi, sw, sww, swwq, time, tr, tro, wdam, wdcm, wdcm_args, wddv, wddv_args, wdmd, wdml, wdml_args, wdmm, wdop, wdop_args, wqam, wqcm, wqcm_args, wqdv, wqdv_args, wqmd, wqml, wqml_args, wqmm, wqop, wqop_args, xor, xori };\n","// From https://github.com/FuelLabs/fuel-asm/blob/eb78378c3b7c22a53b834381c387d89b3c0ef122/src/panic_reason.rs#L13\nexport const PANIC_REASONS = [\n  'Success',\n  'Revert',\n  'OutOfGas',\n  'TransactionValidity',\n  'MemoryOverflow',\n  'ArithmeticOverflow',\n  'ContractNotFound',\n  'MemoryOwnership',\n  'NotEnoughBalance',\n  'ExpectedInternalContext',\n  'AssetIdNotFound',\n  'InputNotFound',\n  'OutputNotFound',\n  'WitnessNotFound',\n  'TransactionMaturity',\n  'InvalidMetadataIdentifier',\n  'MalformedCallStructure',\n  'ReservedRegisterNotWritable',\n  'ErrorFlag',\n  'InvalidImmediateValue',\n  'ExpectedCoinInput',\n  'MaxMemoryAccess',\n  'MemoryWriteOverlap',\n  'ContractNotInInputs',\n  'InternalBalanceOverflow',\n  'ContractMaxSize',\n  'ExpectedUnallocatedStack',\n  'MaxStaticContractsReached',\n  'TransferAmountCannotBeZero',\n  'ExpectedOutputVariable',\n  'ExpectedParentInternalContext',\n  'IllegalJump',\n  'NonZeroMessageOutputRecipient',\n  'ZeroedMessageOutputRecipient',\n];\nexport const PANIC_DOC_URL = 'https://docs.rs/fuel-asm/latest/fuel_asm/enum.PanicReason.html';\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { TransactionResult } from '@fuel-ts/providers';\n\nimport { PANIC_REASONS, PANIC_DOC_URL } from './configs';\n\n/**\n * @hidden\n */\nconst getFailureReason = (reason: string): string => {\n  if (PANIC_REASONS.includes(reason)) {\n    return reason;\n  }\n\n  return reason === 'Revert(123)' ? 'MismatchedSelector' : 'unknown';\n};\n\n/**\n * @hidden\n */\nexport const getDocs = (\n  status: TransactionResult['gqlTransaction']['status']\n): { doc: string; reason: string } => {\n  if (status?.type === 'FailureStatus') {\n    const reason = getFailureReason(status.reason);\n    return {\n      doc: reason !== 'unknown' ? `${PANIC_DOC_URL}#variant.${reason}` : PANIC_DOC_URL,\n      reason,\n    };\n  }\n  return { doc: PANIC_DOC_URL, reason: 'unknown' };\n};\n\n/**\n * @hidden\n *\n * Generic assert function to avoid undesirable errors\n */\nexport function assert(condition: unknown, message: string): asserts condition {\n  if (!condition) {\n    throw new FuelError(ErrorCode.TRANSACTION_ERROR, message);\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport type { TransactionResultRevertReceipt } from '@fuel-ts/providers';\nimport {\n  FAILED_ASSERT_EQ_SIGNAL,\n  FAILED_ASSERT_SIGNAL,\n  FAILED_REQUIRE_SIGNAL,\n  FAILED_SEND_MESSAGE_SIGNAL,\n  FAILED_TRANSFER_TO_ADDRESS_SIGNAL,\n  FAILED_UNKNOWN_SIGNAL,\n} from '@fuel-ts/transactions/configs';\n\n/**\n * Represents the possible reasons for a revert.\n */\nexport type RevertReason =\n  | 'RequireFailed'\n  | 'TransferToAddressFailed'\n  | 'SendMessageFailed'\n  | 'AssertEqFailed'\n  | 'AssertFailed'\n  | 'Unknown';\n\n/**\n * A mapping of hex codes to their corresponding revert reasons.\n */\nconst REVERT_MAP: { [signal: string]: RevertReason } = {\n  [FAILED_REQUIRE_SIGNAL]: 'RequireFailed',\n  [FAILED_TRANSFER_TO_ADDRESS_SIGNAL]: 'TransferToAddressFailed',\n  [FAILED_SEND_MESSAGE_SIGNAL]: 'SendMessageFailed',\n  [FAILED_ASSERT_EQ_SIGNAL]: 'AssertEqFailed',\n  [FAILED_ASSERT_SIGNAL]: 'AssertFailed',\n  [FAILED_UNKNOWN_SIGNAL]: 'Unknown',\n};\n\n/**\n * Decode the revert error code from the given receipt.\n *\n * @param receipt - The transaction revert receipt.\n * @returns The revert reason, or undefined if not found.\n */\nconst decodeRevertErrorCode = (\n  receipt: TransactionResultRevertReceipt\n): RevertReason | undefined => {\n  const signalHex = receipt.val.toHex();\n  return REVERT_MAP[signalHex] ? REVERT_MAP[signalHex] : undefined;\n};\n\n/**\n * @hidden\n *\n * An error class for revert errors.\n */\nexport class RevertError extends Error {\n  /**\n   * The receipt associated with the revert error.\n   */\n  receipt: TransactionResultRevertReceipt;\n\n  /**\n   * Creates a new instance of RevertError.\n   *\n   * @param receipt - The transaction revert receipt.\n   * @param reason - The revert reason.\n   */\n  constructor(receipt: TransactionResultRevertReceipt, reason: RevertReason) {\n    super(`The script reverted with reason ${reason}`);\n    this.name = 'RevertError';\n    this.receipt = receipt;\n  }\n\n  /**\n   * Returns a string representation of the RevertError.\n   *\n   * @returns The string representation of the error.\n   */\n  toString() {\n    const { id, ...r } = this.receipt;\n    return `${this.name}: ${this.message}\n    ${id}: ${JSON.stringify(r)}`;\n  }\n}\n\n/**\n * @hidden\n *\n * An error class for Require revert errors.\n */\nexport class RequireRevertError extends RevertError {\n  /**\n   * Creates a new instance of RequireRevertError.\n   *\n   * @param receipt - The transaction revert receipt.\n   * @param reason - The revert reason.\n   */\n  constructor(receipt: TransactionResultRevertReceipt, reason: RevertReason) {\n    super(receipt, reason);\n    this.name = 'RequireRevertError';\n  }\n}\n\n/**\n * @hidden\n *\n * An error class for TransferToAddress revert errors.\n */\nexport class TransferToAddressRevertError extends RevertError {\n  /**\n   * Creates a new instance of TransferToAddressRevertError.\n   *\n   * @param receipt - The transaction revert receipt.\n   * @param reason - The revert reason.\n   */\n  constructor(receipt: TransactionResultRevertReceipt, reason: RevertReason) {\n    super(receipt, reason);\n    this.name = 'TransferToAddressRevertError';\n  }\n}\n\n/**\n * @hidden\n *\n * An error class for SendMessage revert errors.\n */\nexport class SendMessageRevertError extends RevertError {\n  /**\n   * Creates a new instance of SendMessageRevertError.\n   *\n   * @param receipt - The transaction revert receipt.\n   * @param reason - The revert reason.\n   */\n  constructor(receipt: TransactionResultRevertReceipt, reason: RevertReason) {\n    super(receipt, reason);\n    this.name = 'SendMessageRevertError';\n  }\n}\n\n/**\n * @hidden\n *\n * An error class for AssertFailed revert errors.\n */\nexport class AssertFailedRevertError extends RevertError {\n  /**\n   * Creates a new instance of AssertFailedRevertError.\n   *\n   * @param receipt - The transaction revert receipt.\n   * @param reason - The revert reason.\n   */\n  constructor(receipt: TransactionResultRevertReceipt, reason: RevertReason) {\n    super(receipt, reason);\n    this.name = 'AssertFailedRevertError';\n  }\n}\n\n/**\n * @hidden\n *\n * Factory function to create the appropriate RevertError instance based on the given receipt.\n *\n * @param receipt - The transaction revert receipt.\n * @returns The RevertError instance, or undefined if the revert reason is not recognized.\n */\nexport const revertErrorFactory = (\n  receipt: TransactionResultRevertReceipt\n): RevertError | undefined => {\n  const reason = decodeRevertErrorCode(receipt);\n  if (!reason) {\n    return undefined;\n  }\n\n  switch (reason) {\n    case 'RequireFailed':\n      return new RequireRevertError(receipt, reason);\n    case 'TransferToAddressFailed':\n      return new TransferToAddressRevertError(receipt, reason);\n    case 'SendMessageFailed':\n      return new SendMessageRevertError(receipt, reason);\n    case 'AssertFailed':\n      return new AssertFailedRevertError(receipt, reason);\n    default:\n      return new RevertError(receipt, reason);\n  }\n};\n","import type { TransactionResultReceipt, TransactionResultRevertReceipt } from '@fuel-ts/providers';\nimport { ReceiptType } from '@fuel-ts/transactions';\n\nimport type { RevertError } from './revert-error';\nimport { revertErrorFactory } from './revert-error';\n\nconst { warn } = console;\n\nconst getRevertReceipts = (\n  receipts: TransactionResultReceipt[]\n): TransactionResultRevertReceipt[] =>\n  receipts.filter((r) => r.type === ReceiptType.Revert) as TransactionResultRevertReceipt[];\n\nexport class RevertErrorCodes {\n  private revertReceipts: TransactionResultRevertReceipt[];\n\n  constructor(receipts: TransactionResultReceipt[]) {\n    this.revertReceipts = getRevertReceipts(receipts);\n  }\n\n  assert(detailedError: Error): void {\n    const revertError = this.getError();\n    if (revertError) {\n      revertError.cause = detailedError;\n      throw revertError;\n    }\n  }\n\n  getError(): RevertError | undefined {\n    if (!this.revertReceipts.length) {\n      return undefined;\n    }\n\n    if (this.revertReceipts.length !== 1) {\n      warn(\n        'Multiple revert receipts found, expected one. Receipts:',\n        JSON.stringify(this.revertReceipts)\n      );\n    }\n\n    return revertErrorFactory(this.revertReceipts[0]);\n  }\n}\n","import type { TransactionResult } from '@fuel-ts/providers';\nimport { ReceiptType } from '@fuel-ts/transactions';\n\nimport { RevertErrorCodes } from './revert/revert-error-codes';\nimport { getDocs } from './utils';\n\nconst bigintReplacer = (key: unknown, value: unknown) =>\n  typeof value === 'bigint' ? value.toString() : value;\n\n/**\n * @hidden\n */\nexport class ScriptResultDecoderError extends Error {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  logs: any[];\n  constructor(result: TransactionResult, message: string, logs: Array<unknown>) {\n    let docLink = '';\n\n    if (result?.gqlTransaction?.status) {\n      docLink = `${JSON.stringify(getDocs(result.gqlTransaction.status), null, 2)}\\n\\n`;\n    }\n\n    const logsText = logs.length ? `Logs:\\n${JSON.stringify(logs, null, 2)}\\n\\n` : '';\n\n    const receiptsText = `Receipts:\\n${JSON.stringify(\n      result.receipts.map(({ type, ...r }) => ({ type: ReceiptType[type], ...r })),\n      bigintReplacer,\n      2\n    )}`;\n\n    super(`${message}\\n\\n${docLink}${logsText}${receiptsText}`);\n    this.logs = logs;\n\n    new RevertErrorCodes(result.receipts).assert(this);\n  }\n}\n","import { concat } from '@fuel-ts/utils';\nimport type * as asm from '@fuels/vm-asm';\nimport { hexlify } from 'ethers';\n\n/**\n * A wrapper around fuel-asm to make dynamic instructions and convert to different formats\n */\nexport class InstructionSet {\n  #operations: asm.Instruction[];\n\n  constructor(...args: asm.Instruction[]) {\n    this.#operations = args || [];\n  }\n\n  entries(): asm.Instruction[] {\n    return this.#operations;\n  }\n\n  push(...args: asm.Instruction[]) {\n    this.#operations.push(...args);\n  }\n\n  concat(ops: asm.Instruction[]): asm.Instruction[] {\n    return this.#operations.concat(ops);\n  }\n\n  extend(ops: asm.Instruction[]) {\n    this.#operations.push(...ops);\n  }\n\n  toBytes(): Uint8Array {\n    return concat(\n      this.#operations.reduce((instructions, line) => {\n        instructions.push(line.to_bytes());\n        return instructions;\n      }, [] as Uint8Array[])\n    );\n  }\n\n  toHex(): string {\n    return hexlify(this.toBytes());\n  }\n\n  toString() {\n    return `Program:\\n${JSON.stringify(this.#operations, null, 2)}`;\n  }\n\n  byteLength() {\n    return this.toBytes().byteLength;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  ASSET_ID_LEN,\n  CONTRACT_ID_LEN,\n  SCRIPT_FIXED_SIZE,\n  WORD_SIZE,\n  calculateVmTxMemory,\n} from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport type {\n  TransactionResultReturnDataReceipt,\n  TransactionResultRevertReceipt,\n  CallResult,\n  TransactionResultReceipt,\n  TransactionResultReturnReceipt,\n  TransactionResultScriptResultReceipt,\n  TransactionResult,\n} from '@fuel-ts/providers';\nimport type { ReceiptScriptResult } from '@fuel-ts/transactions';\nimport { ReceiptType } from '@fuel-ts/transactions';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nimport { ScriptResultDecoderError } from './errors';\nimport type { CallConfig } from './types';\n\nexport const calculateScriptDataBaseOffset = (maxInputs: number) =>\n  SCRIPT_FIXED_SIZE + calculateVmTxMemory({ maxInputs });\nexport const POINTER_DATA_OFFSET =\n  WORD_SIZE + ASSET_ID_LEN + CONTRACT_ID_LEN + WORD_SIZE + WORD_SIZE;\n/**\n * Represents a script result, containing information about the script execution.\n */\nexport type ScriptResult = {\n  code: BN;\n  gasUsed: BN;\n  receipts: TransactionResultReceipt[];\n  scriptResultReceipt: TransactionResultScriptResultReceipt;\n  returnReceipt:\n    | TransactionResultReturnReceipt\n    | TransactionResultReturnDataReceipt\n    | TransactionResultRevertReceipt;\n  callResult: CallResult;\n};\n\n/**\n * Converts a CallResult to a ScriptResult by extracting relevant information.\n *\n * @param callResult - The CallResult from the script call.\n * @returns The converted ScriptResult.\n */\nfunction callResultToScriptResult(callResult: CallResult): ScriptResult {\n  const receipts = [...callResult.receipts];\n\n  let scriptResultReceipt: ReceiptScriptResult | undefined;\n  let returnReceipt:\n    | TransactionResultReturnReceipt\n    | TransactionResultReturnDataReceipt\n    | TransactionResultRevertReceipt\n    | undefined;\n\n  receipts.forEach((receipt) => {\n    if (receipt.type === ReceiptType.ScriptResult) {\n      scriptResultReceipt = receipt;\n    } else if (\n      receipt.type === ReceiptType.Return ||\n      receipt.type === ReceiptType.ReturnData ||\n      receipt.type === ReceiptType.Revert\n    ) {\n      returnReceipt = receipt;\n    }\n  });\n\n  if (!scriptResultReceipt) {\n    throw new FuelError(\n      ErrorCode.TRANSACTION_ERROR,\n      `The script call result does not contain a 'scriptResultReceipt'.`\n    );\n  }\n\n  if (!returnReceipt) {\n    throw new FuelError(\n      ErrorCode.TRANSACTION_ERROR,\n      `The script call result does not contain a 'returnReceipt'.`\n    );\n  }\n\n  const scriptResult: ScriptResult = {\n    code: scriptResultReceipt.result,\n    gasUsed: scriptResultReceipt.gasUsed,\n    receipts,\n    scriptResultReceipt,\n    returnReceipt,\n    callResult,\n  };\n\n  return scriptResult;\n}\n\n/**\n * Decodes a CallResult using the provided decoder function.\n *\n * @param callResult - The CallResult to decode.\n * @param decoder - The decoding function to apply on the ScriptResult.\n * @param logs - Optional logs associated with the decoding.\n * @returns The decoded result.\n * @throws Throws an error if decoding fails.\n */\nexport function decodeCallResult<TResult>(\n  callResult: CallResult,\n  decoder: (scriptResult: ScriptResult) => TResult,\n  logs: Array<any> = []\n): TResult {\n  try {\n    const scriptResult = callResultToScriptResult(callResult);\n    return decoder(scriptResult);\n  } catch (error) {\n    throw new ScriptResultDecoderError(\n      callResult as TransactionResult,\n      (error as Error).message,\n      logs\n    );\n  }\n}\n\n/**\n * Converts a CallResult to an invocation result based on the provided call configuration.\n *\n * @param callResult - The CallResult from the script call.\n * @param call - The call configuration.\n * @param logs - Optional logs associated with the decoding.\n * @returns The decoded invocation result.\n */\nexport function callResultToInvocationResult<TReturn>(\n  callResult: CallResult,\n  call: CallConfig,\n  logs?: unknown[]\n): TReturn {\n  return decodeCallResult(\n    callResult,\n    (scriptResult: ScriptResult) => {\n      if (scriptResult.returnReceipt.type === ReceiptType.Revert) {\n        throw new FuelError(\n          ErrorCode.SCRIPT_REVERTED,\n          `Script Reverted. Logs: ${JSON.stringify(logs)}`\n        );\n      }\n\n      if (\n        scriptResult.returnReceipt.type !== ReceiptType.Return &&\n        scriptResult.returnReceipt.type !== ReceiptType.ReturnData\n      ) {\n        const { type } = scriptResult.returnReceipt;\n        throw new FuelError(\n          ErrorCode.SCRIPT_REVERTED,\n          `Script Return Type [${type}] Invalid. Logs: ${JSON.stringify({\n            logs,\n            receipt: scriptResult.returnReceipt,\n          })}`\n        );\n      }\n\n      let value;\n      if (scriptResult.returnReceipt.type === ReceiptType.Return) {\n        value = scriptResult.returnReceipt.val;\n      }\n      if (scriptResult.returnReceipt.type === ReceiptType.ReturnData) {\n        const decoded = call.func.decodeOutput(scriptResult.returnReceipt.data);\n        value = decoded[0];\n      }\n\n      return value as TReturn;\n    },\n    logs\n  );\n}\n\nexport type EncodedScriptCall = Uint8Array | { data: Uint8Array; script: Uint8Array };\n\n/**\n * `ScriptRequest` provides functionality to encode and decode script data and results.\n *\n * @template TData - Type of the script data.\n * @template TResult - Type of the script result.\n */\nexport class ScriptRequest<TData = void, TResult = void> {\n  /**\n   * The bytes of the script.\n   */\n  bytes: Uint8Array;\n\n  /**\n   * A function to encode the script data.\n   */\n  scriptDataEncoder: (data: TData) => EncodedScriptCall;\n\n  /**\n   * A function to decode the script result.\n   */\n  scriptResultDecoder: (scriptResult: ScriptResult) => TResult;\n\n  /**\n   * Creates an instance of the ScriptRequest class.\n   *\n   * @param bytes - The bytes of the script.\n   * @param scriptDataEncoder - The script data encoder function.\n   * @param scriptResultDecoder - The script result decoder function.\n   */\n  constructor(\n    bytes: BytesLike,\n    scriptDataEncoder: (data: TData) => EncodedScriptCall,\n    scriptResultDecoder: (scriptResult: ScriptResult) => TResult\n  ) {\n    this.bytes = getBytesCopy(bytes);\n    this.scriptDataEncoder = scriptDataEncoder;\n    this.scriptResultDecoder = scriptResultDecoder;\n  }\n\n  /**\n   * Gets the script data offset for the given bytes.\n   *\n   * @param byteLength - The byte length of the script.\n   * @param maxInputs - The maxInputs value from the chain's consensus params.\n   * @returns The script data offset.\n   */\n  static getScriptDataOffsetWithScriptBytes(byteLength: number, maxInputs: number): number {\n    const scriptDataBaseOffset = calculateVmTxMemory({ maxInputs }) + SCRIPT_FIXED_SIZE;\n    return scriptDataBaseOffset + byteLength;\n  }\n\n  /**\n   * Gets the script data offset.\n   *\n   * @param maxInputs - The maxInputs value from the chain's consensus params.\n   * @returns The script data offset.\n   */\n  getScriptDataOffset(maxInputs: number) {\n    return ScriptRequest.getScriptDataOffsetWithScriptBytes(this.bytes.length, maxInputs);\n  }\n\n  /**\n   * Encodes the data for a script call.\n   *\n   * @param data - The script data.\n   * @returns The encoded data.\n   */\n  encodeScriptData(data: TData): Uint8Array {\n    const callScript = this.scriptDataEncoder(data);\n    // if Uint8Array\n    if (ArrayBuffer.isView(callScript)) {\n      return callScript;\n    }\n\n    // object\n    this.bytes = getBytesCopy(callScript.script);\n    return callScript.data;\n  }\n\n  /**\n   * Decodes the result of a script call.\n   *\n   * @param callResult - The CallResult from the script call.\n   * @param logs - Optional logs associated with the decoding.\n   * @returns The decoded result.\n   */\n  decodeCallResult(callResult: CallResult, logs: Array<any> = []): TResult {\n    return decodeCallResult(callResult, this.scriptResultDecoder, logs);\n  }\n}\n","import { ScriptRequest } from '@fuel-ts/program';\n\n/**\n * @hidden\n *\n * A script that just returns zero\n *\n * Accepts nothing\n * Returns nothing\n *\n * Used for coin transfer transactions\n */\nexport const returnZeroScript = new ScriptRequest(\n  /*\n    Opcode::RET(REG_ZERO)\n    Opcode::NOOP\n  */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  '0x24000000',\n  () => new Uint8Array(0),\n  () => undefined\n);\n","import type { BytesLike } from 'ethers';\nimport { sha256 } from 'ethers';\n\n/**\n * The primary hash function for Fuel\n * SHA-256\n */\nexport function hash(data: BytesLike): string {\n  return sha256(data);\n}\n","class Node {\n  left: number;\n  right: number;\n  parent: number;\n  hash: string;\n  data: string;\n  index: number;\n\n  constructor(\n    left: number,\n    right: number,\n    parent: number,\n    hash: string,\n    data: string,\n    index: number = 0\n  ) {\n    this.left = left;\n    this.right = right;\n    this.parent = parent;\n    this.hash = hash;\n    this.data = data;\n    this.index = index;\n  }\n}\n\nexport default Node;\n","// A set of useful helper methods for testing binary Merkle trees.\nimport { EMPTY, hash } from '../common';\n\nimport Node from './types/node';\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n */\nexport function hashLeaf(data: string): string {\n  return hash('0x00'.concat(data.slice(2)));\n}\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n * hash(prefix +  left + right)\n */\nexport function hashNode(left: string, right: string): string {\n  return hash('0x01'.concat(left.slice(2)).concat(right.slice(2)));\n}\n\n/**\n * Construct tree\n */\nexport function constructTree(data: string[]): Node[] {\n  const nodes = [];\n  for (let i = 0; i < data.length; i += 1) {\n    const hashed = hashLeaf(data[i]);\n    const leaf = new Node(-1, -1, -1, hashed, data[i]);\n    leaf.index = i;\n    nodes.push(leaf);\n  }\n\n  const nodesList = [...nodes];\n  let pNodes = [...nodes];\n\n  let size = (nodes.length + 1) >> 1;\n  let odd = nodes.length & 1;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let i = 0;\n    for (; i < size - odd; i += 1) {\n      const j = i << 1;\n      const hashed = hashNode(pNodes[j].hash, pNodes[j + 1].hash);\n      nodes[i] = new Node(pNodes[j].index, pNodes[j + 1].index, -1, hashed, '');\n      const nextIndex = nodesList.length;\n      nodes[i].index = nextIndex;\n\n      nodesList[pNodes[j].index].parent = nextIndex;\n      nodesList[pNodes[j + 1].index].parent = nextIndex;\n      nodesList.push(nodes[i]);\n    }\n\n    if (size === 1) {\n      break;\n    }\n\n    if (odd === 1) {\n      nodes[i] = pNodes[i << 1];\n    }\n\n    odd = size & 1;\n    size = (size + 1) >> 1;\n    pNodes = [...nodes];\n  }\n  return nodesList;\n}\n\n/**\n * Compute the merkle root\n */\nexport function calcRoot(data: string[]): string {\n  if (!data.length) {\n    return EMPTY;\n  }\n  const nodes = [];\n  for (let i = 0; i < data.length; i += 1) {\n    const hashed = hashLeaf(data[i]);\n    nodes.push(new Node(-1, -1, -1, hashed, data[i]));\n  }\n  let pNodes = nodes;\n  let size = (nodes.length + 1) >> 1;\n  let odd = nodes.length & 1;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let i = 0;\n    for (; i < size - odd; i += 1) {\n      const j = i << 1;\n      const hashed = hashNode(pNodes[j].hash, pNodes[j + 1].hash);\n      nodes[i] = new Node(pNodes[j].index, pNodes[j + 1].index, -1, hashed, '');\n    }\n    if (odd === 1) {\n      nodes[i] = pNodes[i << 1];\n    }\n    if (size === 1) {\n      break;\n    }\n    odd = size & 1;\n    size = (size + 1) >> 1;\n    pNodes = nodes;\n  }\n  return nodes[0].hash;\n}\n\n/**\n * Get proof for the leaf\n */\nexport function getProof(nodes: Node[], id: number): string[] {\n  const proof: string[] = [];\n  for (let prev = id, cur = nodes[id].parent; cur !== -1; prev = cur, cur = nodes[cur].parent) {\n    if (nodes[cur].left === prev) {\n      proof.push(nodes[nodes[cur].right].hash);\n    } else {\n      proof.push(nodes[nodes[cur].left].hash);\n    }\n  }\n  return proof;\n}\n","/// @dev The Fuel testing Merkle trees.\n/// A set of useful helper methods for testing and deploying Merkle trees.\n\nexport const EMPTY = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const ZERO = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const MAX_HEIGHT = 256;\n","import { hash } from '../common';\n\nexport const leafPrefix = '0x00';\nexport const nodePrefix = '0x01';\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encode\n * prefix + key + hash(data)\n */\nexport function hashLeaf(key: string, data: string): [string, string] {\n  const value = '0x00'.concat(key.slice(2)).concat(hash(data).slice(2));\n  return [hash(value), value];\n}\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n * prefix + key + hash(data)\n */\nexport function hashNode(left: string, right: string): [string, string] {\n  const value = '0x01'.concat(left.slice(2)).concat(right.slice(2));\n  return [hash(value), value];\n}\n\n/**\n * Parse a leaf\n */\nexport function parseLeaf(data: string): [string, string] {\n  const len = nodePrefix.length;\n  return ['0x'.concat(data.slice(len, len + 64)), '0x'.concat(data.slice(len + 64))];\n}\n\n/**\n * Parse a nodes\n */\nexport function parseNode(data: string): [string, string] {\n  const len = nodePrefix.length;\n  return ['0x'.concat(data.slice(len, len + 64)), '0x'.concat(data.slice(len + 64))];\n}\n\n/**\n * Check if data is a leaf by checking prefix\n */\nexport function isLeaf(data: string): boolean {\n  return data.slice(0, 4) === leafPrefix;\n}\n","class SparseCompactMerkleProof {\n  SideNodes: string[];\n  NonMembershipLeafData: string;\n  BitMask: number[];\n  NumSideNodes: number;\n  SiblingData: string;\n\n  constructor(\n    SideNodes: string[],\n    NonMembershipLeafData: string,\n    Bitmask: number[],\n    NumSideNodes: number,\n    SiblingData: string\n  ) {\n    this.SideNodes = SideNodes;\n    this.NonMembershipLeafData = NonMembershipLeafData;\n    this.BitMask = Bitmask;\n    this.NumSideNodes = NumSideNodes;\n    this.SiblingData = SiblingData;\n  }\n}\n\nexport default SparseCompactMerkleProof;\n","// Sparse Merkle proof\nclass SparseMerkleProof {\n  SideNodes: string[];\n  NonMembershipLeafData: string;\n  SiblingData: string;\n\n  constructor(sideNodes: string[], NonMembershipLeafData: string, SiblingData: string) {\n    this.SideNodes = sideNodes;\n    this.NonMembershipLeafData = NonMembershipLeafData;\n    this.SiblingData = SiblingData;\n  }\n}\n\nexport default SparseMerkleProof;\n","export const ZERO = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const EMPTY = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const MAX_HEIGHT = 256;\n\nexport interface MapStore {\n  [key: string]: string;\n}\n\n/**\n * Gets the bit at an offset from the most significant bit\n */\nexport function getBitAtFromMSB(data: string, position: number): number {\n  // if int(data[position / 8]) & (1 << (8 - 1 - uint(position) % 8)) > 0\n\n  // Slice off '0x'\n  const slicedData = data.slice(2);\n  // Get byte that contains the specified position\n  const byte = '0x'.concat(\n    slicedData.slice(Math.floor(position / 8) * 2, Math.floor(position / 8) * 2 + 2)\n  );\n  // Get bits from specified position within that byte\n  const bits = Number(byte) & (1 << (8 - 1 - (position % 8)));\n\n  // Bit at position = 0 IFF bits > 0.\n  if (bits > 0) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * Reverse the nodes position\n */\nexport function reverseSideNodes(sideNodes: string[]): string[] {\n  let left = 0;\n  let right = sideNodes.length - 1;\n  const reversedSideNodes: string[] = sideNodes;\n\n  while (left < right) {\n    [reversedSideNodes[left], reversedSideNodes[right]] = [\n      reversedSideNodes[right],\n      reversedSideNodes[left],\n    ];\n    left += 1;\n    right -= 1;\n  }\n\n  return reversedSideNodes;\n}\n\n/**\n * Counts the common bit at at an offset from the most significant bit\n * between two inputs\n */\nexport function countCommonPrefix(data1: string, data2: string): number {\n  let count = 0;\n  for (let i = 0; i < MAX_HEIGHT; i += 1) {\n    if (getBitAtFromMSB(data1, i) === getBitAtFromMSB(data2, i)) {\n      count += 1;\n    } else {\n      break;\n    }\n  }\n  return count;\n}\n","/// @dev The Fuel testing Merkle trees.\n/// A set of useful helper methods for testing and deploying Merkle trees.\nimport { hash } from '../common';\n\nimport { compactProof } from './proofs';\nimport { isLeaf, hashLeaf, hashNode, parseLeaf, parseNode } from './treeHasher';\nimport type SparseCompactMerkleProof from './types/sparseCompactMerkleProof';\nimport SparseMerkleProof from './types/sparseMerkleProof';\nimport type { MapStore } from './utils';\nimport { ZERO, MAX_HEIGHT, getBitAtFromMSB, reverseSideNodes, countCommonPrefix } from './utils';\n\nexport class SparseMerkleTree {\n  ms: MapStore;\n\n  root: string;\n\n  constructor() {\n    const ms: MapStore = {};\n    this.ms = ms;\n    this.root = ZERO;\n    this.ms[this.root] = ZERO;\n  }\n\n  get(key: string): string {\n    return this.ms[key];\n  }\n\n  set(key: string, value: string): void {\n    this.ms[key] = value;\n  }\n\n  setRoot(root: string): void {\n    this.root = root;\n  }\n\n  sideNodesForRoot(key: string, root: string): [string[], string, string, string] {\n    const sideNodes: string[] = [];\n\n    // If the root is a placeholder, there are no sidenodes to return.\n    // The data is nil, and the sibling is nil\n    if (root === ZERO) {\n      return [sideNodes, ZERO, '', ''];\n    }\n\n    let currentData = this.get(root);\n\n    // If the root is a leaf, there are also no sidenodes to return.\n    // The data is the leaf data, and the sibling is nil\n    if (isLeaf(currentData)) {\n      return [sideNodes, root, currentData, ''];\n    }\n\n    let leftNode;\n    let rightNode;\n    let nodeHash = '';\n    let sideNode = '';\n\n    for (let i = 0; i < MAX_HEIGHT; i += 1) {\n      [leftNode, rightNode] = parseNode(currentData);\n\n      if (getBitAtFromMSB(key, i) === 1) {\n        sideNode = leftNode;\n        nodeHash = rightNode;\n      } else {\n        sideNode = rightNode;\n        nodeHash = leftNode;\n      }\n\n      sideNodes.push(sideNode);\n\n      // If the node is a placeholder, we've reached the end.\n      if (nodeHash === ZERO) {\n        currentData = '';\n        break;\n      }\n\n      currentData = this.get(nodeHash);\n\n      // If the node is a leaf, we've reached the end.\n      if (isLeaf(currentData)) {\n        break;\n      }\n    }\n\n    const siblingData = this.get(sideNode);\n\n    return [reverseSideNodes(sideNodes), nodeHash, currentData, siblingData];\n  }\n\n  deleteWithSideNodes(\n    key: string,\n    sideNodes: string[],\n    oldLeafHash: string,\n    oldLeafData: string\n  ): string {\n    // If value already zero, deletion changes nothing. Just return current root\n\n    if (oldLeafHash === ZERO) {\n      return this.root;\n    }\n\n    // If key is already empty (different key found in its place), deletion changed nothing. Just return current root\n    const [actualPath] = parseLeaf(oldLeafData);\n\n    if (actualPath !== key) {\n      return this.root;\n    }\n\n    let currentHash = '';\n    let currentData = '';\n    let sideNode = '';\n    let sideNodeValue = '';\n    let nonPlaceholderReached = false;\n\n    for (let i = 0; i < sideNodes.length; i += 1) {\n      if (sideNodes[i] === '') {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      sideNode = sideNodes[i];\n\n      if (currentData === '') {\n        sideNodeValue = this.get(sideNode);\n\n        if (isLeaf(sideNodeValue)) {\n          // This is the leaf sibling that needs to be percolated up the tree.\n          currentHash = sideNode;\n          currentData = sideNode;\n          // eslint-disable-next-line no-continue\n          continue;\n        } else {\n          // This is the node sibling that needs to be left in its place.\n          currentData = ZERO;\n          nonPlaceholderReached = true;\n        }\n      }\n\n      if (!nonPlaceholderReached && sideNode === ZERO) {\n        // We found another placeholder sibling node, keep going up the\n        // tree until we find the first sibling that is not a placeholder.\n        // eslint-disable-next-line no-continue\n        continue;\n      } else if (!nonPlaceholderReached) {\n        // We found the first sibling node that is not a placeholder, it is\n        // time to insert our leaf sibling node here.\n        nonPlaceholderReached = true;\n      }\n\n      if (getBitAtFromMSB(key, sideNodes.length - 1 - i) === 1) {\n        [currentHash, currentData] = hashNode(sideNode, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, sideNode);\n      }\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    // The tree is empty; return placeholder value as root.\n    // How can currentHash be '' / nil if it's a hash ?\n    if (currentHash === '') {\n      currentHash = ZERO;\n    }\n\n    return currentHash;\n  }\n\n  updateWithSideNodes(\n    key: string,\n    value: string,\n    sideNodes: string[],\n    oldLeafHash: string,\n    oldLeafData: string\n  ): string {\n    let currentHash;\n    let currentData;\n\n    this.set(hash(value), value);\n\n    [currentHash, currentData] = hashLeaf(key, value);\n    this.set(currentHash, currentData);\n\n    currentData = currentHash;\n\n    // If the leaf node that sibling nodes lead to has a different actual path\n    // than the leaf node being updated, we need to create an intermediate node\n    // with this leaf node and the new leaf node as children.\n    //\n    // First, get the number of bits that the paths of the two leaf nodes share\n    // in common as a prefix.\n\n    let commonPrefixCount;\n\n    if (oldLeafHash === ZERO) {\n      commonPrefixCount = MAX_HEIGHT;\n    } else {\n      const [actualPath] = parseLeaf(oldLeafData);\n      commonPrefixCount = countCommonPrefix(key, actualPath);\n    }\n\n    if (commonPrefixCount !== MAX_HEIGHT) {\n      if (getBitAtFromMSB(key, commonPrefixCount) === 1) {\n        [currentHash, currentData] = hashNode(oldLeafHash, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, oldLeafHash);\n      }\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    for (let i = 0; i < MAX_HEIGHT; i += 1) {\n      let sideNode;\n      const offsetOfSideNodes = MAX_HEIGHT - sideNodes.length;\n\n      // If there are no sidenodes at this height, but the number of\n      // bits that the paths of the two leaf nodes share in common is\n      // greater than this height, then we need to build up the tree\n      // to this height with placeholder values at siblings.\n\n      if (i - offsetOfSideNodes < 0 || sideNodes[i - offsetOfSideNodes] === '') {\n        if (commonPrefixCount !== MAX_HEIGHT && commonPrefixCount > MAX_HEIGHT - 1 - i) {\n          sideNode = ZERO;\n        } else {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n      } else {\n        sideNode = sideNodes[i - offsetOfSideNodes];\n      }\n\n      if (getBitAtFromMSB(key, MAX_HEIGHT - 1 - i) === 1) {\n        [currentHash, currentData] = hashNode(sideNode, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, sideNode);\n      }\n\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    return currentHash;\n  }\n\n  update(key: string, value: string): void {\n    const [sideNodes, oldLeafHash, oldLeafData] = this.sideNodesForRoot(key, this.root);\n    const newRoot = this.updateWithSideNodes(key, value, sideNodes, oldLeafHash, oldLeafData);\n    this.setRoot(newRoot);\n  }\n\n  delete(key: string): void {\n    const [sideNodes, oldLeafHash, oldLeafData] = this.sideNodesForRoot(key, this.root);\n    const newRoot = this.deleteWithSideNodes(key, sideNodes, oldLeafHash, oldLeafData);\n    this.setRoot(newRoot);\n  }\n\n  prove(key: string): SparseMerkleProof {\n    const [sideNodes, leafHash, leafData, siblingData] = this.sideNodesForRoot(key, this.root);\n\n    const nonEmptySideNodes: string[] = [];\n\n    for (let i = 0; i < sideNodes.length; i += 1) {\n      if (sideNodes[i] !== '') {\n        nonEmptySideNodes.push(sideNodes[i]);\n      }\n    }\n\n    // Deal with non-membership proofs. If the leaf hash is the placeholder\n    // value, we do not need to add anything else to the proof.\n    let nonMembershipLeafData = '';\n    if (leafHash !== ZERO) {\n      const [actualPath] = parseLeaf(leafData);\n      if (actualPath !== key) {\n        // This is a non-membership proof that involves showing a different leaf.\n        // Add the leaf data to the proof.\n        nonMembershipLeafData = leafData;\n      }\n    }\n\n    const proof = new SparseMerkleProof(nonEmptySideNodes, nonMembershipLeafData, siblingData);\n    return proof;\n  }\n\n  proveCompacted(key: string): SparseCompactMerkleProof {\n    const proof = this.prove(key);\n    const compactedProof = compactProof(proof);\n    return compactedProof;\n  }\n}\n","import { hash } from '../common';\n\nimport { hashLeaf, hashNode, parseLeaf } from './treeHasher';\nimport SparseCompactMerkleProof from './types/sparseCompactMerkleProof';\nimport SparseMerkleProof from './types/sparseMerkleProof';\nimport { getBitAtFromMSB, ZERO } from './utils';\n\n/**\n * Verify a merkle proof\n */\nexport function verifyProof(\n  proof: SparseMerkleProof,\n  root: string,\n  key: string,\n  value: string\n): [boolean, string[][]] {\n  const updates: string[][] = [[]];\n\n  // Detemine what the leaf hash should be\n  let currentHash;\n  let currentData;\n  let actualPath;\n  let valueHash;\n\n  if (value === ZERO) {\n    // Non-membership proof\n    if (proof.NonMembershipLeafData === '') {\n      currentHash = ZERO;\n    } else {\n      // leaf is an unrelated leaf\n      [actualPath, valueHash] = parseLeaf(proof.NonMembershipLeafData);\n      if (actualPath === key) {\n        // Leaf does exist : non-membership proof failed\n        return [false, []];\n      }\n      [currentHash, currentData] = hashLeaf(actualPath, valueHash);\n      updates.push([currentHash, currentData]);\n    }\n  } else {\n    // Membership proof\n    valueHash = hash(value);\n    updates.push([valueHash, value]);\n\n    [currentHash, currentData] = hashLeaf(key, value);\n    updates.push([currentHash, currentData]);\n  }\n\n  // Recompute root\n  for (let i = 0; i < proof.SideNodes.length; i += 1) {\n    const node = proof.SideNodes[i];\n\n    if (getBitAtFromMSB(key, proof.SideNodes.length - 1 - i) === 1) {\n      [currentHash, currentData] = hashNode(node, currentHash);\n    } else {\n      [currentHash, currentData] = hashNode(currentHash, node);\n    }\n\n    updates.push([currentHash, currentData]);\n  }\n\n  return [currentHash === root, updates];\n}\n\n/**\n * Compact a Sparse Merkle Proof using a bitmask\n */\nexport function compactProof(proof: SparseMerkleProof): SparseCompactMerkleProof {\n  const bitMask: number[] = [];\n  const compactedSideNodes: string[] = [];\n  let node;\n\n  for (let i = 0; i < proof.SideNodes.length; i += 1) {\n    node = proof.SideNodes[i];\n    if (node === ZERO) {\n      bitMask.push(0);\n    } else {\n      compactedSideNodes.push(node);\n      bitMask.push(1);\n    }\n  }\n  const compactedProof = new SparseCompactMerkleProof(\n    compactedSideNodes,\n    proof.NonMembershipLeafData,\n    bitMask,\n    proof.SideNodes.length,\n    proof.SiblingData\n  );\n  return compactedProof;\n}\n\n/**\n * Decompact a Sparse Merkle Proof\n */\nexport function decompactProof(proof: SparseCompactMerkleProof): SparseMerkleProof {\n  const decompactedSideNodes: string[] = [];\n  let position = 0;\n\n  for (let i = 0; i < proof.NumSideNodes; i += 1) {\n    if (proof.BitMask[i] === 0) {\n      decompactedSideNodes[i] = ZERO;\n    } else {\n      decompactedSideNodes[i] = proof.SideNodes[position];\n      position += 1;\n    }\n  }\n  const decompactedProof = new SparseMerkleProof(\n    decompactedSideNodes,\n    proof.NonMembershipLeafData,\n    proof.SiblingData\n  );\n\n  return decompactedProof;\n}\n","import { FuelError } from '@fuel-ts/errors';\nimport { calcRoot, SparseMerkleTree } from '@fuel-ts/merkle';\nimport type { StorageSlot } from '@fuel-ts/transactions';\nimport { chunkAndPadBytes } from '@fuel-ts/utils';\nimport type { BytesLike } from 'ethers';\nimport { sha256, hexlify, concat, getBytesCopy } from 'ethers';\n\n/**\n * @hidden\n *\n * Get the Merkle root of a contract's bytecode.\n *\n * @param bytecode - The bytecode of the contract.\n * @returns The Merkle root of the contract's bytecode.\n */\nexport const getContractRoot = (bytecode: BytesLike): string => {\n  const chunkSize = 16 * 1024;\n  const bytes = getBytesCopy(bytecode);\n  const chunks = chunkAndPadBytes(bytes, chunkSize);\n\n  return calcRoot(chunks.map((c) => hexlify(c)));\n};\n\n/**\n * @hidden\n *\n * Get the Merkle root of a contract's storage slots.\n *\n * @param storageSlots - An array of storage slots containing key-value pairs.\n * @returns The Merkle root of the contract's storage slots.\n */\nexport const getContractStorageRoot = (storageSlots: StorageSlot[]): string => {\n  const tree = new SparseMerkleTree();\n\n  storageSlots.forEach(({ key, value }) => tree.update(sha256(key), value));\n\n  return tree.root;\n};\n\n/**\n * @hidden\n *\n * Get the contract ID of a contract based on its bytecode, salt,\n * and state root.\n *\n * @param bytecode - The bytecode of the contract.\n * @param salt - The salt value used for contract creation.\n * @param stateRoot - The state root of the contract.\n * @returns The contract ID of the contract.\n */\nexport const getContractId = (\n  bytecode: BytesLike,\n  salt: BytesLike,\n  stateRoot: BytesLike\n): string => {\n  const root = getContractRoot(getBytesCopy(bytecode));\n  const contractId = sha256(concat(['0x4655454C', salt, root, stateRoot]));\n  return contractId;\n};\n\n/**\n * @hidden\n *\n * Ensures that a string is hexlified.\n *\n * @param value - The value to be hexlified.\n * @param isKnownHex - Required if using hex values that need to be converted\n * @returns The input value hexlified with prefix.\n */\nexport const hexlifyWithPrefix = (value: string, isKnownHex = false) => {\n  if (value.startsWith('0x')) {\n    return hexlify(value);\n  }\n\n  if (isKnownHex) {\n    return hexlify(`0x${value}`);\n  }\n\n  throw new FuelError(FuelError.CODES.UNEXPECTED_HEX_VALUE, `Value should be hex string ${value}.`);\n};\n","export const english = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo',\n];\n","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    const bytes = getBytes(_value);\n\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) { break; }\n        result = Alphabet[0] + result;\n    }\n\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { getBytesCopy, sha256 } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\n/* Mnemonic phrase composed by words from the provided wordlist it can be a text or a array of words */\nexport type MnemonicPhrase = string | Array<string>;\n\nexport function toUtf8Bytes(stri: string): Uint8Array {\n  const str = stri.normalize('NFKD');\n\n  const result = [];\n  for (let i = 0; i < str.length; i += 1) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push((c >> 6) | 0xc0);\n      result.push((c & 0x3f) | 0x80);\n    } else if ((c & 0xfc00) === 0xd800) {\n      i += 1;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new FuelError(\n          ErrorCode.INVALID_INPUT_PARAMETERS,\n          'Invalid UTF-8 in the input string.'\n        );\n      }\n\n      // Surrogate Pair\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push((pair >> 18) | 0xf0);\n      result.push(((pair >> 12) & 0x3f) | 0x80);\n      result.push(((pair >> 6) & 0x3f) | 0x80);\n      result.push((pair & 0x3f) | 0x80);\n    } else {\n      result.push((c >> 12) | 0xe0);\n      result.push(((c >> 6) & 0x3f) | 0x80);\n      result.push((c & 0x3f) | 0x80);\n    }\n  }\n\n  return Uint8Array.from(result);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n  return (1 << bits) - 1;\n}\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n  return ((1 << bits) - 1) << (8 - bits);\n}\n\nexport function getWords(mnemonic: MnemonicPhrase): Array<string> {\n  if (!Array.isArray(mnemonic)) {\n    return mnemonic.split(/\\s+/);\n  }\n  return mnemonic;\n}\n\nexport function getPhrase(mnemonic: MnemonicPhrase): string {\n  if (Array.isArray(mnemonic)) {\n    return mnemonic.join(' ');\n  }\n  return mnemonic;\n}\n\nexport function entropyToMnemonicIndices(entropy: Uint8Array): Array<number> {\n  const indices: Array<number> = [0];\n\n  let remainingBits = 11;\n  for (let i = 0; i < entropy.length; i += 1) {\n    if (remainingBits > 8) {\n      indices[indices.length - 1] <<= 8;\n      indices[indices.length - 1] |= entropy[i];\n\n      remainingBits -= 8;\n      // This byte will complete an 11-bit index\n    } else {\n      indices[indices.length - 1] <<= remainingBits;\n      indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n      // Start the next word\n      indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n      remainingBits += 3;\n    }\n  }\n\n  // Compute the checksum bits\n  const checksumBits = entropy.length / 4;\n  const checksum = getBytesCopy(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n  // Shift the checksum into the word indices\n  indices[indices.length - 1] <<= checksumBits;\n  indices[indices.length - 1] |= checksum >> (8 - checksumBits);\n\n  return indices;\n}\n\nexport function mnemonicWordsToEntropy(words: Array<string>, wordlist: Array<string>): BytesLike {\n  const size = Math.ceil((11 * words.length) / 8);\n  const entropy = getBytesCopy(new Uint8Array(size));\n\n  let offset = 0;\n  for (let i = 0; i < words.length; i += 1) {\n    const index = wordlist.indexOf(words[i].normalize('NFKD'));\n    if (index === -1) {\n      throw new FuelError(\n        ErrorCode.INVALID_MNEMONIC,\n        `Invalid mnemonic: the word '${words[i]}' is not found in the provided wordlist.`\n      );\n    }\n\n    for (let bit = 0; bit < 11; bit += 1) {\n      if (index & (1 << (10 - bit))) {\n        entropy[offset >> 3] |= 1 << (7 - (offset % 8));\n      }\n      offset += 1;\n    }\n  }\n  const entropyBits = (32 * words.length) / 3;\n  const checksumBits = words.length / 3;\n  const checksumMask = getUpperMask(checksumBits);\n  const checksum = getBytesCopy(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n    throw new FuelError(\n      ErrorCode.INVALID_CHECKSUM,\n      'Checksum validation failed for the provided mnemonic.'\n    );\n  }\n\n  return entropy.slice(0, entropyBits / 8);\n}\n","import { randomBytes } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { english } from '@fuel-ts/wordlists';\nimport type { BytesLike } from 'ethers';\nimport {\n  concat,\n  hexlify,\n  dataSlice,\n  pbkdf2,\n  sha256,\n  computeHmac,\n  encodeBase58,\n  getBytesCopy,\n} from 'ethers';\n\nimport type { MnemonicPhrase } from './utils';\nimport {\n  entropyToMnemonicIndices,\n  getWords,\n  getPhrase,\n  mnemonicWordsToEntropy,\n  toUtf8Bytes,\n} from './utils';\n\n//\n// Constants\n//\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes('Bitcoin seed');\n// 4 byte: version bytes (mainnet: 0x0488B21E public, 0x0488ADE4 private; testnet: 0x043587CF public, 0x04358394 private)\nconst MainnetPRV = '0x0488ade4';\nconst TestnetPRV = '0x04358394';\nexport const MNEMONIC_SIZES = [12, 15, 18, 21, 24];\n\nfunction assertWordList(wordlist: Array<string>) {\n  if (wordlist.length !== 2048) {\n    throw new FuelError(\n      ErrorCode.INVALID_WORD_LIST,\n      `Expected word list length of 2048, but got ${wordlist.length}.`\n    );\n  }\n}\n\nfunction assertEntropy(entropy: BytesLike) {\n  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n    throw new FuelError(\n      ErrorCode.INVALID_ENTROPY,\n      `Entropy should be between 16 and 32 bytes and a multiple of 4, but got ${entropy.length} bytes.`\n    );\n  }\n}\n\nfunction assertMnemonic(words: Array<string>) {\n  if (!MNEMONIC_SIZES.includes(words.length)) {\n    const errorMsg = `Invalid mnemonic size. Expected one of [${MNEMONIC_SIZES.join(\n      ', '\n    )}] words, but got ${words.length}.`;\n\n    throw new FuelError(ErrorCode.INVALID_MNEMONIC, errorMsg);\n  }\n}\n\nclass Mnemonic {\n  wordlist: Array<string>;\n\n  /**\n   *\n   * @param wordlist - Provide a wordlist with the list of words used to generate the mnemonic phrase. The default value is the English list.\n   * @returns Mnemonic instance\n   */\n  constructor(wordlist: Array<string> = english) {\n    this.wordlist = wordlist;\n\n    assertWordList(this.wordlist);\n  }\n\n  /**\n   *\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @returns Entropy hash\n   */\n  mnemonicToEntropy(phrase: MnemonicPhrase) {\n    return Mnemonic.mnemonicToEntropy(phrase, this.wordlist);\n  }\n\n  /**\n   *\n   * @param entropy - Entropy source to the mnemonic phrase.\n   * @returns Mnemonic phrase\n   */\n  entropyToMnemonic(entropy: BytesLike) {\n    return Mnemonic.entropyToMnemonic(entropy, this.wordlist);\n  }\n\n  /**\n   *\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param wordlist - Provide a wordlist with the list of words used to generate the mnemonic phrase. The default value is the English list.\n   * @returns Mnemonic phrase\n   */\n  static mnemonicToEntropy(phrase: MnemonicPhrase, wordlist: Array<string> = english): string {\n    const words = getWords(phrase);\n\n    assertMnemonic(words);\n\n    return hexlify(mnemonicWordsToEntropy(words, wordlist));\n  }\n\n  /**\n   * @param entropy - Entropy source to the mnemonic phrase.\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static entropyToMnemonic(entropy: BytesLike, wordlist: Array<string> = english): string {\n    const entropyBytes = getBytesCopy(entropy);\n\n    assertWordList(wordlist);\n    assertEntropy(entropyBytes);\n\n    return entropyToMnemonicIndices(entropyBytes)\n      .map((i) => wordlist[i])\n      .join(' ');\n  }\n\n  /**\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param passphrase - Add additional security to protect the generated seed with a memorized passphrase. `Note: if the owner forgot the passphrase, all wallets and accounts derive from the phrase will be lost.`\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static mnemonicToSeed(phrase: MnemonicPhrase, passphrase: BytesLike = '') {\n    assertMnemonic(getWords(phrase));\n\n    const phraseBytes = toUtf8Bytes(getPhrase(phrase));\n    const salt = toUtf8Bytes(`mnemonic${passphrase}`);\n\n    return pbkdf2(phraseBytes, salt, 2048, 64, 'sha512');\n  }\n\n  /**\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param passphrase - Add additional security to protect the generated seed with a memorized passphrase. `Note: if the owner forgot the passphrase, all wallets and accounts derive from the phrase will be lost.`\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static mnemonicToMasterKeys(phrase: MnemonicPhrase, passphrase: BytesLike = '') {\n    const seed = Mnemonic.mnemonicToSeed(phrase, passphrase);\n    return Mnemonic.masterKeysFromSeed(seed);\n  }\n\n  /**\n   * Validates if given mnemonic is  valid\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @returns true if phrase is a valid mnemonic\n   */\n  static isMnemonicValid(phrase: string) {\n    const words = getWords(phrase);\n\n    let i: number = 0;\n\n    try {\n      assertMnemonic(words);\n    } catch {\n      return false;\n    }\n\n    while (i < words.length) {\n      if (Mnemonic.binarySearch(words[i]) === false) {\n        return false;\n      }\n      i += 1;\n    }\n\n    return true;\n  }\n\n  static binarySearch(target: string): boolean {\n    const words = english;\n    let left: number = 0;\n    let right: number = words.length - 1;\n\n    while (left <= right) {\n      const mid: number = Math.floor((left + right) / 2);\n\n      if (words[mid] === target) {\n        return true;\n      }\n      if (target < words[mid]) {\n        right = mid - 1;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param seed - BIP39 seed\n   * @param testnet - Inform if should use testnet or mainnet prefix, the default value is true (`mainnet`).\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static masterKeysFromSeed(seed: string): Uint8Array {\n    const seedArray = getBytesCopy(seed);\n\n    if (seedArray.length < 16 || seedArray.length > 64) {\n      throw new FuelError(\n        ErrorCode.INVALID_SEED,\n        `Seed length should be between 16 and 64 bytes, but received ${seedArray.length} bytes.`\n      );\n    }\n\n    return getBytesCopy(computeHmac('sha512', MasterSecret, seedArray));\n  }\n\n  /**\n   * Get the extendKey as defined on BIP-32 from the provided seed\n   *\n   * @param seed - BIP39 seed\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns BIP-32 extended private key\n   */\n  static seedToExtendedKey(seed: string, testnet: boolean = false): string {\n    const masterKey = Mnemonic.masterKeysFromSeed(seed);\n    const prefix = getBytesCopy(testnet ? TestnetPRV : MainnetPRV);\n    const depth = '0x00';\n    const fingerprint = '0x00000000';\n    const index = '0x00000000';\n    // last 32 bites from the key\n    const chainCode = masterKey.slice(32);\n    // first 32 bites from the key\n    const privateKey = masterKey.slice(0, 32);\n    const extendedKey = concat([\n      prefix,\n      depth,\n      fingerprint,\n      index,\n      chainCode,\n      concat(['0x00', privateKey]),\n    ]);\n    const checksum = dataSlice(sha256(sha256(extendedKey)), 0, 4);\n\n    return encodeBase58(concat([extendedKey, checksum]));\n  }\n\n  /**\n   *  Create a new mnemonic using a randomly generated number as entropy.\n   *  As defined in BIP39, the entropy must be a multiple of 32 bits, and its size must be between 128 and 256 bits.\n   *  Therefore, the possible values for `strength` are 128, 160, 192, 224, and 256.\n   *  If not provided, the default entropy length will be set to 256 bits.\n   *  The return is a list of words that encodes the generated entropy.\n   *\n   *\n   * @param size - Number of bytes used as an entropy\n   * @param extraEntropy - Optional extra entropy to increase randomness\n   * @returns A randomly generated mnemonic\n   */\n  static generate(size: number = 32, extraEntropy: BytesLike = '') {\n    const entropy = extraEntropy\n      ? sha256(concat([randomBytes(size), getBytesCopy(extraEntropy)]))\n      : randomBytes(size);\n    return Mnemonic.entropyToMnemonic(entropy);\n  }\n}\n\nexport default Mnemonic;\n","import { Address } from '@fuel-ts/address';\nimport { randomBytes } from '@fuel-ts/crypto';\nimport { hash } from '@fuel-ts/hasher';\nimport { toBytes } from '@fuel-ts/math';\nimport * as elliptic from 'elliptic';\nimport { hexlify, concat, getBytesCopy } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\n/* Importing `ec` like this to avoid the 'Requested module is a CommonJS module,\n * which may not support all module.exports as named exports' error\n * @see https://github.com/FuelLabs/fuels-ts/issues/841\n */\nconst { ec: EC } = elliptic;\n\n/**\n * Return elliptic instance with curve secp256k1\n */\nexport function getCurve() {\n  return new EC('secp256k1');\n}\n\nclass Signer {\n  readonly address: Address;\n\n  readonly publicKey: string;\n\n  readonly compressedPublicKey: string;\n\n  readonly privateKey: string;\n\n  /**\n   * Create a Signer instance from a given private key\n   *\n   * @param privateKey - The private key to use for signing\n   * @returns A new Signer instance\n   */\n  constructor(privateKey: BytesLike) {\n    // A lot of common tools do not prefix private keys with a 0x\n    if (typeof privateKey === 'string') {\n      if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n        // eslint-disable-next-line no-param-reassign\n        privateKey = `0x${privateKey}`;\n      }\n    }\n\n    // Convert to byte array, normalize private key input allowing it to be BytesLike\n    // like remove 0x prefix and accept array of bytes\n    const privateKeyBytes = getBytesCopy(privateKey);\n    const keyPair = getCurve().keyFromPrivate(privateKeyBytes, 'hex');\n\n    // Slice(1) removes the encoding scheme from the public key\n    this.compressedPublicKey = hexlify(Uint8Array.from(keyPair.getPublic(true, 'array')));\n    this.publicKey = hexlify(Uint8Array.from(keyPair.getPublic(false, 'array').slice(1)));\n    this.privateKey = hexlify(privateKeyBytes);\n    this.address = Address.fromPublicKey(this.publicKey);\n  }\n\n  /**\n   * Sign data using the Signer instance\n   *\n   * Signature is a 64 byte array of the concatenated r and s values with the compressed recoveryParam byte. [Read more](FuelLabs/fuel-specs/specs/protocol/cryptographic_primitives.md#public-key-cryptography)\n   *\n   * @param data - The data to be sign\n   * @returns hashed signature\n   */\n  sign(data: BytesLike) {\n    const keyPair = getCurve().keyFromPrivate(getBytesCopy(this.privateKey), 'hex');\n    const signature = keyPair.sign(getBytesCopy(data), {\n      canonical: true,\n    });\n    const r = toBytes(signature.r, 32);\n    const s = toBytes(signature.s, 32);\n\n    // add recoveryParam to first s byte\n    s[0] |= (signature.recoveryParam || 0) << 7;\n\n    return concat([r, s]);\n  }\n\n  /**\n   * Add point on the current elliptic curve\n   *\n   * @param point - Point to add on the curve\n   * @returns compressed point on the curve\n   */\n  addPoint(point: BytesLike) {\n    const p0 = getCurve().keyFromPublic(getBytesCopy(this.compressedPublicKey));\n    const p1 = getCurve().keyFromPublic(getBytesCopy(point));\n    const result = p0.getPublic().add(p1.getPublic());\n\n    return hexlify(Uint8Array.from(result.encode('array', true)));\n  }\n\n  /**\n   * Recover the public key from a signature performed with [`sign`](#sign).\n   *\n   * @param data - Data\n   * @param signature - hashed signature\n   * @returns public key from signature from the\n   */\n  static recoverPublicKey(data: BytesLike, signature: BytesLike): string {\n    const signedMessageBytes = getBytesCopy(signature);\n    const r = signedMessageBytes.slice(0, 32);\n    const s = signedMessageBytes.slice(32, 64);\n    const recoveryParam = (s[0] & 0x80) >> 7;\n\n    // remove recoveryParam from s first byte\n    s[0] &= 0x7f;\n\n    const publicKey = getCurve()\n      .recoverPubKey(getBytesCopy(data), { r, s }, recoveryParam)\n      .encode('array', false)\n      .slice(1);\n\n    return hexlify(Uint8Array.from(publicKey));\n  }\n\n  /**\n   * Recover the address from a signature performed with [`sign`](#sign).\n   *\n   * @param data - Data\n   * @param signature - Signature\n   * @returns Address from signature\n   */\n  static recoverAddress(data: BytesLike, signature: BytesLike): Address {\n    return Address.fromPublicKey(Signer.recoverPublicKey(data, signature));\n  }\n\n  /**\n   * Generate a random privateKey\n   *\n   * @param entropy - Adds extra entropy to generate the privateKey\n   * @returns random 32-byte hashed\n   */\n  static generatePrivateKey(entropy?: BytesLike) {\n    return entropy ? hash(concat([randomBytes(32), getBytesCopy(entropy)])) : randomBytes(32);\n  }\n\n  /**\n   * Extended publicKey from a compact publicKey\n   *\n   * @param publicKey - Compact publicKey\n   * @returns extended publicKey\n   */\n  static extendPublicKey(publicKey: BytesLike) {\n    const keyPair = getCurve().keyFromPublic(getBytesCopy(publicKey));\n    return hexlify(Uint8Array.from(keyPair.getPublic(false, 'array').slice(1)));\n  }\n}\n\nexport default Signer;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn, toBytes, toHex } from '@fuel-ts/math';\nimport { Mnemonic } from '@fuel-ts/mnemonic';\nimport { Signer } from '@fuel-ts/signer';\nimport type { BytesLike } from 'ethers';\nimport {\n  toBeHex,\n  dataSlice,\n  hexlify,\n  encodeBase58,\n  decodeBase58,\n  sha256,\n  computeHmac,\n  ripemd160,\n  getBytesCopy,\n  concat,\n} from 'ethers';\n\n// \"Bitcoin seed\"\nconst HARDENED_INDEX = 0x80000000;\n\n// 4 byte: version bytes (mainnet: 0x0488B21E public, 0x0488ADE4 private; testnet: 0x043587CF public, 0x04358394 private)\nconst MainnetPRV = hexlify('0x0488ade4');\nconst MainnetPUB = hexlify('0x0488b21e');\nconst TestnetPRV = hexlify('0x04358394');\nconst TestnetPUB = hexlify('0x043587cf');\n\nfunction base58check(data: Uint8Array): string {\n  return encodeBase58(concat([data, dataSlice(sha256(sha256(data)), 0, 4)]));\n}\n\nfunction getExtendedKeyPrefix(isPublic: boolean = false, testnet: boolean = false) {\n  if (isPublic) {\n    return testnet ? TestnetPUB : MainnetPUB;\n  }\n  return testnet ? TestnetPRV : MainnetPRV;\n}\n\nfunction isPublicExtendedKey(extendedKey: Uint8Array) {\n  return [MainnetPUB, TestnetPUB].includes(hexlify(extendedKey.slice(0, 4)));\n}\n\nfunction isValidExtendedKey(extendedKey: Uint8Array) {\n  return [MainnetPRV, TestnetPRV, MainnetPUB, TestnetPUB].includes(\n    hexlify(extendedKey.slice(0, 4))\n  );\n}\n\nfunction parsePath(path: string, depth: number = 0) {\n  const components = path.split('/');\n\n  if (components.length === 0 || (components[0] === 'm' && depth !== 0)) {\n    throw new FuelError(ErrorCode.HD_WALLET_ERROR, `invalid path - ${path}`);\n  }\n\n  if (components[0] === 'm') {\n    components.shift();\n  }\n\n  return components.map((p) =>\n    ~p.indexOf(`'`) ? parseInt(p, 10) + HARDENED_INDEX : parseInt(p, 10)\n  );\n}\n\ntype HDWalletConfig = {\n  privateKey?: BytesLike;\n  publicKey?: BytesLike;\n  chainCode: BytesLike;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: string;\n};\n\nclass HDWallet {\n  depth: number = 0;\n  index: number = 0;\n  fingerprint: string = hexlify('0x00000000');\n  parentFingerprint: string = hexlify('0x00000000');\n  privateKey?: string;\n  publicKey: string;\n  chainCode: BytesLike;\n\n  /**\n   * HDWallet is a implementation of the BIP-0044 and BIP-0032, Multi-Account Hierarchy for Deterministic Wallets\n   *\n   * @param config - Wallet configurations\n   */\n  constructor(config: HDWalletConfig) {\n    // TODO: set some asserts here\n\n    if (config.privateKey) {\n      const signer = new Signer(config.privateKey);\n      this.publicKey = hexlify(signer.compressedPublicKey);\n      this.privateKey = hexlify(config.privateKey);\n    } else {\n      if (!config.publicKey) {\n        throw new FuelError(\n          ErrorCode.HD_WALLET_ERROR,\n          'Both public and private Key cannot be missing. At least one should be provided.'\n        );\n      }\n      this.publicKey = hexlify(config.publicKey);\n    }\n\n    this.parentFingerprint = config.parentFingerprint || this.parentFingerprint;\n    this.fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n    this.depth = config.depth || this.depth;\n    this.index = config.index || this.index;\n    this.chainCode = config.chainCode;\n  }\n\n  get extendedKey() {\n    return this.toExtendedKey();\n  }\n\n  /**\n   * Derive the current HDWallet instance navigating only on the index.\n   * `Ex.: m/44'/0 -> Ex.: m/44'/1 -> m/44'/2`. [Learn more](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n   *\n   * @param index - Index of the child HDWallet.\n   * @returns A new instance of HDWallet on the derived index\n   */\n  deriveIndex(index: number) {\n    const privateKey = this.privateKey && getBytesCopy(this.privateKey);\n    const publicKey = getBytesCopy(this.publicKey);\n    const chainCode = getBytesCopy(this.chainCode);\n    const data = new Uint8Array(37);\n\n    if (index & HARDENED_INDEX) {\n      if (!privateKey) {\n        throw new FuelError(\n          ErrorCode.HD_WALLET_ERROR,\n          'Cannot derive a hardened index without a private Key.'\n        );\n      }\n\n      // 33 bytes: 0x00 || private key\n      data.set(privateKey, 1);\n    } else {\n      data.set(getBytesCopy(this.publicKey));\n    }\n\n    // child number: ser32(i)\n    data.set(toBytes(index, 4), 33);\n\n    const bytes = getBytesCopy(computeHmac('sha512', chainCode, data));\n    const IL = bytes.slice(0, 32);\n    const IR = bytes.slice(32);\n\n    if (privateKey) {\n      const N = '0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141';\n      // Child key ki is parse256(IL) + kpar (mod n).\n      const ki = bn(IL).add(privateKey).mod(N).toBytes(32);\n\n      return new HDWallet({\n        privateKey: ki,\n        chainCode: IR,\n        index,\n        depth: this.depth + 1,\n        parentFingerprint: this.fingerprint,\n      });\n    }\n\n    const signer = new Signer(hexlify(IL));\n    const Ki = signer.addPoint(publicKey);\n\n    return new HDWallet({\n      publicKey: Ki,\n      chainCode: IR,\n      index,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n    });\n  }\n\n  /**\n   * Derive the current HDWallet instance to the path. [Learn more](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n   *\n   * @param path - The string representation of the child HDWallet. `Ex.: m/44'/0'/0'/0/0`\n   * @returns A new instance of HDWallet on the derived path\n   */\n  derivePath(path: string) {\n    const paths = parsePath(path, this.depth);\n\n    return paths.reduce((hdwallet, index) => hdwallet.deriveIndex(index), <HDWallet>this);\n  }\n\n  /**\n   * Get the extendKey as defined on BIP-32 from the provided seed\n   *\n   * @param isPublic - enable to export public extendedKey, it not required when HDWallet didn't have the privateKey.\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns BIP-32 extended private key\n   */\n  toExtendedKey(isPublic: boolean = false, testnet: boolean = false): string {\n    if (this.depth >= 256) {\n      throw new FuelError(\n        ErrorCode.HD_WALLET_ERROR,\n        `Exceeded max depth of 255. Current depth: ${this.depth}.`\n      );\n    }\n    const prefix = getExtendedKeyPrefix(this.privateKey == null || isPublic, testnet);\n    const depth = hexlify(Uint8Array.from([this.depth]));\n    const parentFingerprint = this.parentFingerprint;\n    const index = toHex(this.index, 4);\n    // last 32 bites from the key\n    const chainCode = this.chainCode;\n    // first 32 bites from the key\n    const key =\n      this.privateKey != null && !isPublic ? concat(['0x00', this.privateKey]) : this.publicKey;\n    const extendedKey = getBytesCopy(\n      concat([prefix, depth, parentFingerprint, index, chainCode, key])\n    );\n\n    return base58check(extendedKey);\n  }\n\n  /**\n   * Create HDWallet instance from seed\n   *\n   * @param seed - Seed\n   * @returns A new instance of HDWallet\n   */\n  static fromSeed(seed: string) {\n    const masterKey = Mnemonic.masterKeysFromSeed(seed);\n\n    return new HDWallet({\n      chainCode: getBytesCopy(masterKey.slice(32)),\n      privateKey: getBytesCopy(masterKey.slice(0, 32)),\n    });\n  }\n\n  static fromExtendedKey(extendedKey: string) {\n    const decoded = toBeHex(decodeBase58(extendedKey));\n    const bytes = getBytesCopy(decoded);\n    const validChecksum = base58check(bytes.slice(0, 78)) === extendedKey;\n\n    if (bytes.length !== 82 || !isValidExtendedKey(bytes)) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Provided key is not a valid extended key.');\n    }\n    if (!validChecksum) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Provided key has an invalid checksum.');\n    }\n\n    const depth = bytes[4];\n    const parentFingerprint = hexlify(bytes.slice(5, 9));\n    const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n    const chainCode = hexlify(bytes.slice(13, 45));\n    const key = bytes.slice(45, 78);\n\n    if ((depth === 0 && parentFingerprint !== '0x00000000') || (depth === 0 && index !== 0)) {\n      throw new FuelError(\n        ErrorCode.HD_WALLET_ERROR,\n        'Inconsistency detected: Depth is zero but fingerprint/index is non-zero.'\n      );\n    }\n\n    if (isPublicExtendedKey(bytes)) {\n      if (key[0] !== 3) {\n        throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Invalid public extended key.');\n      }\n\n      return new HDWallet({\n        publicKey: key,\n        chainCode,\n        index,\n        depth,\n        parentFingerprint,\n      });\n    }\n\n    if (key[0] !== 0) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Invalid private extended key.');\n    }\n\n    return new HDWallet({\n      privateKey: key.slice(1),\n      chainCode,\n      index,\n      depth,\n      parentFingerprint,\n    });\n  }\n}\n\nexport default HDWallet;\n","import { U64Coder } from '@fuel-ts/abi-coder';\nimport type { B256Address } from '@fuel-ts/interfaces';\nimport { BN, type BigNumberish } from '@fuel-ts/math';\nimport * as asm from '@fuels/vm-asm';\nimport { getBytesCopy, type BytesLike } from 'ethers';\n\nexport const composeScriptForTransferringToContract = async () => {\n  // implementation extracted from Rust SDK at:\n  // https://github.com/FuelLabs/fuels-rs/blob/master/packages/fuels-core/src/types/transaction_builders.rs#L240-L272\n  // This script loads:\n  //  - a pointer to the contract id,\n  //  - the actual amount\n  //  - a pointer to the asset id\n  // into the registers 0x10, 0x12, 0x13\n  // and calls the TR instruction\n\n  // TODO: Remove ts-expect-error\n  // @ts-expect-error method reference missing in DTS\n  await asm.initWasm();\n\n  // const gtf = fuelAsm.gtf(0x10, 0x00, 0xc);\n  const gtf = asm.gtf(0x10, 0x00, asm.GTFArgs.ScriptData);\n  const addi = asm.addi(0x11, 0x10, 0x20);\n  const lw = asm.lw(0x12, 0x11, 0x0);\n  const addi2 = asm.addi(0x13, 0x11, 0x8);\n  const tr = asm.tr(0x10, 0x12, 0x13);\n  const ret = asm.ret(0x1);\n\n  const script = Uint8Array.from([\n    ...gtf.to_bytes(),\n    ...addi.to_bytes(),\n    ...lw.to_bytes(),\n    ...addi2.to_bytes(),\n    ...tr.to_bytes(),\n    ...ret.to_bytes(),\n  ]);\n\n  return script;\n};\n\nexport const formatScriptDataForTransferringToContract = (\n  hexelifiedContractId: B256Address,\n  amountToTransfer: BigNumberish,\n  assetId: BytesLike\n) => {\n  const numberCoder = new U64Coder();\n\n  const encoded = numberCoder.encode(new BN(amountToTransfer).toNumber());\n\n  const scriptData = Uint8Array.from([\n    ...getBytesCopy(hexelifiedContractId),\n    ...encoded,\n    ...getBytesCopy(assetId),\n  ]);\n\n  return scriptData;\n};\n","import { Address } from '@fuel-ts/address';\nimport { BaseAssetId } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { AbstractAccount } from '@fuel-ts/interfaces';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\nimport type { BigNumberish, BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type {\n  TransactionRequestLike,\n  CallResult,\n  TransactionRequest,\n  Coin,\n  CoinQuantityLike,\n  CoinQuantity,\n  Message,\n  Resource,\n  ExcludeResourcesOption,\n  TransactionResponse,\n  Provider,\n  ScriptTransactionRequestLike,\n} from '@fuel-ts/providers';\nimport {\n  withdrawScript,\n  ScriptTransactionRequest,\n  transactionRequestify,\n  addAmountToAsset,\n} from '@fuel-ts/providers';\nimport { getBytesCopy } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\nimport {\n  composeScriptForTransferringToContract,\n  formatScriptDataForTransferringToContract,\n} from './utils';\n\nexport type TxParamsType = Pick<\n  ScriptTransactionRequestLike,\n  'gasLimit' | 'gasPrice' | 'maturity' | 'maxFee' | 'witnessLimit'\n>;\n\n/**\n * `Account` provides an abstraction for interacting with accounts or wallets on the network.\n */\nexport class Account extends AbstractAccount {\n  /**\n   * The address associated with the account.\n   */\n  readonly address: AbstractAddress;\n\n  /**\n   * The provider used to interact with the network.\n   */\n  provider: Provider;\n\n  /**\n   * Creates a new Account instance.\n   *\n   * @param address - The address of the account.\n   * @param provider - A Provider instance.\n   */\n  constructor(address: string | AbstractAddress, provider: Provider) {\n    super();\n    this.provider = provider;\n    this.address = Address.fromDynamicInput(address);\n  }\n\n  /**\n   * Changes the provider connection for the account.\n   *\n   * @param provider - A Provider instance.\n   * @returns The updated Provider instance.\n   */\n  connect(provider: Provider): Provider {\n    this.provider = provider;\n    return this.provider;\n  }\n\n  /**\n   * Retrieves resources satisfying the spend query for the account.\n   *\n   * @param quantities - IDs of coins to exclude.\n   * @param excludedIds - IDs of resources to be excluded from the query.\n   * @returns A promise that resolves to an array of Resources.\n   */\n  async getResourcesToSpend(\n    quantities: CoinQuantityLike[] /** IDs of coins to exclude */,\n    excludedIds?: ExcludeResourcesOption\n  ): Promise<Resource[]> {\n    return this.provider.getResourcesToSpend(this.address, quantities, excludedIds);\n  }\n\n  /**\n   * Retrieves coins owned by the account.\n   *\n   * @param assetId - The asset ID of the coins to retrieve.\n   * @returns A promise that resolves to an array of Coins.\n   */\n  async getCoins(assetId?: BytesLike): Promise<Coin[]> {\n    const coins = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageCoins = await this.provider.getCoins(this.address, assetId, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      coins.push(...pageCoins);\n\n      const hasNextPage = pageCoins.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} coins exceed the current supported limit.`\n      );\n    }\n\n    return coins;\n  }\n\n  /**\n   * Retrieves messages owned by the account.\n   *\n   * @returns A promise that resolves to an array of Messages.\n   */\n  async getMessages(): Promise<Message[]> {\n    const messages = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageMessages = await this.provider.getMessages(this.address, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      messages.push(...pageMessages);\n\n      const hasNextPage = pageMessages.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} messages exceed the current supported limit.`\n      );\n    }\n\n    return messages;\n  }\n\n  /**\n   * Retrieves the balance of the account for the given asset.\n   *\n   * @param assetId - The asset ID to check the balance for.\n   * @returns A promise that resolves to the balance amount.\n   */\n  async getBalance(assetId: BytesLike = BaseAssetId): Promise<BN> {\n    const amount = await this.provider.getBalance(this.address, assetId);\n    return amount;\n  }\n\n  /**\n   * Retrieves all the balances for the account.\n   *\n   * @returns A promise that resolves to an array of Coins and their quantities.\n   */\n  async getBalances(): Promise<CoinQuantity[]> {\n    const balances = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageBalances = await this.provider.getBalances(this.address, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      balances.push(...pageBalances);\n\n      const hasNextPage = pageBalances.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} balances exceed the current supported limit.`\n      );\n    }\n\n    return balances;\n  }\n\n  /**\n   * Adds resources to the transaction enough to fund it.\n   *\n   * @param request - The transaction request.\n   * @param coinQuantities - The coin quantities required to execute the transaction.\n   * @param fee - The estimated transaction fee.\n   * @returns A promise that resolves when the resources are added to the transaction.\n   */\n  async fund<T extends TransactionRequest>(\n    request: T,\n    coinQuantities: CoinQuantity[],\n    fee: BN\n  ): Promise<void> {\n    const updatedQuantities = addAmountToAsset({\n      amount: bn(fee),\n      assetId: BaseAssetId,\n      coinQuantities,\n    });\n\n    const quantitiesDict: Record<string, { required: BN; owned: BN }> = {};\n\n    updatedQuantities.forEach(({ amount, assetId }) => {\n      quantitiesDict[assetId] = {\n        required: amount,\n        owned: bn(0),\n      };\n    });\n\n    const cachedUtxos: BytesLike[] = [];\n    const cachedMessages: BytesLike[] = [];\n\n    const owner = this.address.toB256();\n\n    request.inputs.forEach((input) => {\n      const isResource = 'amount' in input;\n\n      if (isResource) {\n        const isCoin = 'owner' in input;\n\n        if (isCoin) {\n          const assetId = String(input.assetId);\n          if (input.owner === owner && quantitiesDict[assetId]) {\n            const amount = bn(input.amount);\n            quantitiesDict[assetId].owned = quantitiesDict[assetId].owned.add(amount);\n\n            // caching this utxo to avoid fetching it again if requests needs to be funded\n            cachedUtxos.push(input.id);\n          }\n        } else if (input.recipient === owner && input.amount && quantitiesDict[BaseAssetId]) {\n          quantitiesDict[BaseAssetId].owned = quantitiesDict[BaseAssetId].owned.add(input.amount);\n\n          // caching this message to avoid fetching it again if requests needs to be funded\n          cachedMessages.push(input.nonce);\n        }\n      }\n    });\n\n    const missingQuantities: CoinQuantity[] = [];\n    Object.entries(quantitiesDict).forEach(([assetId, { owned, required }]) => {\n      if (owned.lt(required)) {\n        missingQuantities.push({\n          assetId,\n          amount: required.sub(owned),\n        });\n      }\n    });\n\n    const needsToBeFunded = missingQuantities.length;\n\n    if (needsToBeFunded) {\n      const resources = await this.getResourcesToSpend(missingQuantities, {\n        messages: cachedMessages,\n        utxos: cachedUtxos,\n      });\n      request.addResources(resources);\n    }\n  }\n\n  /**\n   * A helper that creates a transfer transaction request and returns it.\n   *\n   * @param destination - The address of the destination.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The transaction parameters (gasLimit, gasPrice, maturity).\n   * @returns A promise that resolves to the prepared transaction request.\n   */\n  async createTransfer(\n    /** Address of the destination */\n    destination: AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionRequest> {\n    const { minGasPrice } = this.provider.getGasConfig();\n    const params = { gasPrice: minGasPrice, ...txParams };\n    const request = new ScriptTransactionRequest(params);\n    request.addCoinOutput(destination, amount, assetId);\n    const { maxFee, requiredQuantities } = await this.provider.getTransactionCost(request);\n    await this.fund(request, requiredQuantities, maxFee);\n    return request;\n  }\n\n  /**\n   * Transfers coins to a destination address.\n   *\n   * @param destination - The address of the destination.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The transaction parameters (gasLimit, gasPrice, maturity).\n   * @returns A promise that resolves to the transaction response.\n   */\n  async transfer(\n    /** Address of the destination */\n    destination: AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    const request = await this.createTransfer(destination, amount, assetId, txParams);\n    return this.sendTransaction(request);\n  }\n\n  /**\n   * Transfers coins to a contract address.\n   *\n   * @param contractId - The address of the contract.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The optional transaction parameters.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async transferToContract(\n    /** Contract address */\n    contractId: AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    const { minGasPrice } = this.provider.getGasConfig();\n    const params = { gasPrice: minGasPrice, ...txParams };\n\n    const script = await composeScriptForTransferringToContract();\n\n    const scriptData = formatScriptDataForTransferringToContract(\n      contractId.toB256(),\n      amount,\n      assetId\n    );\n\n    const request = new ScriptTransactionRequest({\n      ...params,\n      script,\n      scriptData,\n    });\n\n    request.addContractInputAndOutput(contractId);\n\n    const { maxFee, requiredQuantities } = await this.provider.getTransactionCost(request, [\n      { amount: bn(amount), assetId: String(assetId) },\n    ]);\n\n    await this.fund(request, requiredQuantities, maxFee);\n\n    return this.sendTransaction(request);\n  }\n\n  /**\n   * Withdraws an amount of the base asset to the base chain.\n   *\n   * @param recipient - Address of the recipient on the base chain.\n   * @param amount - Amount of base asset.\n   * @param txParams - The optional transaction parameters.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async withdrawToBaseLayer(\n    /** Address of the recipient on the base chain */\n    recipient: AbstractAddress,\n    /** Amount of base asset */\n    amount: BigNumberish,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    // add recipient and amount to the transaction script code\n    const recipientDataArray = getBytesCopy(\n      '0x'.concat(recipient.toHexString().substring(2).padStart(64, '0'))\n    );\n    const amountDataArray = getBytesCopy(\n      '0x'.concat(bn(amount).toHex().substring(2).padStart(16, '0'))\n    );\n    const script = new Uint8Array([\n      ...getBytesCopy(withdrawScript.bytes),\n      ...recipientDataArray,\n      ...amountDataArray,\n    ]);\n\n    const params = { script, ...txParams };\n    const request = new ScriptTransactionRequest(params);\n    const forwardingQuantities = [{ amount: bn(amount), assetId: BaseAssetId }];\n\n    const { requiredQuantities, maxFee } = await this.provider.getTransactionCost(\n      request,\n      forwardingQuantities\n    );\n\n    await this.fund(request, requiredQuantities, maxFee);\n\n    return this.sendTransaction(request);\n  }\n\n  /**\n   * Sends a transaction to the network.\n   *\n   * @param transactionRequestLike - The transaction request to be sent.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike\n  ): Promise<TransactionResponse> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    await this.provider.estimateTxDependencies(transactionRequest);\n    return this.provider.sendTransaction(transactionRequest, { estimateTxDependencies: false });\n  }\n\n  /**\n   * Simulates a transaction.\n   *\n   * @param transactionRequestLike - The transaction request to be simulated.\n   * @returns A promise that resolves to the call result.\n   */\n  async simulateTransaction(transactionRequestLike: TransactionRequestLike): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    await this.provider.estimateTxDependencies(transactionRequest);\n    return this.provider.simulate(transactionRequest, { estimateTxDependencies: false });\n  }\n}\n","import {\n  bufferFromString,\n  keccak256,\n  randomBytes,\n  scrypt,\n  stringFromBuffer,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n} from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\nimport { hexlify } from 'ethers';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type KeystoreWallet = {\n  id: string;\n  version: number;\n  address: string;\n  crypto: KeystoreCrypto;\n};\n\ntype KeystoreCrypto = {\n  cipher: 'aes-128-ctr';\n  cipherparams: { iv: string };\n  ciphertext: string;\n  kdf: 'scrypt';\n  mac: string;\n  kdfparams: KDFParams;\n};\n\ntype KDFParams = {\n  dklen: number;\n  n: number;\n  p: number;\n  r: number;\n  salt: string;\n};\n\n// Same values used in the Rust SDK\nexport const DEFAULT_KDF_PARAMS_LOG_N = 13;\nexport const DEFAULT_KDF_PARAMS_R = 8;\nexport const DEFAULT_KDF_PARAMS_P = 1;\nexport const DEFAULT_KEY_SIZE = 32;\nexport const DEFAULT_IV_SIZE = 16;\n\n/**\n * Removes the '0x' prefix from a hexadecimal string.\n * If the prefix does not exist, it returns the original string.\n */\nexport const removeHexPrefix = (hexString: string) => {\n  if (/^0x/.test(hexString)) {\n    return hexString.slice(2);\n  }\n\n  return hexString;\n};\n\nexport async function encryptKeystoreWallet(\n  privateKey: string,\n  address: AbstractAddress,\n  password: string\n): Promise<string> {\n  // Convert the hexlified private key string to a Buffer.\n  const privateKeyBuffer = bufferFromString(removeHexPrefix(privateKey), 'hex');\n\n  // Generate a random salt.\n  const salt = randomBytes(DEFAULT_KEY_SIZE);\n\n  const key = scrypt({\n    password: bufferFromString(password),\n    salt,\n    dklen: DEFAULT_KEY_SIZE,\n    n: 2 ** DEFAULT_KDF_PARAMS_LOG_N,\n    r: DEFAULT_KDF_PARAMS_R,\n    p: DEFAULT_KDF_PARAMS_P,\n  });\n\n  // Encrypt the private key using AES-128-CTR.\n  const iv = randomBytes(DEFAULT_IV_SIZE);\n\n  const ciphertext = await encryptJsonWalletData(privateKeyBuffer, key, iv);\n\n  const data = Uint8Array.from([...key.subarray(16, 32), ...ciphertext]);\n\n  // Calculate the MAC.\n  const macHashUint8Array = keccak256(data);\n\n  const mac = stringFromBuffer(macHashUint8Array, 'hex');\n\n  // Construct keystore.\n  const keystore: KeystoreWallet = {\n    id: uuidv4(),\n    version: 3,\n    address: removeHexPrefix(address.toHexString()),\n    crypto: {\n      cipher: 'aes-128-ctr',\n      mac,\n      cipherparams: { iv: stringFromBuffer(iv, 'hex') },\n      ciphertext: stringFromBuffer(ciphertext, 'hex'),\n      kdf: 'scrypt',\n      kdfparams: {\n        dklen: DEFAULT_KEY_SIZE,\n        n: 2 ** DEFAULT_KDF_PARAMS_LOG_N,\n        p: DEFAULT_KDF_PARAMS_P,\n        r: DEFAULT_KDF_PARAMS_R,\n        salt: stringFromBuffer(salt, 'hex'),\n      },\n    },\n  };\n\n  return JSON.stringify(keystore);\n}\n\nexport async function decryptKeystoreWallet(jsonWallet: string, password: string): Promise<string> {\n  const keystoreWallet = JSON.parse(jsonWallet) as KeystoreWallet;\n\n  // Extract the parameters needed for decryption.\n  const {\n    crypto: {\n      mac,\n      ciphertext,\n      cipherparams: { iv },\n      kdfparams: { dklen, n, r, p, salt },\n    },\n  } = keystoreWallet;\n\n  const ciphertextBuffer = bufferFromString(ciphertext, 'hex');\n  const ivBuffer = bufferFromString(iv, 'hex');\n  const saltBuffer = bufferFromString(salt, 'hex');\n\n  const passwordBuffer = bufferFromString(password);\n\n  const key = scrypt({\n    password: passwordBuffer,\n    salt: saltBuffer,\n    n,\n    p,\n    r,\n    dklen,\n  });\n\n  // Verify the MAC. It should be the Keccak-256 hash of the concatenation of the second half of the derived key and the ciphertext.\n  const data = Uint8Array.from([...key.subarray(16, 32), ...ciphertextBuffer]);\n\n  const macHashUint8Array = keccak256(data);\n\n  const macHash = stringFromBuffer(macHashUint8Array, 'hex');\n\n  if (mac !== macHash) {\n    throw new FuelError(\n      ErrorCode.INVALID_PASSWORD,\n      'Failed to decrypt the keystore wallet, the provided password is incorrect.'\n    );\n  }\n\n  // Decrypt the private key.\n  const buffer = await decryptJsonWalletData(ciphertextBuffer, key, ivBuffer);\n\n  const privateKey = hexlify(buffer);\n\n  return privateKey;\n}\n","import { hashMessage } from '@fuel-ts/hasher';\nimport type {\n  TransactionResponse,\n  TransactionRequestLike,\n  CallResult,\n  Provider,\n} from '@fuel-ts/providers';\nimport { transactionRequestify } from '@fuel-ts/providers';\nimport { Signer } from '@fuel-ts/signer';\nimport type { BytesLike } from 'ethers';\n\nimport { Account } from './account';\nimport { encryptKeystoreWallet } from './keystore-wallet';\n\n/**\n * `BaseWalletUnlocked` provides the base functionalities for an unlocked wallet.\n */\nexport class BaseWalletUnlocked extends Account {\n  /**\n   * Default HDWallet path.\n   */\n  static defaultPath = \"m/44'/1179993420'/0'/0/0\";\n\n  /**\n   * The provider used to interact with the Fuel network.\n   */\n  provider: Provider;\n\n  /**\n   * A function that returns the wallet's signer.\n   */\n  signer: () => Signer;\n\n  /**\n   * Creates a new BaseWalletUnlocked instance.\n   *\n   * @param privateKey - The private key of the wallet.\n   * @param provider - A Provider instance.\n   */\n  constructor(privateKey: BytesLike, provider: Provider) {\n    const signer = new Signer(privateKey);\n    super(signer.address, provider);\n    this.signer = () => signer;\n    this.provider = provider;\n  }\n\n  /**\n   * Gets the private key of the wallet.\n   *\n   * @returns The private key of the wallet.\n   */\n  get privateKey(): string {\n    return this.signer().privateKey;\n  }\n\n  /**\n   * Gets the public key of the wallet.\n   *\n   * @returns\n   */\n  get publicKey(): string {\n    return this.signer().publicKey;\n  }\n\n  /**\n   * Signs a message with the wallet's private key.\n   *\n   * @param message - The message to sign.\n   * @returns A promise that resolves to the signature as a ECDSA 64 bytes string.\n   */\n  async signMessage(message: string): Promise<string> {\n    const signedMessage = await this.signer().sign(hashMessage(message));\n    return signedMessage;\n  }\n\n  /**\n   * Signs a transaction with the wallet's private key.\n   *\n   * @param transactionRequestLike - The transaction request to sign.\n   * @returns A promise that resolves to the signature as a ECDSA 64 bytes string.\n   */\n  async signTransaction(transactionRequestLike: TransactionRequestLike): Promise<string> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    const chainId = this.provider.getChain().consensusParameters.chainId.toNumber();\n    const hashedTransaction = transactionRequest.getTransactionId(chainId);\n    const signature = await this.signer().sign(hashedTransaction);\n\n    return signature;\n  }\n\n  /**\n   * Populates a transaction with the witnesses signature.\n   *\n   * @param transactionRequestLike - The transaction request to populate.\n   * @returns The populated transaction request.\n   */\n  async populateTransactionWitnessesSignature(transactionRequestLike: TransactionRequestLike) {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    const signedTransaction = await this.signTransaction(transactionRequest);\n\n    transactionRequest.updateWitnessByOwner(this.address, signedTransaction);\n\n    return transactionRequest;\n  }\n\n  /**\n   * Populates the witness signature for a transaction and sends it to the network using `provider.sendTransaction`.\n   *\n   * @param transactionRequestLike - The transaction request to send.\n   * @returns A promise that resolves to the TransactionResponse object.\n   */\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike\n  ): Promise<TransactionResponse> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    await this.provider.estimateTxDependencies(transactionRequest);\n    return this.provider.sendTransaction(\n      await this.populateTransactionWitnessesSignature(transactionRequest),\n      { estimateTxDependencies: false }\n    );\n  }\n\n  /**\n   * Populates the witness signature for a transaction and sends a call to the network using `provider.call`.\n   *\n   * @param transactionRequestLike - The transaction request to simulate.\n   * @returns A promise that resolves to the CallResult object.\n   */\n  async simulateTransaction(transactionRequestLike: TransactionRequestLike): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    await this.provider.estimateTxDependencies(transactionRequest);\n    return this.provider.call(\n      await this.populateTransactionWitnessesSignature(transactionRequest),\n      {\n        utxoValidation: true,\n        estimateTxDependencies: false,\n      }\n    );\n  }\n\n  async encrypt(password: string): Promise<string> {\n    return encryptKeystoreWallet(this.privateKey, this.address, password);\n  }\n}\n","//\n// Because WalletLocked and WalletUnlocked has a cycle dependency\n// it's not possible to split the two classes in different files\n//\n/* eslint-disable max-classes-per-file */\nimport { HDWallet } from '@fuel-ts/hdwallet';\nimport { Mnemonic } from '@fuel-ts/mnemonic';\nimport type { Provider } from '@fuel-ts/providers';\nimport { Signer } from '@fuel-ts/signer';\nimport type { BytesLike } from 'ethers';\n\nimport { Account } from './account';\nimport { BaseWalletUnlocked } from './base-unlocked-wallet';\nimport { decryptKeystoreWallet } from './keystore-wallet';\nimport type { GenerateOptions } from './types/GenerateOptions';\n\n/**\n * `WalletLocked` provides the functionalities for a locked  wallet.\n */\nexport class WalletLocked extends Account {\n  /**\n   * Unlocks the wallet using the provided private key and returns an instance of WalletUnlocked.\n   *\n   * @param privateKey - The private key used to unlock the wallet.\n   * @returns An instance of WalletUnlocked.\n   */\n  unlock(privateKey: BytesLike): WalletUnlocked {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new WalletUnlocked(privateKey, this.provider);\n  }\n}\n\n/**\n * `WalletUnlocked` provides the functionalities for an unlocked wallet.\n */\nexport class WalletUnlocked extends BaseWalletUnlocked {\n  /**\n   * Locks the wallet and returns an instance of WalletLocked.\n   *\n   * @returns An instance of WalletLocked.\n   */\n  lock(): WalletLocked {\n    this.signer = () => new Signer('0x00');\n    return new WalletLocked(this.address, this.provider);\n  }\n\n  /**\n   * Generate a new Wallet Unlocked with a random key pair.\n   *\n   * @param generateOptions - Options to customize the generation process (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static generate(generateOptions: GenerateOptions): WalletUnlocked {\n    const privateKey = Signer.generatePrivateKey(generateOptions?.entropy);\n\n    return new WalletUnlocked(privateKey, generateOptions?.provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from a seed.\n   *\n   * @param seed - The seed phrase.\n   * @param provider - A Provider instance.\n   * @param path - The derivation path (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromSeed(seed: string, provider: Provider, path?: string): WalletUnlocked {\n    const hdWallet = HDWallet.fromSeed(seed);\n    const childWallet = hdWallet.derivePath(path || WalletUnlocked.defaultPath);\n\n    return new WalletUnlocked(<string>childWallet.privateKey, provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from a mnemonic phrase.\n   *\n   * @param mnemonic - The mnemonic phrase.\n   * @param provider - A Provider instance.\n   * @param path - The derivation path (optional).\n   * @param passphrase - The passphrase for the mnemonic (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromMnemonic(\n    mnemonic: string,\n    provider: Provider,\n    path?: string,\n    passphrase?: BytesLike\n  ): WalletUnlocked {\n    const seed = Mnemonic.mnemonicToSeed(mnemonic, passphrase);\n    const hdWallet = HDWallet.fromSeed(seed);\n    const childWallet = hdWallet.derivePath(path || WalletUnlocked.defaultPath);\n\n    return new WalletUnlocked(<string>childWallet.privateKey, provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from an extended key.\n   *\n   * @param extendedKey - The extended key.\n   * @param provider - A Provider instance.\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromExtendedKey(extendedKey: string, provider: Provider): WalletUnlocked {\n    const hdWallet = HDWallet.fromExtendedKey(extendedKey);\n\n    return new WalletUnlocked(<string>hdWallet.privateKey, provider);\n  }\n\n  static async fromEncryptedJson(\n    jsonWallet: string,\n    password: string,\n    provider: Provider\n  ): Promise<WalletUnlocked> {\n    const privateKey = await decryptKeystoreWallet(jsonWallet, password);\n\n    return new WalletUnlocked(privateKey, provider);\n  }\n}\n","import type { AbstractAddress } from '@fuel-ts/interfaces';\nimport type { Provider } from '@fuel-ts/providers';\nimport type { BytesLike } from 'ethers';\n\nimport { WalletLocked, WalletUnlocked } from './wallets';\n\n/**\n * `Wallet` provides methods to create locked and unlocked wallet instances.\n */\nexport class Wallet {\n  /**\n   * Creates a locked wallet instance from an address and a provider.\n   *\n   * @param address - The address of the wallet.\n   * @param provider - A Provider instance.\n   * @returns A locked wallet instance.\n   */\n  static fromAddress(address: string | AbstractAddress, provider: Provider): WalletLocked {\n    return new WalletLocked(address, provider);\n  }\n\n  /**\n   * Creates an unlocked wallet instance from a private key and a provider.\n   *\n   * @param privateKey - The private key of the wallet.\n   * @param provider - A Provider instance.\n   * @returns An unlocked wallet instance.\n   */\n  static fromPrivateKey(privateKey: BytesLike, provider: Provider) {\n    return new WalletUnlocked(privateKey, provider);\n  }\n\n  /**\n   * Generate a new Wallet Unlocked with a random key pair.\n   *\n   * @param generateOptions - Options to customize the generation process (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static generate = WalletUnlocked.generate;\n\n  /**\n   * Create a Wallet Unlocked from a seed.\n   *\n   * @param seed - The seed phrase.\n   * @param path - The derivation path (optional).\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromSeed = WalletUnlocked.fromSeed;\n\n  /**\n   * Create a Wallet Unlocked from a mnemonic phrase.\n   *\n   * @param mnemonic - The mnemonic phrase.\n   * @param path - The derivation path (optional).\n   * @param passphrase - The passphrase for the mnemonic (optional).\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromMnemonic = WalletUnlocked.fromMnemonic;\n\n  /**\n   * Create a Wallet Unlocked from an extended key.\n   *\n   * @param extendedKey - The extended key.\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromExtendedKey = WalletUnlocked.fromExtendedKey;\n  static fromEncryptedJson = WalletUnlocked.fromEncryptedJson;\n}\n","import { hash } from '@fuel-ts/hasher';\nimport { calcRoot } from '@fuel-ts/merkle';\nimport { chunkAndPadBytes } from '@fuel-ts/utils';\nimport { hexlify, concat, getBytesCopy } from 'ethers';\nimport type { BytesLike } from 'ethers';\n\n/**\n * @hidden\n *\n * Calculates the predicate root for a given bytecode and chain ID.\n *\n * @param bytecode - The bytecode represented as a BytesLike object.\n * @param chainId - The ID of the chain associated with the bytecode.\n * @returns The predicate root as a string.\n */\nexport const getPredicateRoot = (bytecode: BytesLike): string => {\n  const chunkSize = 16 * 1024;\n  const bytes = getBytesCopy(bytecode);\n  const chunks = chunkAndPadBytes(bytes, chunkSize);\n  const codeRoot = calcRoot(chunks.map((c) => hexlify(c)));\n\n  const predicateRoot = hash(concat(['0x4655454C', codeRoot]));\n  return predicateRoot;\n};\n","export const FUEL_NETWORK_URL =\n  typeof process !== 'undefined'\n    ? process?.env?.FUEL_NETWORK_URL || 'http://127.0.0.1:4000/graphql'\n    : 'http://127.0.0.1:4000/graphql';\n"],"names":["exports","ALPHABET","ALPHABET_MAP","z","length","x","charAt","polymodStep","pre","b","prefixChk","prefix","chk","i","c","charCodeAt","v","convert","data","inBits","outBits","pad","value","bits","maxV","result","push","toWords","bytes","fromWordsUnsafe","words","res","Array","isArray","fromWords","Error","getLibraryFromEncoding","encoding","ENCODING_CONST","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","undefined","decodeUnsafe","decode","encode","TypeError","module","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","parseHexByte","lowerBound","r","parseBase","start","end","mul","len","Math","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u","Rand","rand","generate","_rand","getBytes","Uint8Array","getByte","crypto","getRandomValues","arr","msCrypto","randomBytes","global","__self__","F","fetch","DOMException","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","normalizeName","String","test","normalizeValue","iteratorFor","items","iterator","done","Headers","headers","map","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","values","entries","methods","Request","options","url","credentials","method","signal","upcased","normalizeMethod","referrer","form","trim","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","elliptic","version","utils","curve","curves","ec","eddsa","getNAF","getJSF","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","naf","I","step","nafW","repr","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","jsf","ja","jb","decodePoint","enc","pointFromX","encodeCompressed","_encode","compact","getX","getY","concat","precompute","power","beta","_getBeta","_hasDoubles","dbl","Base","EdwardsCurve","twisted","mOneA","c2","d","dd","oneC","Point","zOne","_mulA","_mulC","rhs","lhs","y2","pointFromY","isInfinity","normalize","fromJSON","_extDbl","f","nx","ny","nt","nz","_projDbl","_extAdd","_projAdd","mulAdd","k1","k2","jmulAdd","zi","other","eqXToP","xc","short","edwards","MontCurve","i4","a24","aa","bb","diffAdd","da","cb","jumlAdd","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","JPoint","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","floor","y1","len1","_endoSplit","v1","v2","c1","p1","p2","q1","q2","ax","_endoWnafMulAdd","npoints","ncoeffs","endoMul","obj2point","ys1","dyinv","_precompute","negate","zinv","zinv2","ay","pz2","z2","u1","u2","s1","s2","h2","h3","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","zs","hash","PresetCurve","defineCurve","configurable","enumerable","sha256","sha384","sha512","HmacDRBG","KeyPair","Signature","EC","nh","keyPair","keyFromPrivate","priv","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","nonce","ns2","_truncateToN","truncOnly","sign","bkey","getPrivate","ns1","iter","kp","kpX","recoveryParam","canonical","verify","signature","sinv","getPublic","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","_importPrivate","privEnc","_importPublic","pubEnc","reason","derive","_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","log","LN2","slen","toDER","backHalf","parseBytes","EDDSA","pointClass","encodingLength","secret","keyFromSecret","hashInt","messagePrefix","R","Rencoded","encodePoint","s_","pubBytes","S","makeSignature","sig","SG","arguments","update","intFromLE","digest","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","cachedProperty","params","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_S","_Rencoded","_Sencoded","Sencoded","toBytes","toHex","minAssert","minUtils","zero2","fill","m8","d1","d2","m14","m24","computer","littleEndian","isExtractableFileEnhanced","isExtractableFile","pipe","query","variables","operationName","jsonSerializer","defaultJsonSerializer_1","extract_files_1","files","stringify","payload","reduce","accu","currentQuery","form_data_1","paths","file","PING","PONG","SUBSCRIBE","COMPLETE","id","_type","_payload","_id","GraphQLWebSocketMessage","socket","_a","onInit","onAcknowledged","onPing","onPong","socketState","acknowledged","lastRequestId","subscriptions","onopen","_b","_c","_d","onclose","_this","console","onmessage","parseMessage","warn","Pong","subscriber","errors","types_1","complete","close","GraphQLWebSocketClient","subscriptionId","Complete","rawSubscribe","extensions","document","subscribe","_1","makeSubscribe","Ping","ConnectionInit","CrossFetch","resolveHeaders","oHeaders","HeadersInstanceToPlainObject","queryCleanner","post","fetchOptions","middleware","createRequestBody_1","queryParams","search","encodeURIComponent","buildGetQueryParams","GraphQLClient","queryOrOptions","requestHeaders","rawRequestOptions","parseArgs_1","cross_fetch_1","requestMiddleware","responseMiddleware","resolveRequestDocument","makeRequest","callOrIdentity","catch","documentOrOptions","_i","variablesAndRequestHeaders","requestOptions","documentsOrOptions","batchRequestOptions","queries","documents","fetcher","isBathchingQuery","getResult","successfullyReceivedData","some","successfullyPassedErrorPolicy","errorPolicy","headers_1","status_1","rest","errorResult","urlOrOptions","contentType","startsWith","extractOperationName","operationDefinitions","definitions","filter","definition","kind","operationName_1","parser_1","printer_1","rawRequest","batchRequests","chunks","accumulator","chunk","ClientError","extractMessage","setPrototypeOf","captureStackTrace","__extends","_ref","uri","defaultIsExtractableFile","extractFiles","path","Map","addFile","storedPaths","apply","FileList","child","ReactNativeFile","File","common","sha","ripemd","hmac","sha1","sha224","ripemd160","BlockHash","pending","pendingTotal","blockSize","outSize","padLength","_delta8","_delta32","join32","_update","_pad","_digest","Hmac","Hash","inner","outer","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","K","Kh","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","SHA256","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","T1","T2","SHA512","SHA384","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","zero8","parseInt","pos","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","seed","_hmac","kmac","reseed","addEnc","temp","writable","Long","wasm","WebAssembly","Instance","Module","low","high","unsigned","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","substring","radixToPower","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isNegative","radixLong","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","eqz","isPositive","equals","notEquals","neq","ne","lessThan","comp","lessThanOrEqual","le","greaterThan","greaterThanOrEqual","ge","compare","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shru","shr","log2","approxRes","approxRem","modulo","rem_u","rem_s","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","hit","fn","thisp","walker","tail","forEachStep","head","isStale","now","Date","del","item","Entry","unshift","node","expiresAt","doUse","unshiftNode","delete","removeNode","equal","ANY","Comparator","parseOptions","loose","debug","semver","operator","COMPARATORLOOSE","COMPARATOR","match","SemVer","er","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","raw","format","parseRange","first","isNullSet","isAny","comps","memoOpts","memoKey","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","rangeMap","comparators","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","M","pr","replaceCaret","CARETLOOSE","CARET","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","build","compareMain","comparePre","release","identifier","inc","op","rtl","COERCERTL","exec","lastIndex","COERCE","versionA","versionB","compareBuild","version1","version2","hasPre","defaultResult","parsed","list","sort","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","args","numeric","anum","bnum","opts","createToken","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","versions","maxSV","rangeObj","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","ranges","simplified","original","simpleSubset","dom","gtltComp","eqSet","Set","higherGT","lowerLT","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__importDefault","__esModule","long_1","leapSeconds_1","TAI64","label","default","compareTo","elapsedSeconds","EPOCH","removeLeapSeconds","unixTimestamp","fromUnix","timestamp","seconds","addLeapSeconds","hexString","TAI64_1","leapSeconds","leapSecond","find","ts","offset","insert","inserted","Node","pushNode","forEachReverse","getReverse","mapReverse","reduceReverse","toArrayReverse","sliceReverse","splice","deleteCount","reverse","arr2","arrayLikeToArray","instance","Constructor","_defineProperties","target","props","descriptor","protoProps","staticProps","unsupportedIterableToArray","allowArrayLike","it","_e","normalCompletion","didErr","_e2","_s","_arr","_n","_typeof","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","__proto__","awrap","async","object","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","minLen","_superPropBase","property","Reflect","bind","receiver","getOwnPropertyDescriptor","_checkPrivateRedeclaration","privateCollection","_classPrivateMethodInitSpec","privateSet","privateMap","_classPrivateMethodGet","_classExtractFieldDescriptor","action","_wrapRegExp","groups","BabelRegExp","_super","_groups","WeakMap","flags","buildGroups","indices","substitution","group","FORC","FUEL_CORE","FUELS","ErrorCode","FuelError","_FuelError","code","VERSIONS","enumValues","includes","_createForOfIteratorHelper","checkType","types","argument","defineProperties","HEX","BigInt","check","shortMessage","details","assign","makeError","assertArgument","_normalizeForms","accum","_getBytes","getBytesCopy","isHexString","HexCharacters","hexlify","datas","dataSlice","require_constants","require_debug","require_re","require_parse_options","require_identifiers","require_semver","require_parse","require_compare","require_eq","require_compare_build","require_neq","require_gt","require_gte","require_lt","require_lte","require_iterator","require_yallist","require_lru_cache","require_comparator","require_cmp","require_range","require_satisfies","require_outside","require_valid","require_clean","require_inc","require_diff","require_major","require_minor","require_patch","require_prerelease","require_rcompare","require_compare_loose","require_sort","require_rsort","require_coerce","require_to_comparators","require_max_satisfying","require_min_satisfying","require_min_version","require_valid2","require_gtr","require_ltr","require_intersects","require_simplify","require_subset","chunkAndPadBytes","chunkSize","lastChunk","remainingBytes","paddedChunkLength","newChunk","concatBytes","arrays","byteArrays","array","totalSize","concatenated","__toESM","__publicField","defaultValue","bytesPadding","bytesLength","CONVERTING_FAILED","units","DECIMAL_UNITS","precision","DEFAULT_PRECISION","minPrecision","DEFAULT_MIN_PRECISION","formattedUnits","formatUnits","formattedFixed","valueUnits","valueDecimals","decimals","trimmedDecimal","lastNonZeroIndex","keepChars","decimalPortion","toFixed","parseFloat","originalDecimals","firstNonZero","defaultDecimals","integerPortion","caller","methodName","BnJs","MAX_U64","bn","numbers","cur","ignoreFunc","badCodepoint","parseUnits","valueToParse","amount","replaceAll","Utf8ErrorFuncs","freeze","ignore","getUtf8CodePoints","_bytes","onError","extraLength","overlongMask","nextChar","toUtf8Bytes","operation","assertNormalize","pair","toUtf8String","codePoint","isSafeInteger","lengths","bool","outputLen","blockLen","exists","checkFinished","destroyed","finished","u8a","globalThis","u32","Uint32Array","byteOffset","createView","rotr","padStart","TextEncoder","utf8ToBytes","_cloneInto","checkOpts","defaults","isPlainObject","wrapConstructor","hashCons","hashC","SHA2","padOffset","isLE","take","subarray","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","digestInto","destroy","Maj","SHA256_K","IV","SHA256_W","G","H","getUint32","W15","W2","s0","HMAC","_key","iHash","oHash","pbkdf2Init","_password","_salt","_opts","dkLen","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","ti","Ti","setInt32","ui","rotl","XorAndSalsa","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","maxmem","onProgress","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","assertBytes","wrapHash","webCrypto","nodeRequire","scryptSync","Pi","_sync","U32_MASK64","fromBig","u64","lst","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bl","add3L","Cl","add3H","add4L","Dl","add4H","add5H","add5L","El","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","keccak","bufferOut","writeInto","xofInto","gen","keccak_224","keccak_256","keccak_384","keccak_512","genShake","wrapXOFConstructorWithOpts","keccak256","toStr","assertHash","assertExists","assertNumber","_l","_h","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","anyGlobal","getGlobal","createHash","algo","pbkdf2Sync","iterations","keylen","_algo","locked","_pbkdf2","__pbkdf2","lock","register","func","bufferFromString","binaryString","atob","bufferLength","startIndex","btoa","ENV_DEPENDENCY_MISSING","stringFromBuffer","TextDecoder","binary","hex","ALGORITHM","keyFromPassword","saltBuffer","encrypt","iv","dataString","dataBuffer","alg","counter","subtle","importKey","encBuffer","decrypt","keystore","encryptedText","ptBuffer","decryptedData","encryptJsonWalletData","keyBuffer","ivBuffer","cryptoKey","encrypted","decryptJsonWalletData","decrypted","api","scrypt","ethCryScrypt","dklen","_sha256","_sha512","__sha256","__sha512","locked256","locked512","_data","Coder","encodedLength","errorCode","U64Coder","throwError","ENCODE_ERROR","OPTION_CODER_TYPE","VEC_CODER_TYPE","BYTES_CODER_TYPE","STD_STRING_CODER_TYPE","stringRegEx","arrayRegEx","structRegEx","enumRegEx","tupleRegEx","genericRegEx","calculateVmTxMemory","BYTES_32","maxInputs","BASE_VECTOR_OFFSET","VEC_PROPERTY_SPACE","concatWithDynamicData","topLevelData","totalIndex","objects","dynamicData","pointerIndex","vData","byteArray","unpackDynamicData","results","baseOffset","dataOffset","cumulativeDynamicByteLength","updatedResults","pointerOffset","adjustedValue","dataToAppend","chunkByLength","findOrThrow","predicate","throwFn","found","isMultipleOfWordSize","getWordSizePadding","rightPadToWordSize","encoded","ArrayCoder","coder","newOffset","decoded","B256Coder","encodedValue","B512Coder","BooleanCoder","isSmallBytes","isRightPadded","paddingLength","EnumCoder","coders","caseIndexCoder","encodedValueSize","caseKey","empty","valueCoder","caseIndex","INVALID_DECODE_VALUE","enumCoders","NumberCoder","baseType","decodeU8","StringCoder","OptionCoder","toSwayOption","Some","None","toOption","StructCoder","fieldName","fieldCoder","fieldValue","decodedValue","TupleCoder","VecCoder","pointer","vectorRawData","ByteCoder","__privateAdd","__privateMethod","_getPaddedData","getPaddedData_fn","RawSliceCoder","RAW_SLICE_PROPERTY_SPACE","StdStringCoder","ResolvedAbiType","abi","typeId","TYPE_NOT_FOUND","originalTypeArguments","typeArguments","components","getResolvedGenericComponents","typeParameters","getImplicitGenericTypeParameters","getArgSignaturePrefix","content","getArgSignatureContent","strMatch","arrayMatch","getSignature","typeArgumentsSignature","componentsSignature","typeParametersAndArgsMap","typeParameter","typeParameterIndex","structuredClone","resolveGenericArgTypes","argType","implicitTypeParameters","itp","implicitGenericParametersParam","implicitGenericParameters","AbiCoder","resolvedAbiType","getCoderImpl","getCoder","stringMatch","INVALID_COMPONENT","arrayElementCoder","itemCoder","structMatch","getCoders","enumMatch","isOptionEnum","tupleMatch","component","CODER_NOT_FOUND","FunctionFragment","jsonAbi","jsonFn","functions","selector","getFunctionSelector","isInputDataPointer","outputMetadata","isHeapType","attributes","verifyArgsAndInputsAlign","inputs","shallowCopyValues","nonEmptyInputs","DECODE_ERROR","count","decodedValueByteSize","outputAbiType","inputsSignatures","functionSignature","hashedFunctionSignature","inputTypes","optionalInputs","errorMsg","isPointerType","outputType","heapCoder","memorySize","Interface","externalLoggedTypes","fromEntries","configurables","nameOrSignatureOrSelector","FUNCTION_NOT_FOUND","functionFragment","fragment","getFunction","decodeArguments","encodeArguments","decodeOutput","logId","receiptId","decodeLog","loggedTypes","loggedType","CONFIGURABLE_NOT_FOUND","configurableType","AbstractAddress","AbstractAccount","AbstractProgram","AbstractContract","ByteArrayCoder","TxPointerCoder","blockHeight","txIndex","InputType","InputCoinCoder","txID","outputIndex","owner","assetId","txPointer","witnessIndex","maturity","predicateGasUsed","predicateLength","predicateDataLength","predicateData","InputContractCoder","balanceRoot","stateRoot","contractID","InputMessageCoder","encodeData","sender","recipient","dataLength","messageData","InputCoder","INVALID_TRANSACTION_INPUT","OutputType","OutputCoinCoder","OutputContractCoder","inputIndex","OutputChangeCoder","OutputVariableCoder","OutputContractCreatedCoder","contractId","OutputCoder","INVALID_TRANSACTION_OUTPUT","PolicyType","PoliciesCoder","policies","seenTypes","policy","DUPLICATED_POLICY","validateDuplicatedPolicies","sortedPolicies","sortPolicies","INVALID_POLICY_TYPE","policyTypes","gasPrice","witnessLimit","maxFee","ReceiptType","ReceiptMessageOutCoder","receiptMessageOut","messageId","getMessageId","getAssetIdForMintAndBurnReceipts","subId","contractIdBytes","subIdBytes","ReceiptMintCoder","pc","is","getAssetId","ReceiptBurnCoder","StorageSlotCoder","WitnessCoder","TransactionType","TransactionScriptCoder","scriptGasLimit","scriptLength","scriptDataLength","inputsCount","outputsCount","witnessesCount","receiptsRoot","script","scriptData","outputs","witnesses","TransactionCreateCoder","bytecodeLength","bytecodeWitnessIndex","storageSlotsCount","storageSlots","TransactionMintCoder","inputContract","outputContract","mintAmount","mintAssetId","TransactionCoder","INVALID_TRANSACTION_TYPE","FAILED_TRANSFER_TO_ADDRESS_SIGNAL","ZeroBytes32","BaseAssetId","FUEL_BECH32_HRP_PREFIX","fromBech32","address","bech32m","toBech32","isBech32","isB256","isPublicKey","isEvmAddress","getBytesFromBech32","toB256","CODES","INVALID_BECH32_ADDRESS","addressify","addressLike","clearFirst12BytesFromB256","b256","PARSE_FAILED","Address","bech32Address","normalizeBech32","b256Address","publicKey","INVALID_PUBLIC_KEY","INVALID_B256_ADDRESS","fromB256","fromPublicKey","fromEvmAddress","evmAddress","INVALID_EVM_ADDRESS","padFirst12BytesOfEvmAddress","_keccak256","__keccak256","BN_0","BN_36","getChecksumAddress","expanded","hashed","ibanLookup","ibanChecksum","block","checksum","Base36","getAddress","fromBase36","accessSetify","addr","storageKeys","storageKey","maxValue","getBigInt","isInteger","getUint","fault","Nibbles","toBigInt","getNumber","NetworkPlugin","GasCostPlugin","effectiveBlock","costs","nullish","EnsPlugin","targetNetwork","FetchUrlFeeDataNetworkPlugin","processFunc","Networks","Network","chainId","plugin","basename","plugins","attachPlugin","tx","getPlugin","gas","txBase","txCreate","txDataZero","txDataNonzero","accessList","localeCompare","accessListify","txAccessListAddress","txAccessListStorageKey","network","injectCommonNetworks","networkFunc","custom","ensAddress","ensNetwork","nameOrChainId","existing","_value","frac","getGasStationPlugin","fetchFeeData","provider","setHeader","all","_response","_feeData","bodyJson","standard","feeData","maxFeePerGas","maxPriorityFeePerGas","maxPriorityFee","injected","registerEth","altNames","_isPlaceholder","_curry1","f1","_clone","deep","_ObjectMap","param","_isPrimitive","pattern","copiedValue","cachedCopy","valueOf","source","ignoreCase","multiline","sticky","unicode","dotAll","hashedKey","bucket","element","coinQuantityfy","coinQuantityLike","bnAmount","addAmountToAsset","coinQuantities","assetIdx","findIndex","coinQuantity","ReceiptFragmentFragmentDoc","gql","TransactionFragmentFragmentDoc","CoinFragmentFragmentDoc","MessageCoinFragmentFragmentDoc","MessageFragmentFragmentDoc","MessageProofFragmentFragmentDoc","BalanceFragmentFragmentDoc","BlockFragmentFragmentDoc","TxParametersFragmentFragmentDoc","PredicateParametersFragmentFragmentDoc","ScriptParametersFragmentFragmentDoc","ContractParametersFragmentFragmentDoc","FeeParametersFragmentFragmentDoc","DependentCostFragmentFragmentDoc","GasCostsFragmentFragmentDoc","ConsensusParametersFragmentFragmentDoc","ChainInfoFragmentFragmentDoc","ContractBalanceFragmentFragmentDoc","PageInfoFragmentFragmentDoc","NodeInfoFragmentFragmentDoc","GetVersionDocument","GetNodeInfoDocument","GetChainDocument","GetTransactionDocument","GetTransactionWithReceiptsDocument","GetTransactionsDocument","GetTransactionsByOwnerDocument","EstimatePredicatesDocument","GetBlockDocument","GetBlockWithTransactionsDocument","GetBlocksDocument","GetCoinDocument","GetCoinsDocument","GetCoinsToSpendDocument","GetContractDocument","GetContractBalanceDocument","GetBalanceDocument","GetBalancesDocument","GetMessagesDocument","GetMessageProofDocument","GetMessageStatusDocument","DryRunDocument","SubmitDocument","ProduceBlocksDocument","defaultWrapper","_operationName","_operationType","getSdk","client","withWrapper","getVersion","wrappedRequestHeaders","getNodeInfo","getChain","getTransaction","getTransactionWithReceipts","getTransactions","getTransactionsByOwner","estimatePredicates","getBlock","getBlockWithTransactions","getBlocks","getCoin","getCoins","getCoinsToSpend","getContract","getContractBalance","getBalance","getBalances","getMessages","getMessageProof","getMessageStatus","dryRun","submit","produceBlocks","MemoryCache","ttlInMs","ttl","INVALID_TTL","isAutoExpiring","expires","inputify","Coin","Contract","Message","outputify","Change","Variable","ContractCreated","isCoin","resource","getReceiptsWithMissingData","receipts","memo","receipt","Revert","doesReceiptHaveMissingOutputVariables","missingOutputVariables","Panic","doesReceiptHaveMissingContractId","missingOutputContractIds","hexOrZero","calculatePriceWithFactor","priceFactor","getGasUsedFromReceipts","ScriptResult","gasUsed","resolveGasDependentCosts","byteSize","gasDependentCost","dependentValue","__typename","unitsPerGas","gasPerUnit","getMinGas","gasCosts","gasPerByte","metadataGas","txBytesSize","vmInitGas","vmInitialization","bytesGas","inputsGas","witnessCache","contractRoot","ecr1","gasUsedByInputs","maxU64","getMaxGas","witnessesLength","minGas","gasLimit","remainingAllowedWitnessGas","calculateMetadataGasForTxCreate","stateRootSize","contractRootGas","contractBytesSize","stateRootGas","txIdGas","s256","contractIdGas","calculateMetadataGasForTxScript","normalizeJSON","root","sleep","time","setTimeout","NoWitnessAtIndexError","witnessify","BaseTransactionRequest","getPolicyMeta","toTransaction","getCoinInputWitnessIndexByOwner","updateWitness","witness","ownerAddress","coin","createWitness","pushInput","addChangeOutput","addCoinInput","addMessageInput","resources","addResource","addPredicateResource","pushOutput","quantities","quantity","changeOutput","getChangeOutputs","toTransactionBytes","_gasCosts","chainInfo","consensusParameters","wit","idCounter","generateId","counterString","updateAssetInput","assetInput","findAssetInput","addResources","blockCreated","txCreatedIdx","getCoinOutputs","Boolean","req","GasPrice","WitnessLimit","Maturity","MaxFee","hashTransaction","transactionRequest","transaction","Script","inputClone","outputClone","chainIdBytes","bigIntValue","uint64ToBytesBE","getStorageValue","storageSlotify","storageSlot","CreateTransactionRequest","Create","baseTransaction","getBaseTransaction","returnZeroScript","encodeScriptData","withdrawScript","ScriptTransactionRequest","numberOfVariables","outputsNumber","contract","contractAddress","getContractInputs","abiInterface","main","transactionRequestify","getInputsByType","getInputsCoin","getInputFromAssetId","coinInputs","messageInputs","getInputsMessage","coinInput","messageInput","getInputAccountAddress","getOutputsByType","getOutputsCoin","getReceiptsByType","getTransactionTypeName","transactionType","Mint","isType","isTypeCreate","isTypeScript","hasSameAssetId","mergeAssets","op1","op2","assets1","assetsSent","assets2","filtered","asset","addOperation","operations","toAdd","ops","isSameOperation","newOp","calls","getContractTransferOperations","transferOutReceipts","TransferOut","getReceiptsTransferOut","prevContractTransferOps","getWithdrawFromFuelOperations","messageOutReceipts","MessageOut","getReceiptsMessageOut","prevWithdrawFromFuelOps","chain","getContractCallOperations","abiMap","rawPayload","contractCallReceipts","Call","getReceiptsCall","contractOutputs","getOutputsContract","contractCallOperations","prevOutputCallOps","contractInput","getInputContractFromIndex","newCallOps","prevContractCallOps","inputAddress","getFunctionCall","encodedArgs","argumentsProvided","callFunctionSelector","param1","argsOffset","param2","functionName","getTransferOperations","coinOutputs","Transfer","transferReceipt","changeOutputs","getOutputsChange","getInputsContract","utxo","getContractCreatedOperations","contractCreatedOutputs","getOutputsContractCreated","fromAddress","contractCreatedOutput","getOperations","payProducerOperations","getPayProducerOperations","processGqlReceipt","gqlReceipt","receiptType","Return","ReturnData","ptr","ra","Log","val0","val1","val2","rc","val3","rd","LogData","toAddress","Burn","INVALID_RECEIPT_TYPE","assembleReceiptByType","processGraphqlStatus","gqlTransactionStatus","blockId","isStatusFailure","isStatusSuccess","isStatusPending","gqlStatus","INVALID_TRANSACTION_STATUS","getTransactionStatusName","assembleTransactionSummary","date","gasPriceFactor","transactionBytes","typeName","feeParams","fee","minFee","feeFromGasUsed","maxGas","calculateTransactionFee","mintedAssets","extractMintedAssetsFromReceipts","burnedAssets","extractBurnedAssetsFromReceipts","tai64Timestamp","toUnix","fromTai64ToDate","isTypeMint","TransactionResponse","transactionId","sleepBasedOnAttempts","fetchAttempts","gqlTransaction","transactionWithReceipts","contractsAbiMap","decodedTransaction","decodeTransaction","getGasConfig","transactionSummary","resultAttempts","waitForResult","getTransactionSummary","transactionResult","TRANSACTION_FAILED","attempts","wasm$1","mergeQuantities","arr1","resultMap","addToMap","processGqlChain","daHeight","latestBlock","contractParams","predicateParams","scriptParams","txParams","baseChainHeight","contractMaxSize","maxOutputs","maxWitnesses","maxGasPerTx","maxScriptLength","maxScriptDataLength","maxStorageSlots","maxPredicateLength","maxPredicateDataLength","maxGasPerPredicate","maxMessageDataLength","height","transactions","_Provider","createOperations","cacheUtxo","chainInfoCache","nodeInfoCache","minGasPrice","getNode","fetchChainAndNodeInfo","fetchChain","fetchNode","nodeInfo","ensureClientVersionIsSupported","gqlClient","nodeVersion","processedNodeInfo","maxDepth","maxTx","utxoValidation","vmBacktrace","peers","processedChain","transactionRequestLike","estimateTxDependencies","_cacheInputs","encodedTransaction","getTransactionCost","GAS_PRICE_TOO_LOW","GAS_LIMIT_TOO_LOW","gqlReceipts","estimatedTransaction","missingOutputVariableCount","missingOutputContractIdsCount","tries","txRequest","hasPredicateInput","addVariableOutputs","addContractInputAndOutput","MAX_RETRIES","forwardingQuantities","isScriptTransaction","calculateMinGas","calculateMaxGas","coinOutputsQuantities","getCoinOutputsQuantities","allQuantities","fundWithFakeUtxos","usedFee","normalizeZeroToOne","requiredQuantities","transactionCost","getResourcesToSpend","txCost","paginationArgs","coins","edges","edge","utxoId","excludedIds","excludeInput","messages","utxos","uniqueUtxos","getActiveData","coinsQuery","queryPerAsset","maxPerAsset","coinsToSpend","flat","idOrHeight","getBlockNumber","transactionIds","fetchedData","blocks","contractBalance","balance","balances","decodeData","commitBlockId","commitBlockHeight","inputObject","messageProof","messageBlockHeader","commitBlockHeader","blockProof","proofIndex","proofSet","transactionsCount","transactionsRoot","prevRoot","applicationHash","messageReceiptRoot","messageReceiptCount","messageStatus","startTime","blocksToProduce","startTimestamp","unixTimestampMs","latestBlockHeight","networkVersion","supportedVersion","networkMajor","networkMinor","networkPatch","isMajorSupported","isMinorSupported","isPatchSupported","checkFuelCoreVersionCompatibility","UNSUPPORTED_FUEL_CLIENT_VERSION","Provider","cacheInputs_fn","cachedTextDecoder","ignoreBOM","fatal","cachedUint8Memory0","getUint8Memory0","memory","Instruction","__wrap","tr","contract_id_addr","asset_id_addr","addi","dst","lw","gtf","cachedInt32Memory0","getInt32Memory0","Int32Array","IsCallerExternal","GetCaller","GetVerifyingPredicate","GetChainId","GTFArgs","Type","ScriptGasLimit","ScriptLength","ScriptDataLength","ScriptInputsCount","ScriptOutputsCount","ScriptWitnessesCount","ScriptReceiptsRoot","ScriptData","ScriptInputAtIndex","ScriptOutputAtIndex","ScriptWitnessAtIndex","CreateBytecodeLength","CreateBytecodeWitnessIndex","CreateStorageSlotsCount","CreateInputsCount","CreateOutputsCount","CreateWitnessesCount","CreateSalt","CreateStorageSlotAtIndex","CreateInputAtIndex","CreateOutputAtIndex","CreateWitnessAtIndex","InputCoinTxId","InputCoinOutputIndex","InputCoinOwner","InputCoinAmount","InputCoinAssetId","InputCoinTxPointer","InputCoinWitnessIndex","InputCoinMaturity","InputCoinPredicateLength","InputCoinPredicateDataLength","InputCoinPredicate","InputCoinPredicateData","InputCoinPredicateGasUsed","InputContractTxId","InputContractOutputIndex","InputContractBalanceRoot","InputContractStateRoot","InputContractTxPointer","InputContractId","InputMessageSender","InputMessageRecipient","InputMessageAmount","InputMessageNonce","InputMessageWitnessIndex","InputMessageDataLength","InputMessagePredicateLength","InputMessagePredicateDataLength","InputMessageData","InputMessagePredicate","InputMessagePredicateData","InputMessagePredicateGasUsed","OutputCoinTo","OutputCoinAmount","OutputCoinAssetId","OutputContractInputIndex","OutputContractBalanceRoot","OutputContractStateRoot","OutputContractCreatedContractId","OutputContractCreatedStateRoot","WitnessDataLength","WitnessData","PolicyTypes","PolicyGasPrice","PolicyWitnessLimit","PolicyMaturity","PolicyMaxFee","EQ","NE","LT","GT","LTE","GTE","LZC","UnknownPanicReason","OutOfGas","TransactionValidity","MemoryOverflow","ArithmeticOverflow","ContractNotFound","MemoryOwnership","NotEnoughBalance","ExpectedInternalContext","AssetIdNotFound","InputNotFound","OutputNotFound","WitnessNotFound","TransactionMaturity","InvalidMetadataIdentifier","MalformedCallStructure","ReservedRegisterNotWritable","InvalidFlags","InvalidImmediateValue","ExpectedCoinInput","EcalError","MemoryWriteOverlap","ContractNotInInputs","InternalBalanceOverflow","ContractMaxSize","ExpectedUnallocatedStack","MaxStaticContractsReached","TransferAmountCannotBeZero","ExpectedOutputVariable","ExpectedParentInternalContext","PredicateReturnedNonOne","ContractIdAlreadyDeployed","ContractMismatch","MessageDataTooLong","ArithmeticError","ContractInstructionNotAllowed","TransferZeroCoins","InvalidInstruction","MemoryNotExecutable","PolicyIsNotSet","PolicyNotFound","TooManyReceipts","BalanceOverflow","InvalidBlockHeight","TooManySlots","ADD","SUB","NOT","OR","XOR","AND","SHL","SHR","__wbg_ptr","__destroy_into_raw","__wbg_instruction_free","retptr","__wbindgen_add_to_stack_pointer","instruction_to_bytes","r0","__wbindgen_free","instruction_size","__wbg_load","imports","instantiateStreaming","instantiate","__wbg_get_imports","wbg","__wbindgen_throw","arg0","arg1","__wbg_finalize_init","__wbg_init","__wbindgen_wasm_module","sync","filepath","rawLength","stream","instantiateFunc","compileFunc","compileStreaming","compile","_instantiateOrCompile","_loadWasmModule","initWasm","PANIC_REASONS","PANIC_DOC_URL","getDocs","getFailureReason","doc","REVERT_MAP","RevertError","RequireRevertError","TransferToAddressRevertError","SendMessageRevertError","AssertFailedRevertError","revertErrorFactory","signalHex","decodeRevertErrorCode","RevertErrorCodes","revertReceipts","getRevertReceipts","detailedError","revertError","getError","cause","bigintReplacer","ScriptResultDecoderError","logs","docLink","logsText","receiptsText","InstructionSet","callResultToScriptResult","callResult","scriptResultReceipt","returnReceipt","TRANSACTION_ERROR","decodeCallResult","decoder","scriptResult","ScriptRequest","scriptDataEncoder","scriptResultDecoder","getScriptDataOffsetWithScriptBytes","callScript","WORD_SIZE","parent","node_default","hashLeaf","hashNode","calcRoot","nodes","pNodes","nodePrefix","parseLeaf","parseNode","isLeaf","sparseCompactMerkleProof_default","SparseCompactMerkleProof","SideNodes","NonMembershipLeafData","Bitmask","NumSideNodes","SiblingData","BitMask","sparseMerkleProof_default","SparseMerkleProof","sideNodes","MAX_HEIGHT","getBitAtFromMSB","slicedData","byte","reverseSideNodes","reversedSideNodes","SparseMerkleTree","ms","leftNode","rightNode","currentData","nodeHash","sideNode","siblingData","oldLeafHash","oldLeafData","currentHash","nonPlaceholderReached","commonPrefixCount","data1","data2","countCommonPrefix","offsetOfSideNodes","sideNodesForRoot","newRoot","updateWithSideNodes","setRoot","deleteWithSideNodes","leafHash","leafData","nonEmptySideNodes","nonMembershipLeafData","compactedProof","proof","bitMask","compactedSideNodes","compactProof","prove","__export","getContractId","getContractRoot","getContractStorageRoot","hexlifyWithPrefix","bytecode","tree","isKnownHex","UNEXPECTED_HEX_VALUE","english","_computeHmac","algorithm","createHmac","__computeHmac","computeHmac","Alphabet","Lookup","getAlpha","letter","BN_58","encodeBase58","stri","getUpperMask","getWords","mnemonic","getPhrase","entropyToMnemonicIndices","remainingBits","checksumBits","mnemonicWordsToEntropy","wordlist","INVALID_MNEMONIC","entropyBits","checksumMask","MasterSecret","MainnetPRV","TestnetPRV","MNEMONIC_SIZES","assertWordList","INVALID_WORD_LIST","assertEntropy","INVALID_ENTROPY","assertMnemonic","Mnemonic","phrase","mnemonicToEntropy","entropyToMnemonic","entropyBytes","passphrase","phraseBytes","mnemonicToSeed","masterKeysFromSeed","binarySearch","seedArray","INVALID_SEED","testnet","masterKey","depth","fingerprint","chainCode","privateKey","extendedKey","extraEntropy","mnemonic_default","getCurve","signer_default","Signer","privateKeyBytes","compressedPublicKey","p0","signedMessageBytes","recoverPublicKey","randomUUID","rnds8","rng","byteToHex","unsafeStringify","native","rnds","random","Rho","Id","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","BUF","h0","h1","h4","ar","br","cr","dr","rGroup","hbl","hbr","rl","rr","sl","sr","tl","_ripemd160","noble_ripemd160","__ripemd160","HARDENED_INDEX","MainnetPUB","TestnetPUB","base58check","getExtendedKeyPrefix","isPublic","HDWallet","config","signer","parentFingerprint","toExtendedKey","IL","IR","addPoint","HD_WALLET_ERROR","parsePath","hdwallet","deriveIndex","_width","toBeHex","decodeBase58","validChecksum","isValidExtendedKey","isPublicExtendedKey","hdwallet_default","composeScriptForTransferringToContract","asm","addi2","to_bytes","formatScriptDataForTransferringToContract","hexelifiedContractId","amountToTransfer","Account","pageSize","after","pageCoins","NOT_SUPPORTED","pageMessages","pageBalances","updatedQuantities","quantitiesDict","required","owned","cachedUtxos","cachedMessages","missingQuantities","destination","addCoinOutput","fund","createTransfer","sendTransaction","recipientDataArray","toHexString","amountDataArray","simulate","DEFAULT_KEY_SIZE","removeHexPrefix","encryptKeystoreWallet","privateKeyBuffer","ciphertext","macHashUint8Array","mac","uuidv4","cipher","cipherparams","kdf","kdfparams","decryptKeystoreWallet","jsonWallet","keystoreWallet","ciphertextBuffer","passwordBuffer","macHash","BaseWalletUnlocked","signedMessage","hashedTransaction","getTransactionId","signTransaction","signedTransaction","updateWitnessByOwner","populateTransactionWitnessesSignature","WalletLocked","WalletUnlocked","generateOptions","derivePath","defaultPath","Wallet","fromSeed","fromMnemonic","fromExtendedKey","fromEncryptedJson"],"sourceRoot":""}