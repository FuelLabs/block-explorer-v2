{"version":3,"file":"static/js/942.4afc52c2.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/bn.js/lib/bn.js"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["logger","Logger","isHexable","value","toHexString","addSlice","array","slice","args","Array","prototype","call","arguments","Uint8Array","apply","isInteger","isBytes","constructor","length","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","String","push","allowMissingPrefix","substring","isHexString","hex","hexPad","throwArgumentError","concat","items","objects","map","item","reduce","accum","offset","object","set","match","HexCharacters","hexlify","Math","floor","toString","toLowerCase","hexDataSlice","data","endOffset","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","join","fromCharCode","message","_checkNormalize","HEX","version","Object","defineProperty","this","enumerable","writable","logLevel","level","console","log","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","warn","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","min","move","dest","src","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}