{"version":3,"file":"static/js/711.b7be868a.chunk.js","mappings":"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","sources":["pages/CreateTransactionPage/components.tsx","pages/TransactionPage/useTransaction.tsx","utils/useProvider.tsx","pages/TransactionPage/index.tsx","utils/number.ts","utils.ts","utils/date.ts"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ButtonReset } from '../../components/Button/components';\nimport { ArrowIcon, FileIcon } from '../../components/Icons';\nimport { StandardSurface } from '../../components/Surface/components';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled(StandardSurface)`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    padding: 8px 0;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 280px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 220px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin: 0 0 4px;\n    width: 100%;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  width: calc(100% - 280px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 220px);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport const WrapText = styled.span`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const RowValueLink = styled(Link)`\n  display: block;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? '#1e2e2b' : '#081C17')};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  max-width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    max-width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled(StandardSurface)`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  flex: 0 0 140px;\n\n  @media screen and (max-width: 425px) {\n    flex: 0 0 120px;\n  }\n`;\n\nexport const UTXODetailsValue = styled.span`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 24px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? '#eafff8' : '#808080')};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? 'solid 1px #f9fefc' : 'solid 1px rgba(0, 0, 0, 0)'};\n  text-shadow: ${({ isSelected }) => (isSelected ? '0 0 6px #e9fff8' : 'none')};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const Witnesses = styled.div``;\n\nexport const WitnessContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 0 2px;\n`;\n\nexport const WitnessIndex = styled.span`\n  flex-shrink: 0;\n  width: 24px;\n  text-align: center;\n`;\n\nexport const WitnessIconContainer = styled.div`\n  flex-shrink: 0;\n  margin: 0 6px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 7px;\n  background-color: #1e2e2b;\n`;\n\nexport const WitnessIcon = styled(FileIcon)`\n  width: 8px !important;\n  width: 8px !important;\n  color: #f8fefc;\n`;\n\nexport const WitnessAddress = styled.span`\n  flex: 1 1 0;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import type { Transaction, TransactionResult } from 'fuels';\nimport { TransactionResponse } from 'fuels';\nimport { useEffect, useState } from 'react';\n\nimport { useProvider } from '../../utils/useProvider';\n\nexport const useTransaction = (transactionId: string) => {\n  const [transaction, setTransaction] = useState<Transaction>();\n  const [transactionResult, setTransactionResult] =\n    useState<TransactionResult<'success' | 'failure'>>();\n  const { provider } = useProvider();\n\n  useEffect(() => {\n    if (provider && transactionId) {\n      (async () => {\n        const tx = await provider.getTransaction(transactionId);\n        if (!tx) return;\n        setTransaction(tx);\n\n        const txResp = await new TransactionResponse(transactionId, provider).waitForResult();\n        setTransactionResult(txResp);\n      })();\n    }\n  }, [provider, transactionId]);\n\n  return {\n    transaction,\n    transactionResult,\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useApolloClient } from '@apollo/client';\nimport { Provider } from 'fuels';\nimport { useMemo } from 'react';\n\nexport const useProvider = () => {\n  const client = useApolloClient();\n\n  const provider = useMemo(() => {\n    const linkUri = (client?.link as any)?.options?.uri;\n    const providerUrl: string | undefined = typeof linkUri === 'function' ? linkUri() : linkUri;\n    if (!providerUrl) return undefined;\n\n    return new Provider(providerUrl);\n  }, [client]);\n\n  return {\n    provider,\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Input, Output } from 'fuels';\nimport { bn, DECIMAL_UNITS, InputType, OutputType, TransactionType } from 'fuels';\nimport { useContext, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport { ExpandIcon, ShrinkIcon } from '../../components/Icons';\nimport { BASE_COIN_NAME } from '../../constants';\nimport { ChainContext } from '../../contexts/network';\nimport { getOutputTypeText, trimAddress } from '../../utils';\nimport { tai64toDayjs } from '../../utils/date';\nimport { toPlainString } from '../../utils/number';\nimport { CopyButtonIcon, TableHeadlineAddressButton, Tooltip } from '../AddressPage/components';\nimport { UTXODetailsValue } from '../CreateTransactionPage/components';\n\nimport {\n  Container,\n  Content,\n  RowKeyColumn,\n  RowValueColumn,\n  Title,\n  TitleTransaction,\n  TransactionDataContainer,\n  TransactionDataRow,\n  TransactionStatus,\n  UTXOContainer,\n  DetailsButtonContainer,\n  DetailsButton,\n  UTXOBoxesContainer,\n  UTXOBoxesColumn,\n  UTXOBoxContainer,\n  UTXOHeadlineContainer,\n  UTXOHeadlineColumn,\n  UTXOTitle,\n  HeadlineText,\n  UTXODetailsContainer,\n  UTXODetailsRow,\n  UTXODetailsKey,\n  UTXODetailsLink,\n  UTXOSeparatorColumn,\n  UTXOSeparatorArrow,\n  UTXOHeadlineColumn2,\n  ContractTextarea,\n  UTXOHashOutputSkip,\n} from './components';\nimport { useTransaction } from './useTransaction';\n\nexport default function TransactionPage() {\n  const { transaction: transactionId } = useParams() as any;\n  const { chains } = useContext(ChainContext);\n  const { transaction, transactionResult } = useTransaction(transactionId);\n  const txDate = useMemo(() => {\n    const dateT = transactionResult?.time;\n    if (dateT) {\n      const dateDayJS = tai64toDayjs(dateT);\n      return `${dateDayJS.fromNow()} (${dateDayJS.format('MMMM-DD-YYYY HH:mm:ss A')})`;\n    }\n    return '';\n  }, [transactionResult?.time]);\n\n  if (!transaction) return null;\n\n  const gasPriceFactor = +(chains[0].consensusParameters?.gasPriceFactor || 1);\n  const gasPriceDecimal = parseFloat(\n    transaction.gasPrice?.format({ precision: DECIMAL_UNITS }) || '0'\n  );\n  const gasPriceInEth = gasPriceDecimal / gasPriceFactor;\n\n  const isScript = transaction.type === TransactionType.Script;\n  const isCreate = transaction.type === TransactionType.Create;\n  const isMint = transaction.type === TransactionType.Mint;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>\n            <span>Transaction:</span>\n            <TitleTransaction>{transactionId}</TitleTransaction>\n          </Title>\n          <TransactionDataContainer>\n            <TransactionDataRow>\n              <RowKeyColumn>Type:</RowKeyColumn>\n              <RowValueColumn>\n                {isScript && 'Script'}\n                {isCreate && 'Create'}\n                {isMint && 'Mint'}\n              </RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Status:</RowKeyColumn>\n              <TransactionStatus>\n                {transactionResult?.status ? transactionResult?.status.type : 'Pending'}\n              </TransactionStatus>\n            </TransactionDataRow>\n            {/* <TransactionDataRow>\n              <RowKeyColumn>Maturity:</RowKeyColumn>\n              <RowValueColumn>{tx.maturity}</RowValueColumn>\n            </TransactionDataRow> */}\n            {Boolean(gasPriceInEth) && (\n              <TransactionDataRow>\n                <RowKeyColumn>Gas Price:</RowKeyColumn>\n                <RowValueColumn>\n                  {toPlainString(gasPriceInEth)} {BASE_COIN_NAME}\n                </RowValueColumn>\n              </TransactionDataRow>\n            )}\n            {Boolean(transaction.gasLimit) && (\n              <TransactionDataRow>\n                <RowKeyColumn>Gas Limit:</RowKeyColumn>\n                <RowValueColumn>{transaction.gasLimit?.toString(10)}</RowValueColumn>\n              </TransactionDataRow>\n            )}\n            {Boolean(transactionResult?.gasUsed?.toNumber()) && (\n              <TransactionDataRow>\n                <RowKeyColumn>Gas Used:</RowKeyColumn>\n                <RowValueColumn>{transactionResult?.gasUsed.toString(10)}</RowValueColumn>\n              </TransactionDataRow>\n            )}\n            {Boolean(txDate) && (\n              <TransactionDataRow>\n                <RowKeyColumn>Timestamp:</RowKeyColumn>\n                <RowValueColumn>{txDate}</RowValueColumn>\n              </TransactionDataRow>\n            )}\n            {Boolean(transactionResult?.fee?.toNumber()) && (\n              <TransactionDataRow>\n                <RowKeyColumn>Transaction fee:</RowKeyColumn>\n                <RowValueColumn>\n                  {transactionResult?.fee?.format({ precision: DECIMAL_UNITS })} {BASE_COIN_NAME}\n                </RowValueColumn>\n              </TransactionDataRow>\n            )}\n          </TransactionDataContainer>\n          <UTXOComponent outputs={transaction.outputs || []} inputs={transaction.inputs || []} />\n          <ScriptsComponent tx={transaction} />\n          <ContractComponent tx={transaction} />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction ContractComponent({ tx }: { tx: any }) {\n  return (\n    tx.witnesses?.map((witness: { data: string }, index: number) => (\n      <UTXOBoxContainer key={witness.data}>\n        <UTXOHeadlineContainer>\n          <UTXOHeadlineColumn>\n            <UTXOTitle>Witness #{index}</UTXOTitle>\n          </UTXOHeadlineColumn>\n        </UTXOHeadlineContainer>\n        <UTXODetailsContainer>\n          <ContractTextarea readOnly value={witness.data} />\n        </UTXODetailsContainer>\n      </UTXOBoxContainer>\n    )) || null\n  );\n}\n\nfunction ScriptsComponent({ tx }: { tx: any }) {\n  return (\n    <>\n      {tx.script && (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>Script Byte Code:</UTXOTitle>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          <UTXODetailsContainer>\n            <ContractTextarea readOnly value={tx.script} />\n          </UTXODetailsContainer>\n        </UTXOBoxContainer>\n      )}\n      {tx.scriptData && (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>Script Data:</UTXOTitle>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          <UTXODetailsContainer>\n            <ContractTextarea readOnly value={tx.scriptData} />\n          </UTXODetailsContainer>\n        </UTXOBoxContainer>\n      )}\n    </>\n  );\n}\n\n// function ScriptComponent({ tabs, contents }: { tabs: string[]; contents: string[] }) {\n//   const [selectedTab, setSelectedTab] = useState(0);\n//   return (\n//     <ScriptContainer>\n//       <ScriptTabsContainer>\n//         {tabs?.map((tabItem, idx) => (\n//           <ScriptTabButton\n//             key={idx}\n//             isSelected={selectedTab === idx}\n//             onClick={() => {\n//               setSelectedTab(idx);\n//             }}\n//           >\n//             {tabItem}\n//           </ScriptTabButton>\n//         ))}\n//       </ScriptTabsContainer>\n//       <ScriptTextarea readOnly value={contents[selectedTab]} />\n//     </ScriptContainer>\n//   );\n// }\n\nfunction UTXOComponent({ inputs, outputs }: { inputs: Input[]; outputs: Output[] }) {\n  const [expanded, setExpanded] = useState(false);\n\n  const onClickDetails = () => {\n    setExpanded((prevExpanded) => !prevExpanded);\n  };\n\n  if (!outputs.length) return null;\n\n  return (\n    <UTXOContainer>\n      <DetailsButtonContainer>\n        <DetailsButton onClick={onClickDetails} isActive={expanded}>\n          DETAILS\n          {expanded ? <ShrinkIcon /> : <ExpandIcon />}\n        </DetailsButton>\n      </DetailsButtonContainer>\n      <UTXOBoxesContainer>\n        <UTXOBoxesColumn>\n          {inputs?.map((input, idx) => (\n            <UTXOInputBox key={idx} idx={idx} input={input} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n        <UTXOSeparatorColumn>\n          <UTXOSeparatorArrow />\n        </UTXOSeparatorColumn>\n        <UTXOBoxesColumn>\n          {outputs?.map((output, idx) => (\n            <UTXOOutputBox key={idx} index={idx} output={output} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n      </UTXOBoxesContainer>\n    </UTXOContainer>\n  );\n}\n\nfunction UTXOInputBox({ input, expanded, idx }: { input: Input; expanded: boolean; idx: number }) {\n  const onClickCopy = (address: string) => {\n    navigator.clipboard.writeText(address);\n  };\n\n  switch (input.type) {\n    case InputType.Coin: {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHashOutputSkip to=\"\">{input.utxoID.transactionId}</UTXOHashOutputSkip>\n            </UTXOHeadlineColumn>\n            <UTXOHeadlineColumn2>\n              <HeadlineText>Value</HeadlineText>\n              <HeadlineText>{bn(input.amount).format({ precision: DECIMAL_UNITS })}</HeadlineText>\n            </UTXOHeadlineColumn2>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Owner:</UTXODetailsKey>\n                <UTXODetailsLink to={`/address/${input.owner}`}>\n                  {trimAddress(input.owner)}\n                </UTXODetailsLink>\n                <TableHeadlineAddressButton\n                  onClick={() => {\n                    onClickCopy(input.owner);\n                  }}\n                >\n                  <CopyButtonIcon />\n                  <Tooltip>Copy Address</Tooltip>\n                </TableHeadlineAddressButton>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Amount:</UTXODetailsKey>\n                {bn(input.amount).format({ precision: DECIMAL_UNITS })}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Asset ID:</UTXODetailsKey>\n                <UTXOHashOutputSkip to=\"\">{trimAddress(input.assetId)}</UTXOHashOutputSkip>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate bytecode:</UTXODetailsKey>\n                {input.predicate}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate data:</UTXODetailsKey>\n                {input.predicateData}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate length:</UTXODetailsKey>\n                {0}\n                {/* {TBD} */}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Witness Index:</UTXODetailsKey>\n                {input.witnessIndex}\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    case InputType.Contract: {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHashOutputSkip to=\"\">{input.utxoID.transactionId}</UTXOHashOutputSkip>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n                <UTXOHashOutputSkip to=\"\">{trimAddress(input.contractID)}</UTXOHashOutputSkip>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.balanceRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>State Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.stateRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutput({ output }: { output: Output }) {\n  const onClickCopy = (address: string) => {\n    navigator.clipboard.writeText(address);\n  };\n\n  switch (output.type) {\n    case OutputType.ContractCreated: {\n      return (\n        <UTXODetailsRow>\n          <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n          <UTXOHashOutputSkip to=\"\">{output.contractId}</UTXOHashOutputSkip>\n        </UTXODetailsRow>\n      );\n    }\n    case OutputType.Contract: {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.balanceRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.stateRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Input index:</UTXODetailsKey>\n            <UTXODetailsValue>{output.inputIndex}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    case OutputType.Coin:\n    case OutputType.Change: {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>To:</UTXODetailsKey>\n            <UTXODetailsLink to={`/address/${output.to}`}>{trimAddress(output.to)}</UTXODetailsLink>\n            <TableHeadlineAddressButton\n              onClick={() => {\n                onClickCopy(output.to);\n              }}\n            >\n              <CopyButtonIcon />\n              <Tooltip>Copy Address</Tooltip>\n            </TableHeadlineAddressButton>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Amount:</UTXODetailsKey>\n            <UTXODetailsValue>\n              {bn(output.amount).format({ precision: DECIMAL_UNITS })}\n            </UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Asset ID:</UTXODetailsKey>\n            <UTXOHashOutputSkip to=\"\">{trimAddress(output.assetId)}</UTXOHashOutputSkip>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutputBox({\n  output,\n  expanded,\n  index,\n}: {\n  output: Output;\n  expanded: boolean;\n  index: number;\n}) {\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Output #{index}</UTXOTitle>\n          <UTXOHashOutputSkip to=\"\">{getOutputTypeText(output.type)}</UTXOHashOutputSkip>\n          {/* <UTXOHashOutputSkip to=\"\">{output.__typename}</UTXOHashOutputSkip> */}\n        </UTXOHeadlineColumn>\n        {output.type === OutputType.Coin && (\n          <UTXOHeadlineColumn2>\n            <HeadlineText>Amount</HeadlineText>\n            <HeadlineText>{bn(output.amount).format({ precision: DECIMAL_UNITS })}</HeadlineText>\n          </UTXOHeadlineColumn2>\n        )}\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXOOutput output={output} />\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n","// convert to string AVOIDING to show exponential notations\nexport const toPlainString = (value: number) =>\n  `${+value}`.replace(/(-?)(\\d*)\\.?(\\d*)e([+-]\\d+)/, (a, b, c, d, e) =>\n    e < 0\n      ? `${b}0.${Array(1 - e - c.length).join('0')}${c}${d}`\n      : b + c + d + Array(e - d.length + 1).join('0')\n  );\n","import { OutputType } from 'fuels';\n\nexport const trimAddress = (address: string) => {\n  if (!address) {\n    return '';\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n\nexport const getOutputTypeText = (outputType: OutputType) => {\n  switch (outputType) {\n    case OutputType.Change:\n      return 'Change';\n    case OutputType.Coin:\n      return 'Coin';\n    case OutputType.Contract:\n      return 'Contract';\n    case OutputType.ContractCreated:\n      return 'ContractCreated';\n    case OutputType.Message:\n      return 'Message';\n    case OutputType.Variable:\n      return 'Variable';\n    default:\n      return 'Unknown';\n  }\n};\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { TAI64 } from 'tai64';\n\ndayjs.extend(relativeTime);\n\ntype DateDifference = {\n  seconds: number;\n  minutes: number;\n  hours: number;\n  days: number;\n};\n\nexport const dateDiff = (date1: Date, date2: Date): DateDifference => {\n  const seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  // hours = hours - (days * 24);\n  // minutes = minutes - (days * 24 * 60) - (hours * 60);\n  // seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const dateDiffRelative = (date1: Date, date2: Date): DateDifference => {\n  let seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  hours -= days * 24;\n  minutes = minutes - days * 24 * 60 - hours * 60;\n  seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const getTextForRelativeTimeDifference = (dateDiff: DateDifference) => {\n  const text: string[] = [];\n\n  if (dateDiff.days > 0) text.push(`${dateDiff.days} days`);\n  if (dateDiff.hours > 0) text.push(`${dateDiff.hours} hrs`);\n  if (dateDiff.minutes > 0) text.push(`${dateDiff.minutes} min`);\n  if (dateDiff.seconds > 0) text.push(`${dateDiff.seconds} sec`);\n\n  return `${text.slice(0, 2).join(' ')} ago`;\n};\n\nexport const getTextForTimeDifference = (dateDiff: DateDifference) => {\n  if (dateDiff.days > 0) return `${dateDiff.days} days ago`;\n  if (dateDiff.hours > 0) return `${dateDiff.hours} hours ago`;\n  if (dateDiff.minutes > 0) return `${dateDiff.minutes} minutes ago`;\n  if (dateDiff.seconds > 0) return `${dateDiff.seconds} seconds ago`;\n\n  return '';\n};\n\nexport const tai64toDayjs = (tai64Timestamp: string) => {\n  const timestamp = TAI64.fromString(tai64Timestamp, 10).toUnix();\n  return dayjs(timestamp * 1000);\n};\n\nexport const tai64toDate = (tai64Timestamp: string) => tai64toDayjs(tai64Timestamp).toDate();\n\nexport const formatDate = (tai64Timestamp: string) => tai64toDayjs(tai64Timestamp).fromNow();\n\nexport const dateToTai64 = (date: Date) =>\n  TAI64.fromUnix(Math.floor(date.getTime() / 1000)).toString(10);\n"],"names":["Container","styled","Content","Title","TitleTransaction","TransactionDataContainer","StandardSurface","TransactionDataRow","RowKeyColumn","RowValueColumn","WrapText","RowValueLink","Link","BaseLink","UTXOContainer","DetailsButtonContainer","DetailsButton","ButtonReset","isActive","UTXOBoxesContainer","UTXOBoxesColumn","UTXOSeparatorColumn","UTXOBoxContainer","UTXOHeadlineContainer","UTXOHeadlineColumn","UTXOTitle","UTXOHash","UTXODetailsContainer","UTXODetailsRow","UTXODetailsKey","UTXODetailsValue","UTXODetailsLink","UTXOSeparatorArrow","ArrowIcon","WitnessContainer","isSelected","WitnessIndex","WitnessIconContainer","WitnessIcon","FileIcon","WitnessAddress","useTransaction","transactionId","useState","transaction","setTransaction","transactionResult","setTransactionResult","provider","client","useApolloClient","useMemo","linkUri","link","options","uri","providerUrl","Provider","useProvider","useEffect","getTransaction","tx","TransactionResponse","waitForResult","txResp","TransactionPage","useParams","chains","useContext","ChainContext","txDate","dateT","time","dateDayJS","tai64toDayjs","fromNow","format","value","gasPriceFactor","consensusParameters","gasPriceInEth","parseFloat","gasPrice","precision","DECIMAL_UNITS","isScript","type","TransactionType","isCreate","isMint","Header","status","Boolean","replace","a","b","c","d","e","Array","length","join","BASE_COIN_NAME","gasLimit","toString","gasUsed","toNumber","fee","UTXOComponent","outputs","inputs","ScriptsComponent","ContractComponent","witnesses","map","witness","index","readOnly","data","script","scriptData","expanded","setExpanded","onClick","prevExpanded","input","idx","UTXOInputBox","output","UTXOOutputBox","InputType","to","utxoID","bn","amount","owner","trimAddress","address","navigator","clipboard","writeText","assetId","predicate","predicateData","witnessIndex","contractID","balanceRoot","stateRoot","UTXOOutput","OutputType","contractId","inputIndex","getOutputTypeText","slice","outputType","dayjs","relativeTime","dateDiff","date1","date2","seconds","Math","floor","abs","getTime","minutes","hours","days","dateDiffRelative","getTextForRelativeTimeDifference","text","push","getTextForTimeDifference","tai64Timestamp","timestamp","TAI64","toUnix","tai64toDate","toDate"],"sourceRoot":""}