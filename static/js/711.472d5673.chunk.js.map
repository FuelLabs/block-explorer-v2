{"version":3,"file":"static/js/711.472d5673.chunk.js","mappings":"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","sources":["pages/CreateTransactionPage/components.tsx","pages/TransactionPage/useTransaction.tsx","utils/useProvider.tsx","pages/TransactionPage/index.tsx","utils/number.ts","utils.ts"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ButtonReset } from '../../components/Button/components';\nimport { ArrowIcon, FileIcon } from '../../components/Icons';\nimport { StandardSurface } from '../../components/Surface/components';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled(StandardSurface)`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    padding: 8px 0;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 280px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 220px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin: 0 0 4px;\n    width: 100%;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  width: calc(100% - 280px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 220px);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport const WrapText = styled.span`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const RowValueLink = styled(Link)`\n  display: block;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? '#1e2e2b' : '#081C17')};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  max-width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    max-width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled(StandardSurface)`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  flex: 0 0 140px;\n\n  @media screen and (max-width: 425px) {\n    flex: 0 0 120px;\n  }\n`;\n\nexport const UTXODetailsValue = styled.span`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 24px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? '#eafff8' : '#808080')};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? 'solid 1px #f9fefc' : 'solid 1px rgba(0, 0, 0, 0)'};\n  text-shadow: ${({ isSelected }) => (isSelected ? '0 0 6px #e9fff8' : 'none')};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const Witnesses = styled.div``;\n\nexport const WitnessContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 0 2px;\n`;\n\nexport const WitnessIndex = styled.span`\n  flex-shrink: 0;\n  width: 24px;\n  text-align: center;\n`;\n\nexport const WitnessIconContainer = styled.div`\n  flex-shrink: 0;\n  margin: 0 6px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 7px;\n  background-color: #1e2e2b;\n`;\n\nexport const WitnessIcon = styled(FileIcon)`\n  width: 8px !important;\n  width: 8px !important;\n  color: #f8fefc;\n`;\n\nexport const WitnessAddress = styled.span`\n  flex: 1 1 0;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import type { Transaction, TransactionResult } from 'fuels';\nimport { DECIMAL_UNITS, TransactionResponse } from 'fuels';\nimport { useEffect, useState } from 'react';\n\nimport { useProvider } from '../../utils/useProvider';\n\nexport const useTransaction = (transactionId: string) => {\n  const [transaction, setTransaction] = useState<Transaction>();\n  const [transactionResult, setTransactionResult] =\n    useState<TransactionResult<'success' | 'failure'>>();\n  const { provider } = useProvider();\n\n  useEffect(() => {\n    if (provider && transactionId) {\n      (async () => {\n        const tx = await provider.getTransaction(transactionId);\n        if (!tx) return;\n        setTransaction(tx);\n\n        const txResp = await new TransactionResponse(transactionId, provider).waitForResult();\n        setTransactionResult(txResp);\n      })();\n    }\n  }, [provider, transactionId]);\n\n  return {\n    transaction,\n    transactionResult,\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useApolloClient } from '@apollo/client';\nimport { Provider } from 'fuels';\nimport { useMemo } from 'react';\n\nexport const useProvider = () => {\n  const client = useApolloClient();\n\n  const provider = useMemo(() => {\n    const providerUrl: string | undefined = (client?.link as any)?.options?.uri;\n    if (!providerUrl) return undefined;\n\n    return new Provider(providerUrl);\n  }, [client]);\n\n  return {\n    provider,\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Input, Output } from 'fuels';\nimport { bn, DECIMAL_UNITS, InputType, OutputType, TransactionType } from 'fuels';\nimport { useContext, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport { ExpandIcon, ShrinkIcon } from '../../components/Icons';\nimport { BASE_COIN_NAME } from '../../constants';\nimport { ChainContext } from '../../contexts/network';\nimport { getOutputTypeText, trimAddress } from '../../utils';\nimport { toPlainString } from '../../utils/number';\nimport { CopyButtonIcon, TableHeadlineAddressButton, Tooltip } from '../AddressPage/components';\nimport { UTXODetailsValue } from '../CreateTransactionPage/components';\n\nimport {\n  Container,\n  Content,\n  RowKeyColumn,\n  RowValueColumn,\n  Title,\n  TitleTransaction,\n  TransactionDataContainer,\n  TransactionDataRow,\n  TransactionStatus,\n  UTXOContainer,\n  DetailsButtonContainer,\n  DetailsButton,\n  UTXOBoxesContainer,\n  UTXOBoxesColumn,\n  UTXOBoxContainer,\n  UTXOHeadlineContainer,\n  UTXOHeadlineColumn,\n  UTXOTitle,\n  HeadlineText,\n  UTXODetailsContainer,\n  UTXODetailsRow,\n  UTXODetailsKey,\n  UTXODetailsLink,\n  UTXOSeparatorColumn,\n  UTXOSeparatorArrow,\n  ScriptsContainer,\n  ScriptTitle,\n  ScriptContainer,\n  ScriptTabsContainer,\n  ScriptTabButton,\n  ScriptTextarea,\n  UTXOHeadlineColumn2,\n  ContractTextarea,\n  UTXOHashOutputSkip,\n} from './components';\nimport { useTransaction } from './useTransaction';\n\nexport default function TransactionPage() {\n  const { transaction: transactionId } = useParams() as any;\n  const { chains } = useContext(ChainContext);\n  const { transaction, transactionResult } = useTransaction(transactionId);\n\n  if (!transaction) return null;\n\n  const gasPriceFactor = +(chains[0].consensusParameters?.gasPriceFactor || 1);\n  const gasPriceDecimal = parseFloat(transaction.gasPrice.format({ precision: DECIMAL_UNITS }));\n  const gasPriceInEth = gasPriceDecimal / gasPriceFactor;\n\n  const isScript = transaction.type === TransactionType.Script;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>\n            <span>Transaction:</span>\n            <TitleTransaction>{transactionId}</TitleTransaction>\n          </Title>\n          <TransactionDataContainer>\n            <TransactionDataRow>\n              <RowKeyColumn>Type:</RowKeyColumn>\n              <RowValueColumn>{isScript ? 'Script' : 'Create'}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Status:</RowKeyColumn>\n              <TransactionStatus>\n                {transactionResult?.status ? transactionResult?.status.type : 'Pending'}\n              </TransactionStatus>\n            </TransactionDataRow>\n            {/* <TransactionDataRow>\n              <RowKeyColumn>Maturity:</RowKeyColumn>\n              <RowValueColumn>{tx.maturity}</RowValueColumn>\n            </TransactionDataRow> */}\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Price:</RowKeyColumn>\n              <RowValueColumn>\n                {toPlainString(gasPriceInEth)} {BASE_COIN_NAME}\n              </RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Limit:</RowKeyColumn>\n              <RowValueColumn>{transaction.gasLimit.toString(10)}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Used:</RowKeyColumn>\n              <RowValueColumn>{transactionResult?.gasUsed.toString(10)}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Transaction fee:</RowKeyColumn>\n              <RowValueColumn>\n                {transactionResult?.fee?.format({ precision: DECIMAL_UNITS })} {BASE_COIN_NAME}\n              </RowValueColumn>\n            </TransactionDataRow>\n          </TransactionDataContainer>\n          <UTXOComponent outputs={transaction.outputs || []} inputs={transaction.inputs || []} />\n          {isScript ? (\n            <ScriptsComponent tx={transaction} />\n          ) : (\n            <ContractComponent tx={transaction} />\n          )}\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction ContractComponent({ tx }: { tx: any }) {\n  return (\n    tx.witnesses?.map((witness: string, index: number) => (\n      <UTXOBoxContainer>\n        <UTXOHeadlineContainer>\n          <UTXOHeadlineColumn>\n            <UTXOTitle>Witness #{index}</UTXOTitle>\n          </UTXOHeadlineColumn>\n        </UTXOHeadlineContainer>\n        <UTXODetailsContainer>\n          <ContractTextarea readOnly value={witness} />\n        </UTXODetailsContainer>\n      </UTXOBoxContainer>\n    )) || null\n  );\n}\n\nfunction ScriptsComponent({ tx }: { tx: any }) {\n  return (\n    <ScriptsContainer>\n      <ScriptTitle>Script Byte Code:</ScriptTitle>\n      {/* <ScriptComponent tabs={['Assembly', 'Hex']} contents={['', tx.script]} /> */}\n      <ScriptComponent tabs={['Hex']} contents={[tx.script]} />\n      <ScriptTitle>Script Data:</ScriptTitle>\n      {/* <ScriptComponent tabs={['ABI Decoded', 'Raw Hex']} contents={['', tx.scriptData]} /> */}\n      <ScriptComponent tabs={['Raw Hex']} contents={[tx.scriptData]} />\n    </ScriptsContainer>\n  );\n}\n\nfunction ScriptComponent({ tabs, contents }: { tabs: string[]; contents: string[] }) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <ScriptContainer>\n      <ScriptTabsContainer>\n        {tabs?.map((tabItem, idx) => (\n          <ScriptTabButton\n            key={idx}\n            isSelected={selectedTab === idx}\n            onClick={() => {\n              setSelectedTab(idx);\n            }}\n          >\n            {tabItem}\n          </ScriptTabButton>\n        ))}\n      </ScriptTabsContainer>\n      <ScriptTextarea readOnly value={contents[selectedTab]} />\n    </ScriptContainer>\n  );\n}\n\nfunction UTXOComponent({ inputs, outputs }: { inputs: Input[]; outputs: Output[] }) {\n  const [expanded, setExpanded] = useState(false);\n\n  const onClickDetails = () => {\n    setExpanded((prevExpanded) => !prevExpanded);\n  };\n\n  if (!outputs.length) return null;\n\n  return (\n    <UTXOContainer>\n      <DetailsButtonContainer>\n        <DetailsButton onClick={onClickDetails} isActive={expanded}>\n          DETAILS\n          {expanded ? <ShrinkIcon /> : <ExpandIcon />}\n        </DetailsButton>\n      </DetailsButtonContainer>\n      <UTXOBoxesContainer>\n        <UTXOBoxesColumn>\n          {inputs?.map((input, idx) => (\n            <UTXOInputBox key={idx} idx={idx} input={input} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n        <UTXOSeparatorColumn>\n          <UTXOSeparatorArrow />\n        </UTXOSeparatorColumn>\n        <UTXOBoxesColumn>\n          {outputs?.map((output, idx) => (\n            <UTXOOutputBox key={idx} index={idx} output={output} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n      </UTXOBoxesContainer>\n    </UTXOContainer>\n  );\n}\n\nfunction UTXOInputBox({ input, expanded, idx }: { input: Input; expanded: boolean; idx: number }) {\n  const onClickCopy = (address: string) => {\n    navigator.clipboard.writeText(address);\n  };\n\n  switch (input.type) {\n    case InputType.Coin: {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHashOutputSkip to=\"\">{input.utxoID.transactionId}</UTXOHashOutputSkip>\n            </UTXOHeadlineColumn>\n            <UTXOHeadlineColumn2>\n              <HeadlineText>Value</HeadlineText>\n              <HeadlineText>{bn(input.amount).format({ precision: DECIMAL_UNITS })}</HeadlineText>\n            </UTXOHeadlineColumn2>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Owner:</UTXODetailsKey>\n                <UTXODetailsLink to={`/address/${input.owner}`}>\n                  {trimAddress(input.owner)}\n                </UTXODetailsLink>\n                <TableHeadlineAddressButton\n                  onClick={() => {\n                    onClickCopy(input.owner);\n                  }}\n                >\n                  <CopyButtonIcon />\n                  <Tooltip>Copy Address</Tooltip>\n                </TableHeadlineAddressButton>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Amount:</UTXODetailsKey>\n                {bn(input.amount).format({ precision: DECIMAL_UNITS })}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Asset ID:</UTXODetailsKey>\n                <UTXOHashOutputSkip to=\"\">{trimAddress(input.assetId)}</UTXOHashOutputSkip>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate bytecode:</UTXODetailsKey>\n                {input.predicate}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate data:</UTXODetailsKey>\n                {input.predicateData}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate length:</UTXODetailsKey>\n                {0}\n                {/* {TBD} */}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Witness Index:</UTXODetailsKey>\n                {input.witnessIndex}\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    case InputType.Contract: {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHashOutputSkip to=\"\">{input.utxoID.transactionId}</UTXOHashOutputSkip>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n                <UTXOHashOutputSkip to=\"\">{trimAddress(input.contractID)}</UTXOHashOutputSkip>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.balanceRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>State Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.stateRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutput({ output }: { output: Output }) {\n  const onClickCopy = (address: string) => {\n    navigator.clipboard.writeText(address);\n  };\n\n  switch (output.type) {\n    case OutputType.ContractCreated: {\n      return (\n        <UTXODetailsRow>\n          <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n          <UTXOHashOutputSkip to=\"\">{output.contractId}</UTXOHashOutputSkip>\n        </UTXODetailsRow>\n      );\n    }\n    case OutputType.Contract: {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.balanceRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.stateRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Input index:</UTXODetailsKey>\n            <UTXODetailsValue>{output.inputIndex}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    case OutputType.Coin:\n    case OutputType.Change: {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>To:</UTXODetailsKey>\n            <UTXODetailsLink to={`/address/${output.to}`}>{trimAddress(output.to)}</UTXODetailsLink>\n            <TableHeadlineAddressButton\n              onClick={() => {\n                onClickCopy(output.to);\n              }}\n            >\n              <CopyButtonIcon />\n              <Tooltip>Copy Address</Tooltip>\n            </TableHeadlineAddressButton>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Amount:</UTXODetailsKey>\n            <UTXODetailsValue>\n              {bn(output.amount).format({ precision: DECIMAL_UNITS })}\n            </UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Asset ID:</UTXODetailsKey>\n            <UTXOHashOutputSkip to=\"\">{trimAddress(output.assetId)}</UTXOHashOutputSkip>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutputBox({\n  output,\n  expanded,\n  index,\n}: {\n  output: Output;\n  expanded: boolean;\n  index: number;\n}) {\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Output #{index}</UTXOTitle>\n          <UTXOHashOutputSkip to=\"\">{getOutputTypeText(output.type)}</UTXOHashOutputSkip>\n          {/* <UTXOHashOutputSkip to=\"\">{output.__typename}</UTXOHashOutputSkip> */}\n        </UTXOHeadlineColumn>\n        {output.type === OutputType.Coin && (\n          <UTXOHeadlineColumn2>\n            <HeadlineText>Amount</HeadlineText>\n            <HeadlineText>{bn(output.amount).format({ precision: DECIMAL_UNITS })}</HeadlineText>\n          </UTXOHeadlineColumn2>\n        )}\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXOOutput output={output} />\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n","// convert to string AVOIDING to show exponential notations\nexport const toPlainString = (value: number) =>\n  `${+value}`.replace(/(-?)(\\d*)\\.?(\\d*)e([+-]\\d+)/, (a, b, c, d, e) =>\n    e < 0\n      ? `${b}0.${Array(1 - e - c.length).join('0')}${c}${d}`\n      : b + c + d + Array(e - d.length + 1).join('0')\n  );\n","import { OutputType } from 'fuels';\n\nexport const trimAddress = (address: string) => {\n  if (!address) {\n    return '';\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n\nexport const getOutputTypeText = (outputType: OutputType) => {\n  switch (outputType) {\n    case OutputType.Change:\n      return 'Change';\n    case OutputType.Coin:\n      return 'Coin';\n    case OutputType.Contract:\n      return 'Contract';\n    case OutputType.ContractCreated:\n      return 'ContractCreated';\n    case OutputType.Message:\n      return 'Message';\n    case OutputType.Variable:\n      return 'Variable';\n    default:\n      return 'Unknown';\n  }\n};\n"],"names":["Container","styled","Content","Title","TitleTransaction","TransactionDataContainer","StandardSurface","TransactionDataRow","RowKeyColumn","RowValueColumn","WrapText","RowValueLink","Link","BaseLink","UTXOContainer","DetailsButtonContainer","DetailsButton","ButtonReset","isActive","UTXOBoxesContainer","UTXOBoxesColumn","UTXOSeparatorColumn","UTXOBoxContainer","UTXOHeadlineContainer","UTXOHeadlineColumn","UTXOTitle","UTXOHash","UTXODetailsContainer","UTXODetailsRow","UTXODetailsKey","UTXODetailsValue","UTXODetailsLink","UTXOSeparatorArrow","ArrowIcon","WitnessContainer","isSelected","WitnessIndex","WitnessIconContainer","WitnessIcon","FileIcon","WitnessAddress","useTransaction","transactionId","useState","transaction","setTransaction","transactionResult","setTransactionResult","provider","client","useApolloClient","useMemo","providerUrl","link","options","uri","Provider","useProvider","useEffect","getTransaction","tx","TransactionResponse","waitForResult","txResp","TransactionPage","useParams","chains","useContext","ChainContext","value","gasPriceFactor","consensusParameters","gasPriceInEth","parseFloat","gasPrice","format","precision","DECIMAL_UNITS","isScript","type","TransactionType","Header","status","replace","a","b","c","d","e","Array","length","join","BASE_COIN_NAME","gasLimit","toString","gasUsed","fee","UTXOComponent","outputs","inputs","ScriptsComponent","ContractComponent","witnesses","map","witness","index","readOnly","ScriptComponent","tabs","contents","script","scriptData","selectedTab","setSelectedTab","tabItem","idx","onClick","expanded","setExpanded","prevExpanded","input","UTXOInputBox","output","UTXOOutputBox","InputType","to","utxoID","bn","amount","owner","trimAddress","address","navigator","clipboard","writeText","assetId","predicate","predicateData","witnessIndex","contractID","balanceRoot","stateRoot","UTXOOutput","OutputType","contractId","inputIndex","getOutputTypeText","slice","outputType"],"sourceRoot":""}