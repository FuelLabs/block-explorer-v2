{"version":3,"file":"static/js/158.77fa60c5.chunk.js","mappings":"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","sources":["components/Table/components.tsx","pages/AddressPage/components.tsx","utils/address.ts","pages/BlockTransactionsPage/__generated__/operations.ts","components/Link/components.tsx","pages/BlockTransactionsPage/components.tsx","pages/BlockTransactionsPage/index.tsx","utils/date.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TableContainer = styled.div`\n  padding: 8px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.2);\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const TableHeadlineContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  padding: 8px 16px 16px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 12px 16px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableCounterText = styled.span`\n  margin: 4px 0 0;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n  white-space: nowrap;\n`;\n\nexport const TableHeadlineTitle = styled.h3`\n  margin: 0 32px 0 0;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 600;\n  color: #f8fefc;\n`;\n\nexport const TableHeadlinerContentItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1 0;\n\n  @media screen and (max-width: 768px) {\n    align-self: stretch;\n  }\n\n  @media screen and (max-width: 560px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const TableHeadRow = styled.tr``;\n\nexport const TableHeadCell = styled.th`\n  padding: 20px 12px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  line-height: 16px;\n  font-weight: 600;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const TableRow = styled.tr`\n  td {\n    border-bottom: 1px solid #21302d;\n  }\n\n  :last-of-type td {\n    border: none;\n  }\n`;\n\nexport const TableCell = styled.td<{ bold?: boolean }>`\n  vertical-align: top;\n  padding: 18px 12px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: ${({ bold }) => (bold ? '600' : 'normal')};\n  line-height: 15px;\n  text-align: left;\n  white-space: nowrap;\n  color: #f8fefc;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ButtonReset } from '../../components/Button/components';\nimport { CopyIcon, PlusIcon, QRIcon, ArrowIcon } from '../../components/Icons';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const HeadlineContainer = styled.div`\n  margin: 0 0 52px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  @media screen and (max-width: 425px) {\n    margin: 0 0 40px;\n  }\n`;\n\nexport const HeadlineAddressContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nexport const HeadlineCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  @media screen and (max-width: 1000px) {\n    margin: 16px 0 0;\n    align-items: flex-start;\n  }\n`;\n\nexport const HeadlineAddressHeader = styled.h2`\n  display: flex;\n  align-items: baseline;\n  flex-wrap: wrap;\n  margin: 0;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  white-space: break-spaces;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const HeadlineAddress = styled.span`\n  display: block;\n  margin: 4px 16px 0 0;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 560px) {\n    font-size: 15px;\n    margin: 4px 0 0 0;\n  }\n`;\n\nexport const Tooltip = styled.span`\n  padding: 2px 8px;\n  display: none;\n  position: absolute;\n  top: -28px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #58c09b;\n  border-radius: 4px;\n  white-space: nowrap;\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nexport const HeadlineAddressButton = styled(ButtonReset)`\n  position: relative;\n  margin: 0 0 0 12px;\n  width: 24px;\n  height: 24px;\n  justify-content: center;\n  background-color: #58c09b;\n  border-radius: 12px;\n  color: #081c17;\n  margin: 8px 16px 0 0;\n\n  :first-of-type {\n  }\n\n  :hover {\n    box-shadow: 0 0 3px 0 #58c09b;\n  }\n\n  :hover ${Tooltip} {\n    display: block;\n  }\n`;\n\nexport const CopyButtonIcon = styled(CopyIcon)`\n  width: 14px !important;\n  height: 14px !important;\n`;\n\nexport const QRButtonIcon = styled(QRIcon)`\n  width: 14px !important;\n  height: 14px !important;\n`;\n\nexport const CoinsCounterLabel = styled.div`\n  margin: 0 0 12px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  border-radius: 13px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 16px;\n  color: #f8fefc;\n`;\n\nexport const CoinsCounter = styled.span`\n  margin: 0 0 0 4px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: SFProText;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 11px;\n  color: #021d17;\n  background-color: #f8fefc;\n  border-radius: 7px;\n`;\n\nexport const TokenDropdownContainer = styled.div`\n  position: relative;\n`;\n\nexport const TokenButtonSeparator = styled.span`\n  width: 1px;\n  height: 36px;\n  background-color: #808080;\n  transition: 0.2s ease-out;\n`;\n\nexport const TokenButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 0;\n  width: 190px;\n  height: 36px;\n  border-radius: 5px;\n  border: solid 1px #808080;\n  background-color: #192f2b;\n  box-shadow: ${({ isActive }) => (isActive ? '0 0 2px 0 #58c09b' : 'none')};\n\n  :hover {\n    border: solid 1px #58c09b;\n  }\n\n  :hover ${TokenButtonSeparator} {\n    background-color: #58c09b;\n  }\n`;\n\nexport const TokenButtonSymbol = styled.span`\n  margin: 0 0 0 14px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: normal;\n  color: #f8fefc;\n`;\n\nexport const TokenButtonAmount = styled.span`\n  margin: 0 14px 0 0;\n  flex: 1 1 0;\n  font-family: SFProDisplay;\n  font-size: 17px;\n  font-weight: 600;\n  color: #f8fefc;\n  text-align: right;\n`;\n\nexport const TokenButtonIconContainer = styled.div`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #f9fefc;\n`;\n\nexport const TokenDropdownIcon = styled(ArrowIcon)`\n  transform: rotate(90deg);\n  width: 12px !important;\n  height: 12px !important;\n`;\n\nexport const TableContainer = styled.div`\n  padding: 8px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.2);\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const TableHeadlineContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  padding: 8px 16px 16px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 12px 16px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableHeadlinerContentItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1 0;\n\n  @media screen and (max-width: 768px) {\n    align-self: stretch;\n  }\n\n  @media screen and (max-width: 560px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableHeadlineTitle = styled.h3`\n  margin: 0 32px 0 0;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 600;\n  color: #f8fefc;\n`;\n\nexport const TableHeadlineDisclaimer = styled.span`\n  margin: 4px 0 0;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n  white-space: nowrap;\n`;\n\nexport const HeadlineHighlighedDisclaimer = styled.span`\n  color: #f8fefc;\n`;\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const TableHeadRow = styled.tr``;\n\nexport const TableRow = styled.tr`\n  td {\n    border-bottom: 1px solid #21302d;\n  }\n\n  :last-of-type td {\n    border: none;\n  }\n`;\n\nexport const TableHeadCell = styled.th`\n  padding: 20px 12px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  line-height: 16px;\n  font-weight: 600;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const TableCell = styled.td`\n  vertical-align: top;\n  padding: 18px 12px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  line-height: 15px;\n  text-align: left;\n  white-space: nowrap;\n  color: #f8fefc;\n`;\n\nconst BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TxHash = styled(BaseLink)`\n  display: block;\n  max-width: 124px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const InputsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const InputsAddresses = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputAddressContainer = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const InputAddressLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  line-height: 18px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const InputsExpandButton = styled(ButtonReset)`\n  justify-content: center;\n  margin: 0 0 0 40px;\n  width: 18px;\n  height: 18px;\n  background-color: #58c09b;\n  border-radius: 9px;\n  color: #081c17;\n\n  :hover {\n    box-shadow: 0 0 3px 0 #58c09b;\n  }\n`;\n\nexport const ExpandIcon = styled(PlusIcon)<{ rotated?: boolean }>`\n  width: 16px !important;\n  height: 16px !important;\n  transform: ${({ rotated }) => (rotated ? 'rotate(45deg)' : 'rotate(0deg)')};\n  transition: 0.2s ease-out;\n`;\n\nexport const TxRecipient = styled(BaseLink)`\n  display: block;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const BoldText = styled.span`\n  font-weight: 600;\n`;\n\nexport const TransactionValue = styled.span`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const CoinLink = styled(BaseLink)`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n  max-width: 60px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const CoinLinkSkip = styled(CoinLink)`\n  cursor: auto;\n  color: #f8fefc;\n\n  :active {\n    text-shadow: 0;\n    color: #f8fefc;\n  }\n`;\n\nexport const TableNavigationButtons = styled.div`\n  margin: 4px 0 0;\n  display: flex;\n  font-family: SFProText;\n  font-size: 11px;\n  line-height: 14px;\n  font-weight: normal;\n  color: #808080;\n\n  @media screen and (max-width: 560px) {\n    margin: 12px 0 0;\n  }\n`;\n\nexport const TableNavigationButton = styled(ButtonReset)<{\n  isSelected?: boolean;\n}>`\n  height: 13px;\n  color: ${({ isSelected }) => (isSelected ? '#d1d4d7;' : '#808080')};\n  background-color: ${({ isSelected }) => (isSelected ? '#192f2b;' : 'rgba(0, 0, 0, 0)')};\n\n  :hover {\n    color: #d1d4d7;\n  }\n\n  :disabled {\n    color: #192f2b;\n  }\n`;\n\nexport const TableNavigationNumbersContainer = styled.div`\n  display: flex;\n  margin: 0 12px;\n`;\n\nexport const TableNavigationNumberButton = styled(TableNavigationButton)`\n  margin: 0 2px;\n  width: 13px;\n  justify-content: center;\n`;\n\nexport const TableNavigationTextButton = styled(TableNavigationButton)`\n  line-height: 14px;\n  margin: 0 12px;\n\n  @media screen and (max-width: 425px) {\n    :first-of-type {\n      margin: 0 12px 0 0;\n    }\n\n    :last-of-type {\n      margin: 0 0 0 12px;\n    }\n  }\n`;\n\nexport const TableNextNavigationTextButton = styled(TableNavigationTextButton)`\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n","export const trimAddress = (address: string) => {\n  if (!address) {\n    return '';\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n","import type * as Types from '../../../api/__generated__/types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type BlockTransactionsPageQueryVariables = Types.Exact<{\n  height?: Types.InputMaybe<Types.Scalars['U64']>;\n}>;\n\n\nexport type BlockTransactionsPageQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, height: string, time: string, producer: string, transactions: Array<{ __typename: 'Transaction', id: string, inputAssetIds: Array<string>, gasPrice: string, gasLimit: string, maturity: string, isScript: boolean, receiptsRoot?: string | null, witnesses: Array<string>, inputContracts: Array<{ __typename: 'Contract', id: string }>, outputs: Array<{ __typename: 'ChangeOutput', to: string, amount: string, assetId: string } | { __typename: 'CoinOutput', to: string, amount: string, assetId: string } | { __typename: 'ContractCreated', contract: { __typename: 'Contract', id: string } } | { __typename: 'ContractOutput', inputIndex: number, balanceRoot: string, stateRoot: string } | { __typename: 'VariableOutput', to: string, amount: string, assetId: string } | { __typename: 'WithdrawalOutput', to: string, amount: string, assetId: string }>, inputs: Array<{ __typename: 'InputCoin', owner: string } | { __typename: 'InputContract', contract: { __typename: 'Contract', id: string } }>, status?: { __typename: 'FailureStatus', time: string } | { __typename: 'SubmittedStatus', time: string } | { __typename: 'SuccessStatus', time: string } | null }> } | null };\n\nexport type BlockTransactionFragment = { __typename: 'Transaction', id: string, inputAssetIds: Array<string>, gasPrice: string, gasLimit: string, maturity: string, isScript: boolean, receiptsRoot?: string | null, witnesses: Array<string>, inputContracts: Array<{ __typename: 'Contract', id: string }>, outputs: Array<{ __typename: 'ChangeOutput', to: string, amount: string, assetId: string } | { __typename: 'CoinOutput', to: string, amount: string, assetId: string } | { __typename: 'ContractCreated', contract: { __typename: 'Contract', id: string } } | { __typename: 'ContractOutput', inputIndex: number, balanceRoot: string, stateRoot: string } | { __typename: 'VariableOutput', to: string, amount: string, assetId: string } | { __typename: 'WithdrawalOutput', to: string, amount: string, assetId: string }>, inputs: Array<{ __typename: 'InputCoin', owner: string } | { __typename: 'InputContract', contract: { __typename: 'Contract', id: string } }>, status?: { __typename: 'FailureStatus', time: string } | { __typename: 'SubmittedStatus', time: string } | { __typename: 'SuccessStatus', time: string } | null };\n\nexport const BlockTransactionFragmentDoc = gql`\n    fragment BlockTransactionFragment on Transaction {\n  id\n  inputContracts {\n    id\n  }\n  inputAssetIds\n  gasPrice\n  gasLimit\n  maturity\n  isScript\n  receiptsRoot\n  witnesses\n  outputs {\n    __typename\n    ... on CoinOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ContractOutput {\n      inputIndex\n      balanceRoot\n      stateRoot\n    }\n    ... on WithdrawalOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ChangeOutput {\n      to\n      amount\n      assetId\n    }\n    ... on VariableOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ContractCreated {\n      contract {\n        id\n      }\n    }\n  }\n  inputs {\n    __typename\n    ... on InputCoin {\n      owner\n    }\n    ... on InputContract {\n      contract {\n        id\n      }\n    }\n  }\n  status {\n    ... on SubmittedStatus {\n      time\n    }\n    ... on SuccessStatus {\n      time\n    }\n    ... on FailureStatus {\n      time\n    }\n  }\n}\n    `;\nexport const BlockTransactionsPageQueryDocument = gql`\n    query BlockTransactionsPageQuery($height: U64) {\n  block(height: $height) {\n    id\n    height\n    time\n    producer\n    transactions {\n      ...BlockTransactionFragment\n    }\n  }\n}\n    ${BlockTransactionFragmentDoc}`;\n\n/**\n * __useBlockTransactionsPageQuery__\n *\n * To run a query within a React component, call `useBlockTransactionsPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlockTransactionsPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlockTransactionsPageQuery({\n *   variables: {\n *      height: // value for 'height'\n *   },\n * });\n */\nexport function useBlockTransactionsPageQuery(baseOptions?: Apollo.QueryHookOptions<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>(BlockTransactionsPageQueryDocument, options);\n      }\nexport function useBlockTransactionsPageQueryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>(BlockTransactionsPageQueryDocument, options);\n        }\nexport type BlockTransactionsPageQueryHookResult = ReturnType<typeof useBlockTransactionsPageQuery>;\nexport type BlockTransactionsPageQueryLazyQueryHookResult = ReturnType<typeof useBlockTransactionsPageQueryLazyQuery>;\nexport type BlockTransactionsPageQueryQueryResult = Apollo.QueryResult<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GreenLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { GreenLink } from '../../components/Link/components';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 8px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n`;\n\nexport const Subtitle = styled.span`\n  margin: 0 0 32px;\n  display: block;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const TxHashLink = styled(GreenLink)`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 425px) {\n    max-width: 124px;\n  }\n`;\n\nexport const TxRecipientLink = styled(GreenLink)`\n  display: block;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const TxValue = styled.span`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const CoinLink = styled(GreenLink)`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n  max-width: 80px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const HeadlineTransactionsNumber = styled.span`\n  color: #f8fefc;\n`;\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { useParams } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport {\n  Table,\n  TableCell,\n  TableCounterText,\n  TableHeadCell,\n  TableHeadlineContainer,\n  TableHeadlinerContentItem,\n  TableHeadlineTitle,\n  TableHeadRow,\n  TableRow,\n  TableWrapper,\n} from '../../components/Table/components';\nimport { trimAddress } from '../../utils/address';\nimport { dateDiffRelative, getTextForRelativeTimeDifference } from '../../utils/date';\nimport { CoinLinkSkip, TableContainer } from '../AddressPage/components';\n\nimport type { BlockTransactionFragment } from './__generated__/operations';\nimport { useBlockTransactionsPageQuery } from './__generated__/operations';\nimport {\n  CoinLink,\n  Container,\n  Content,\n  HeadlineTransactionsNumber,\n  Subtitle,\n  Title,\n  TxHashLink,\n  TxRecipientLink,\n  TxValue,\n} from './components';\n\nexport default function BlockTransactionsPage() {\n  const { block } = useParams() as any;\n  const { data } = useBlockTransactionsPageQuery({\n    variables: { height: BigNumber.from(block).toString() },\n  });\n  const bl = data?.block;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>Transaction list</Title>\n          <Subtitle>{`Block: #${block}`}</Subtitle>\n          <Transactions transactions={bl?.transactions || []} />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction Transactions({ transactions }: { transactions: BlockTransactionFragment[] }) {\n  return (\n    <TableContainer>\n      <TableHeadlineContainer>\n        <TableHeadlineTitle>Transactions</TableHeadlineTitle>\n        <TableHeadlinerContentItem>\n          <TableCounterText>\n            {`Showing `}\n            <HeadlineTransactionsNumber>1</HeadlineTransactionsNumber>\n            {` out of `}\n            <HeadlineTransactionsNumber>1</HeadlineTransactionsNumber>\n            {` transactions`}\n          </TableCounterText>\n        </TableHeadlinerContentItem>\n      </TableHeadlineContainer>\n      <TableWrapper>\n        <Table>\n          <thead>\n            <TableHeadRow>\n              <TableHeadCell>Tx Hash</TableHeadCell>\n              <TableHeadCell>Type</TableHeadCell>\n              <TableHeadCell>Age</TableHeadCell>\n              <TableHeadCell>From</TableHeadCell>\n            </TableHeadRow>\n          </thead>\n          <tbody>\n            {transactions.map((transaction) => (\n              <TableRow key={transaction.id}>\n                <TableCell>\n                  <TxHashLink to={`/transaction/${transaction.id}`}>{transaction.id}</TxHashLink>\n                </TableCell>\n                <TableCell>{transaction.isScript ? 'Script' : 'Create'}</TableCell>\n                <TableCell>\n                  {transaction.status ? (\n                    <>\n                      {getTextForRelativeTimeDifference(\n                        dateDiffRelative(new Date(), new Date(transaction.status.time))\n                      )}\n                    </>\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {transaction.inputs.map((input, idx) =>\n                    (() => {\n                      switch (input.__typename) {\n                        case 'InputCoin': {\n                          return (\n                            <TxHashLink key={idx} to={`/address/${input.owner}`}>\n                              {trimAddress(input.owner)}\n                            </TxHashLink>\n                          );\n                        }\n                        case 'InputContract': {\n                          return (\n                            <TxHashLink key={idx} to={`/address/${input.contract.id}`}>\n                              {trimAddress(input.contract.id)}\n                            </TxHashLink>\n                          );\n                        }\n                        default: {\n                          // @ts-ignore\n                          return input.__typename;\n                        }\n                      }\n                    })()\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </TableWrapper>\n    </TableContainer>\n  );\n}\n","type DateDifference = {\n  seconds: number;\n  minutes: number;\n  hours: number;\n  days: number;\n};\n\nexport const dateDiff = (date1: Date, date2: Date): DateDifference => {\n  const seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  // hours = hours - (days * 24);\n  // minutes = minutes - (days * 24 * 60) - (hours * 60);\n  // seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const dateDiffRelative = (date1: Date, date2: Date): DateDifference => {\n  let seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  hours -= days * 24;\n  minutes = minutes - days * 24 * 60 - hours * 60;\n  seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const getTextForRelativeTimeDifference = (dateDiff: DateDifference) => {\n  const text: string[] = [];\n\n  if (dateDiff.days > 0) text.push(`${dateDiff.days} days`);\n  if (dateDiff.hours > 0) text.push(`${dateDiff.hours} hrs`);\n  if (dateDiff.minutes > 0) text.push(`${dateDiff.minutes} min`);\n  if (dateDiff.seconds > 0) text.push(`${dateDiff.seconds} sec`);\n\n  return `${text.slice(0, 2).join(' ')} ago`;\n};\n\nexport const getTextForTimeDifference = (dateDiff: DateDifference) => {\n  if (dateDiff.days > 0) return `${dateDiff.hours} hours ago`;\n  if (dateDiff.hours > 0) return `${dateDiff.hours} hours ago`;\n  if (dateDiff.minutes > 0) return `${dateDiff.minutes} minutes ago`;\n  if (dateDiff.seconds > 0) return `${dateDiff.seconds} seconds ago`;\n\n  return '';\n};\n"],"names":["TableContainer","styled","TableHeadlineContainer","TableCounterText","TableHeadlineTitle","TableHeadlinerContentItem","TableWrapper","Table","TableHeadRow","TableHeadCell","TableRow","TableCell","bold","Container","Content","HeadlineContainer","HeadlineAddressContainer","HeadlineCoinsContainer","HeadlineAddressHeader","HeadlineAddress","Tooltip","HeadlineAddressButton","ButtonReset","CopyButtonIcon","CopyIcon","QRButtonIcon","QRIcon","CoinsCounterLabel","CoinsCounter","TokenDropdownContainer","TokenButtonSeparator","TokenButton","isActive","TokenButtonSymbol","TokenButtonAmount","TokenButtonIconContainer","TokenDropdownIcon","ArrowIcon","TableHeadlineDisclaimer","HeadlineHighlighedDisclaimer","BaseLink","Link","TxHash","TxRecipient","PlusIcon","rotated","BoldText","TransactionValue","CoinLink","TableNavigationButtons","TableNavigationButton","isSelected","TableNavigationNumbersContainer","TableNavigationNumberButton","TableNavigationTextButton","TableNextNavigationTextButton","trimAddress","address","slice","length","defaultOptions","BlockTransactionFragmentDoc","gql","BlockTransactionsPageQueryDocument","GreenLink","Title","Subtitle","TxHashLink","HeadlineTransactionsNumber","BlockTransactionsPage","block","useParams","data","baseOptions","options","Apollo","useBlockTransactionsPageQuery","variables","height","BigNumber","toString","bl","Header","Transactions","transactions","map","transaction","to","id","isScript","status","getTextForRelativeTimeDifference","dateDiffRelative","Date","time","inputs","input","idx","__typename","owner","contract","dateDiff","date1","date2","seconds","Math","floor","abs","getTime","minutes","hours","days","text","push","join","getTextForTimeDifference"],"sourceRoot":""}