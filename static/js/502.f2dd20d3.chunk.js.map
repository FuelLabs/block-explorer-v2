{"version":3,"file":"static/js/502.f2dd20d3.chunk.js","mappings":"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","sources":["pages/BlockPage/__generated__/operations.ts","pages/BlockPage/components.tsx","pages/BlockPage/index.tsx"],"sourcesContent":["import type * as Types from '../../../api/__generated__/types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type BlockPageQueryVariables = Types.Exact<{\n  height?: Types.InputMaybe<Types.Scalars['U64']>;\n  previousHeight?: Types.InputMaybe<Types.Scalars['U64']>;\n}>;\n\n\nexport type BlockPageQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, height: string, time: string, producer: string, transactions: Array<{ __typename: 'Transaction' }> } | null, previousBlock?: { __typename: 'Block', id: string, height: string, time: string, producer: string, transactions: Array<{ __typename: 'Transaction' }> } | null };\n\nexport type BlockPageBlock = { __typename: 'Block', id: string, height: string, time: string, producer: string, transactions: Array<{ __typename: 'Transaction' }> };\n\nexport const BlockPageBlockFragmentDoc = gql`\n    fragment BlockPageBlock on Block {\n  id\n  height\n  time\n  producer\n  transactions {\n    __typename\n  }\n}\n    `;\nexport const BlockPageQueryDocument = gql`\n    query BlockPageQuery($height: U64, $previousHeight: U64) {\n  block(height: $height) {\n    ...BlockPageBlock\n  }\n  previousBlock: block(height: $previousHeight) {\n    ...BlockPageBlock\n  }\n}\n    ${BlockPageBlockFragmentDoc}`;\n\n/**\n * __useBlockPageQuery__\n *\n * To run a query within a React component, call `useBlockPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlockPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlockPageQuery({\n *   variables: {\n *      height: // value for 'height'\n *      previousHeight: // value for 'previousHeight'\n *   },\n * });\n */\nexport function useBlockPageQuery(baseOptions?: Apollo.QueryHookOptions<BlockPageQuery, BlockPageQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<BlockPageQuery, BlockPageQueryVariables>(BlockPageQueryDocument, options);\n      }\nexport function useBlockPageQueryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BlockPageQuery, BlockPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<BlockPageQuery, BlockPageQueryVariables>(BlockPageQueryDocument, options);\n        }\nexport type BlockPageQueryHookResult = ReturnType<typeof useBlockPageQuery>;\nexport type BlockPageQueryLazyQueryHookResult = ReturnType<typeof useBlockPageQueryLazyQuery>;\nexport type BlockPageQueryQueryResult = Apollo.QueryResult<BlockPageQuery, BlockPageQueryVariables>;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ArrowIcon } from '../../components/Icons';\nimport { StandardSurface } from '../../components/Surface/components';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  @media screen and (max-width: 768px) {\n    margin: 0 0 24px;\n  }\n`;\n\nexport const BlockDataContainer = styled(StandardSurface)`\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 24px;\n  }\n`;\n\nexport const BlockDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  flex: 0 0 250px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    flex: 1 1 0;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  flex: 1 1 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProducerLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHash = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const EtherscanBlockLink = styled.a`\n  margin: 0 0 0 8px;\n  color: #58c09b;\n\n  svg {\n    height: 12px !important;\n    width: 12px !important;\n  }\n`;\n\nexport const AddressesCount = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const TransactionsCount = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHeightContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHeight = styled.div`\n  margin: 0 12px;\n  text-align: center;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const BlockNavigationButton = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  border-radius: 2px;\n  border: solid 0.2px #58c09b;\n  background-color: #03261e;\n  color: #58c09b;\n\n  :hover {\n    box-shadow: 0 0 2px 0 #58c09b;\n  }\n`;\n\nexport const BlockNavigationIcon = styled(ArrowIcon)<{ rotate?: boolean }>`\n  width: 6px !important;\n  height: 6px !important;\n  transform: ${({ rotate }) => (rotate ? 'rotate(180deg)' : 'none')};\n`;\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { useParams } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport { ExternalLinkIcon } from '../../components/Icons';\n\nimport { useBlockPageQuery } from './__generated__/operations';\nimport {\n  AddressesCount,\n  BlockDataContainer,\n  BlockDataRow,\n  BlockHash,\n  BlockHeight,\n  BlockHeightContainer,\n  BlockNavigationButton,\n  BlockNavigationIcon,\n  BlockNumber,\n  Container,\n  Content,\n  EtherscanBlockLink,\n  ProducerLink,\n  RowKeyColumn,\n  Title,\n  TransactionsCount,\n} from './components';\n\nexport default function BlockPage() {\n  const { block } = useParams() as any;\n\n  const { data, loading } = useBlockPageQuery({\n    variables: {\n      height: BigNumber.from(block).toString(),\n      previousHeight: BigNumber.from(block).sub(1).toString(),\n    },\n  });\n\n  const bl = data?.block;\n  const prevBl = data?.previousBlock;\n\n  if (loading)\n    return (\n      <>\n        <Header />\n        <Container>\n          <Content>\n            <Title>{`Block:  #${block}`}</Title>\n            Loading\n          </Content>\n        </Container>\n      </>\n    );\n\n  if (!bl)\n    return (\n      <>\n        <Header />\n        <Container>\n          <Content>\n            <Title>{`Block:  #${block}`}</Title>\n            Not found\n          </Content>\n        </Container>\n      </>\n    );\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>{`Block:  #${block}`}</Title>\n          <BlockDataContainer>\n            <BlockDataRow>\n              <RowKeyColumn>Block height:</RowKeyColumn>\n              <BlockHeightContainer>\n                <BlockNavigationButton to={`/block/${parseInt(block, 10) - 1}`}>\n                  <BlockNavigationIcon rotate />\n                </BlockNavigationButton>\n                <BlockHeight>{bl.height}</BlockHeight>\n                <BlockNavigationButton to={`/block/${parseInt(block, 10) + 1}`}>\n                  <BlockNavigationIcon />\n                </BlockNavigationButton>\n              </BlockHeightContainer>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Block producer:</RowKeyColumn>\n              <ProducerLink to=\"/address/0xc5d2460186f7233c927e7db2dcc703c0e500\">\n                {bl.producer}\n              </ProducerLink>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Previous block hash:</RowKeyColumn>\n              <BlockHash to={`/block/${prevBl?.height}`}>{prevBl?.id}</BlockHash>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Number of transactions:</RowKeyColumn>\n              <TransactionsCount to={`/block/${block}/transactions`}>\n                {bl.transactions?.length}\n              </TransactionsCount>\n            </BlockDataRow>\n          </BlockDataContainer>\n        </Content>\n      </Container>\n    </>\n  );\n}\n"],"names":["defaultOptions","BlockPageBlockFragmentDoc","gql","BlockPageQueryDocument","Container","styled","Content","Title","BlockDataContainer","StandardSurface","BlockDataRow","RowKeyColumn","ProducerLink","Link","BlockHash","TransactionsCount","BlockHeightContainer","BlockHeight","BlockNavigationButton","BlockNavigationIcon","ArrowIcon","rotate","BlockPage","block","useParams","baseOptions","options","Apollo","useBlockPageQuery","variables","height","BigNumber","toString","previousHeight","sub","data","loading","bl","prevBl","previousBlock","Header","to","parseInt","producer","id","transactions","length"],"sourceRoot":""}