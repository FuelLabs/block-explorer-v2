{"version":3,"file":"static/js/257.b18991b9.chunk.js","mappings":"yIAAO,IAAMA,EAAU,iB,qKCWhBC,EAAKC,IAAAA,GAMNC,EAAS,IAAIC,EAAAA,GAAOJ,EAAAA,GAEpBK,EAAoB,CAAC,EAErBC,EAAW,iBAKX,SAAUC,EAAeC,GAC3B,OAAiB,MAATA,IACJC,EAAUC,YAAYF,IACH,kBAAXA,GAAwBA,EAAQ,IAAO,GAC5B,kBAAXA,KAAyBA,EAAMG,MAAM,gBAC7CC,EAAAA,EAAAA,IAAYJ,IACO,kBAAXA,IACRK,EAAAA,EAAAA,IAAQL,GAEf,CAGD,IAAIM,GAAuB,EAEdL,EAAb,WAII,WAAYM,EAAuBC,IAAW,eACtCD,IAAqBV,GACrBF,EAAOc,WAAW,uDAAwDb,EAAAA,GAAAA,OAAAA,sBAAqC,CAC3Gc,UAAW,oBAInBC,KAAKC,KAAOJ,EACZG,KAAKE,cAAe,EAEpBC,OAAOC,OAAOJ,KACjB,CAfL,uCAiBI,SAASX,GACL,OAAOgB,EAAYC,EAAKN,MAAMO,SAASlB,GAC1C,GAnBL,oBAqBI,SAAOA,GACH,OAAOgB,EAAYC,EAAKN,MAAMQ,OAAOnB,GACxC,GAvBL,iBAyBI,WACI,MAAqB,MAAjBW,KAAKC,KAAK,GACHX,EAAUmB,KAAKT,KAAKC,KAAKS,UAAU,IAEvCV,IACV,GA9BL,iBAgCI,SAAIW,GACA,OAAON,EAAYC,EAAKN,MAAMY,IAAIN,EAAKK,IAC1C,GAlCL,iBAoCI,SAAIA,GACA,OAAON,EAAYC,EAAKN,MAAMa,IAAIP,EAAKK,IAC1C,GAtCL,iBAwCI,SAAIA,GAKA,OAJUrB,EAAUmB,KAAKE,GACnBG,UACFC,EAAW,mBAAoB,OAE5BV,EAAYC,EAAKN,MAAMgB,IAAIV,EAAKK,IAC1C,GA9CL,iBAgDI,SAAIA,GACA,OAAON,EAAYC,EAAKN,MAAMiB,IAAIX,EAAKK,IAC1C,GAlDL,iBAoDI,SAAIA,GACA,IAAMtB,EAAQiB,EAAKK,GAInB,OAHItB,EAAM6B,SACNH,EAAW,mBAAoB,OAE5BV,EAAYC,EAAKN,MAAMmB,KAAK9B,GACtC,GA1DL,iBA4DI,SAAIsB,GACA,IAAMtB,EAAQiB,EAAKK,GAInB,OAHItB,EAAM6B,SACNH,EAAW,iBAAkB,OAE1BV,EAAYC,EAAKN,MAAMoB,IAAI/B,GACrC,GAlEL,iBAoEI,SAAIsB,GACA,IAAMtB,EAAQiB,EAAKK,GAInB,OAHIX,KAAKqB,cAAgBhC,EAAM6B,UAC3BH,EAAW,yBAA0B,OAElCV,EAAYC,EAAKN,MAAMsB,IAAIjC,GACrC,GA1EL,gBA4EI,SAAGsB,GACC,IAAMtB,EAAQiB,EAAKK,GAInB,OAHIX,KAAKqB,cAAgBhC,EAAM6B,UAC3BH,EAAW,yBAA0B,MAElCV,EAAYC,EAAKN,MAAMuB,GAAGlC,GACpC,GAlFL,iBAoFI,SAAIsB,GACA,IAAMtB,EAAQiB,EAAKK,GAInB,OAHIX,KAAKqB,cAAgBhC,EAAM6B,UAC3BH,EAAW,yBAA0B,OAElCV,EAAYC,EAAKN,MAAMwB,IAAInC,GACrC,GA1FL,kBA4FI,SAAKA,GAID,OAHIW,KAAKqB,cAAgBhC,EAAQ,IAC7B0B,EAAW,iBAAkB,QAE1BV,EAAYC,EAAKN,MAAMyB,MAAMpC,GACvC,GAjGL,iBAmGI,SAAIA,GAIA,OAHIW,KAAKqB,cAAgBhC,EAAQ,IAC7B0B,EAAW,iBAAkB,OAE1BV,EAAYC,EAAKN,MAAM0B,KAAKrC,GACtC,GAxGL,iBA0GI,SAAIA,GAIA,OAHIW,KAAKqB,cAAgBhC,EAAQ,IAC7B0B,EAAW,iBAAkB,OAE1BV,EAAYC,EAAKN,MAAM2B,KAAKtC,GACtC,GA/GL,gBAiHI,SAAGsB,GACC,OAAOL,EAAKN,MAAM4B,GAAGtB,EAAKK,GAC7B,GAnHL,gBAqHI,SAAGA,GACC,OAAOL,EAAKN,MAAM6B,GAAGvB,EAAKK,GAC7B,GAvHL,iBAyHI,SAAIA,GACA,OAAOL,EAAKN,MAAM8B,IAAIxB,EAAKK,GAC9B,GA3HL,gBA6HI,SAAGA,GACC,OAAOL,EAAKN,MAAM+B,GAAGzB,EAAKK,GAC9B,GA/HJ,iBAiII,SAAIA,GACA,OAAOL,EAAKN,MAAMgC,IAAI1B,EAAKK,GAC9B,GAnIL,wBAqII,WACI,MAAyB,MAAjBX,KAAKC,KAAK,EACrB,GAvIL,oBAyII,WACI,OAAOK,EAAKN,MAAMc,QACrB,GA3IL,sBA6II,WACI,IACI,OAAOR,EAAKN,MAAMiC,UAGrB,CAFC,MAAOC,GACLnB,EAAW,WAAY,WAAYf,KAAKmC,WAC3C,CACD,OAAO,IACV,GApJL,sBAsJI,WACI,IACI,OAAOC,OAAOpC,KAAKmC,WACR,CAAb,MAAOE,GAAM,CAEf,OAAOrD,EAAOc,WAAW,wCAAyCb,EAAAA,GAAAA,OAAAA,sBAAqC,CACnGI,MAAOW,KAAKmC,YAEnB,GA9JL,sBAgKI,WAcI,OAZIG,UAAUC,OAAS,IACE,KAAjBD,UAAU,GACL3C,IACDA,GAAuB,EACvBX,EAAOwD,KAAK,0EAEQ,KAAjBF,UAAU,GACjBtD,EAAOc,WAAW,iFAAkFb,EAAAA,GAAAA,OAAAA,oBAAmC,CAAC,GAExID,EAAOc,WAAW,gDAAiDb,EAAAA,GAAAA,OAAAA,oBAAmC,CAAC,IAGxGqB,EAAKN,MAAMmC,SAAS,GAC9B,GA/KL,yBAiLI,WACI,OAAOnC,KAAKC,IACf,GAnLL,oBAqLI,SAAOwC,GACH,MAAO,CAAEC,KAAM,YAAa7C,IAAKG,KAAK2C,cACzC,IAvLL,mBAyLI,SAAYtD,GACR,GAAIA,aAAiBC,EAAa,OAAOD,EAEzC,GAAsB,kBAAXA,EACP,OAAIA,EAAMG,MAAM,oBACL,IAAIF,EAAUJ,EAAmB0D,EAAMvD,IAG9CA,EAAMG,MAAM,cACL,IAAIF,EAAUJ,EAAmB0D,EAAM,IAAI9D,EAAGO,KAGlDL,EAAO6D,mBAAmB,2BAA4B,QAASxD,GAG1E,GAAsB,kBAAXA,EASP,OARIA,EAAQ,GACR0B,EAAW,YAAa,iBAAkB1B,IAG1CA,GAASF,GAAYE,IAAUF,IAC/B4B,EAAW,WAAY,iBAAkB1B,GAGtCC,EAAUmB,KAAKqC,OAAOzD,IAGjC,IAAM0D,EAAgB1D,EAEtB,GAAyB,kBAAd0D,EACP,OAAOzD,EAAUmB,KAAKsC,EAASZ,YAGnC,IAAIzC,EAAAA,EAAAA,IAAQqD,GACR,OAAOzD,EAAUmB,MAAKuC,EAAAA,EAAAA,IAAQD,IAGlC,GAAIA,EAGA,GAAIA,EAASJ,YAAa,CACtB,IAAM9C,EAAMkD,EAASJ,cACrB,GAAoB,kBAAT9C,EACP,OAAOP,EAAUmB,KAAKZ,EAG7B,KAAM,CAEH,IAAIA,EAAMkD,EAAS9C,KAOnB,GAJW,MAAPJ,GAAiC,cAAlBkD,EAASL,OACxB7C,EAAMkD,EAASlD,KAGC,kBAATA,KACHJ,EAAAA,EAAAA,IAAYI,IAAoB,MAAXA,EAAI,KAAcJ,EAAAA,EAAAA,IAAYI,EAAIa,UAAU,KACjE,OAAOpB,EAAUmB,KAAKZ,EAGjC,CAGL,OAAOb,EAAO6D,mBAAmB,0BAA2B,QAASxD,EACxE,GAzPL,yBA2PI,SAAmBA,GACf,SAAUA,IAASA,EAAMa,aAC5B,KA7PL,KAiQA,SAAS0C,EAAMvD,GAGX,GAAsB,kBAAXA,EACP,OAAOuD,EAAMvD,EAAM8C,SAAS,KAIhC,GAAiB,MAAb9C,EAAM,GAWN,MANiB,OAHjBA,EAAQA,EAAMqB,UAAU,IAGd,IAAc1B,EAAO6D,mBAAmB,cAAe,QAASxD,GAM5D,UAHdA,EAAQuD,EAAMvD,IAGiBA,EAGxB,IAAMA,EAOjB,GAH8B,OAA1BA,EAAMqB,UAAU,EAAG,KAAerB,EAAQ,KAAOA,GAGvC,OAAVA,EAAkB,MAAO,OAM7B,IAHIA,EAAMkD,OAAS,IAAKlD,EAAQ,MAAQA,EAAMqB,UAAU,IAGjDrB,EAAMkD,OAAS,GAA+B,SAA1BlD,EAAMqB,UAAU,EAAG,IAC1CrB,EAAQ,KAAOA,EAAMqB,UAAU,GAGnC,OAAOrB,CACV,CAED,SAASgB,EAAYhB,GACjB,OAAOC,EAAUmB,KAAKmC,EAAMvD,GAC/B,CAED,SAASiB,EAAKjB,GACV,IAAMQ,EAAMP,EAAUmB,KAAKpB,GAAOsD,cAClC,MAAe,MAAX9C,EAAI,GACI,IAAIf,EAAG,IAAMe,EAAIa,UAAU,GAAI,IAEpC,IAAI5B,EAAGe,EAAIa,UAAU,GAAI,GACnC,CAED,SAASK,EAAWkC,EAAelD,EAAmBV,GAClD,IAAM6D,EAAc,CAAED,MAAOA,EAAOlD,UAAWA,GAG/C,OAFa,MAATV,IAAiB6D,EAAO7D,MAAQA,GAE7BL,EAAOc,WAAWmD,EAAOhE,EAAAA,GAAAA,OAAAA,cAA6BiE,EAChE,C,iPChWKlE,EAAS,I,QAAIC,ICJI,eDwDvB,SAASkE,EAAU9D,GACf,QAAUA,EAAMsD,WACnB,CAED,SAASS,EAASC,GACd,OAAIA,EAAMC,QAEVD,EAAMC,MAAQ,WACV,IAAMC,EAAOC,MAAMC,UAAUH,MAAMI,KAAKpB,WACxC,OAAOc,EAAS,IAAIO,WAAWH,MAAMC,UAAUH,MAAMM,MAAMP,EAAOE,IACrE,GALyBF,CAQ7B,CAMD,SAASQ,EAAUxE,GACf,MAA0B,kBAAXA,GAAuBA,GAASA,GAAUA,EAAQ,IAAO,CAC3E,CAEK,SAAUK,EAAQL,GACpB,GAAa,MAATA,EAAiB,OAAO,EAE5B,GAAIA,EAAMyE,cAAgBH,WAAc,OAAO,EAC/C,GAAsB,kBAAXtE,EAAuB,OAAO,EACzC,IAAKwE,EAAUxE,EAAMkD,SAAWlD,EAAMkD,OAAS,EAAK,OAAO,EAE3D,IAAK,IAAIwB,EAAI,EAAGA,EAAI1E,EAAMkD,OAAQwB,IAAK,CACnC,IAAMC,EAAI3E,EAAM0E,GAChB,IAAKF,EAAUG,IAAMA,EAAI,GAAKA,GAAK,IAAO,OAAO,CACpD,CACD,OAAO,CACV,CAGK,SAAUC,EAAS5E,EAAqC6E,GAG1D,GAFKA,IAAWA,EAAU,CAAC,GAEL,kBAAX7E,EAAqB,CAC5BL,EAAOmF,gBAAgB9E,EAAO,0BAG9B,IADA,IAAM+E,EAAS,GACR/E,GACH+E,EAAOC,QAAgB,IAARhF,GACfA,EAAQiF,SAASxB,OAAOzD,EAAQ,MAIpC,OAFsB,IAAlB+E,EAAO7B,QAAgB6B,EAAOG,KAAK,GAEhCnB,EAAS,IAAIO,WAAWS,GAClC,CAQD,GANIF,EAAQM,oBAAwC,kBAAXnF,GAAiD,OAA1BA,EAAMqB,UAAU,EAAG,KAC9ErB,EAAQ,KAAOA,GAGhB8D,EAAU9D,KAAUA,EAAQA,EAAMsD,eAElClD,EAAYJ,GAAQ,CACpB,IAAIQ,EAAeR,EAAOqB,UAAU,GAChCb,EAAI0C,OAAS,IACU,SAAnB2B,EAAQO,OACR5E,EAAM,IAAMA,EACc,UAAnBqE,EAAQO,OACf5E,GAAO,IAEPb,EAAO6D,mBAAmB,yBAA0B,QAASxD,IAKrE,IADA,IAAM+E,EAAS,GACNL,EAAI,EAAGA,EAAIlE,EAAI0C,OAAQwB,GAAK,EACjCK,EAAOG,KAAKD,SAASzE,EAAIa,UAAUqD,EAAGA,EAAI,GAAI,KAGlD,OAAOX,EAAS,IAAIO,WAAWS,GAClC,CAED,OAAI1E,EAAQL,GACD+D,EAAS,IAAIO,WAAWtE,IAG5BL,EAAO6D,mBAAmB,yBAA0B,QAASxD,EACvE,CAEK,SAAUqF,EAAOC,GACnB,IAAMC,EAAUD,EAAME,KAAI,SAAAC,GAAI,OAAIb,EAASa,EAAb,IACxBvC,EAASqC,EAAQG,QAAO,SAACC,EAAOF,GAAR,OAAkBE,EAAQF,EAAKvC,MAA/B,GAAwC,GAEhE6B,EAAS,IAAIT,WAAWpB,GAO9B,OALAqC,EAAQG,QAAO,SAACE,EAAQC,GAEpB,OADAd,EAAOe,IAAID,EAAQD,GACZA,EAASC,EAAO3C,MAC1B,GAAE,GAEIa,EAASgB,EACnB,CAmBK,SAAUgB,EAAQ/F,EAAkBkD,IACtClD,EAAQ4E,EAAS5E,IAEPkD,OAASA,GACfvD,EAAO6D,mBAAmB,qBAAsB,QAASP,UAAU,IAGvE,IAAM8B,EAAS,IAAIT,WAAWpB,GAE9B,OADA6B,EAAOe,IAAI9F,EAAOkD,EAASlD,EAAMkD,QAC1Ba,EAASgB,EACnB,CAGK,SAAU3E,EAAYJ,EAAYkD,GACpC,QAAsB,kBAAXlD,IAAwBA,EAAMG,MAAM,wBAG3C+C,GAAUlD,EAAMkD,SAAW,EAAI,EAAIA,EAE1C,CAED,IAAM8C,EAAwB,mBAExB,SAAUrC,EAAQ3D,EAA8C6E,GAGlE,GAFKA,IAAWA,EAAU,CAAC,GAEL,kBAAX7E,EAAqB,CAC5BL,EAAOmF,gBAAgB9E,EAAO,yBAG9B,IADA,IAAIQ,EAAM,GACHR,GACHQ,EAAMwF,EAAsB,GAARhG,GAAeQ,EACnCR,EAAQiG,KAAKC,MAAMlG,EAAQ,IAG/B,OAAIQ,EAAI0C,QACA1C,EAAI0C,OAAS,IAAK1C,EAAM,IAAMA,GAC3B,KAAOA,GAGX,MACV,CAED,GAAsB,kBAAXR,EAEP,OADAA,EAAQA,EAAM8C,SAAS,KACbI,OAAS,EAAa,MAAQlD,EACjC,KAAOA,EAOlB,GAJI6E,EAAQM,oBAAwC,kBAAXnF,GAAiD,OAA1BA,EAAMqB,UAAU,EAAG,KAC9ErB,EAAQ,KAAOA,GAGhB8D,EAAU9D,GAAU,OAAOA,EAAMsD,cAErC,GAAIlD,EAAYJ,GAUZ,OATaA,EAAOkD,OAAS,IACF,SAAnB2B,EAAQO,OACRpF,EAAQ,MAAiBA,EAAOqB,UAAU,GAChB,UAAnBwD,EAAQO,OACfpF,GAAS,IAETL,EAAO6D,mBAAmB,yBAA0B,QAASxD,IAGrDA,EAAOmG,cAG3B,GAAI9F,EAAQL,GAAQ,CAEhB,IADA,IAAI+E,EAAS,KACJL,EAAI,EAAGA,EAAI1E,EAAMkD,OAAQwB,IAAK,CAClC,IAAIC,EAAI3E,EAAM0E,GACdK,GAAUiB,GAAmB,IAAJrB,IAAa,GAAKqB,EAAkB,GAAJrB,EAC7D,CACD,OAAOI,CACV,CAED,OAAOpF,EAAO6D,mBAAmB,wBAAyB,QAASxD,EACtE,CAoBK,SAAUoG,EAAaC,EAAiBT,EAAgBU,GAS1D,MARqB,kBAAVD,EACPA,EAAO1C,EAAQ0C,KACPjG,EAAYiG,IAAUA,EAAKnD,OAAS,IAC5CvD,EAAO6D,mBAAmB,kBAAmB,QAAS6C,GAG1DT,EAAS,EAAI,EAAIA,EAEA,MAAbU,EACO,KAAOD,EAAKhF,UAAUuE,EAAQ,EAAI,EAAIU,GAG1C,KAAOD,EAAKhF,UAAUuE,EAChC,CA4BK,SAAUW,EAAWvG,EAAkBkD,GAWzC,IAVsB,kBAAXlD,EACPA,EAAQ2D,EAAQ3D,GACRI,EAAYJ,IACpBL,EAAO6D,mBAAmB,qBAAsB,QAASxD,GAGzDA,EAAMkD,OAAS,EAAIA,EAAS,GAC5BvD,EAAO6D,mBAAmB,qBAAsB,QAASP,UAAU,IAGhEjD,EAAMkD,OAAS,EAAIA,EAAS,GAC/BlD,EAAQ,MAAQA,EAAMqB,UAAU,GAGpC,OAAOrB,CACV,C,6FExUGwG,GAAyB,EACzBC,GAAgB,EAEdC,EAA0C,CAAEC,MAAO,EAAG,QAAW,EAAGC,KAAM,EAAGC,QAAS,EAAGhE,MAAO,EAAGiE,IAAK,GAC1GC,EAAYL,EAAS,QAIrBM,EAAwB,KA+B5B,IAEYC,EASAC,EAXNC,EA7BN,WACI,IACI,IAAMC,EAAyB,GAa/B,GAVA,CAAC,MAAO,MAAO,OAAQ,QAAQC,SAAQ,SAACC,GACpC,IACI,GAA+B,SAA3B,OAAOC,UAAUD,GACjB,MAAM,IAAIE,MAAM,gBAIvB,CAFC,MAAM3E,GACJuE,EAAQlC,KAAKoC,EAChB,CACJ,IAEGF,EAAQlE,OACR,MAAM,IAAIsE,MAAM,WAAaJ,EAAQK,KAAK,OAG9C,GAAIhE,OAAOiE,aAAa,KAAMH,UAAU,SAAW9D,OAAOiE,aAAa,IAAM,KACzE,MAAM,IAAIF,MAAM,wBAIvB,CAFC,MAAO3E,GACL,OAAOA,EAAM8E,OAChB,CAED,OAAO,IACV,CAEuBC,IAExB,SAAYX,GACRA,EAAAA,MAAAA,QACAA,EAAAA,KAAAA,OACAA,EAAAA,QAAAA,UACAA,EAAAA,MAAAA,QACAA,EAAAA,IAAAA,KALJ,EAAYA,IAAAA,EAAQ,KASpB,SAAYC,GAMRA,EAAAA,cAAAA,gBAGAA,EAAAA,gBAAAA,kBAIAA,EAAAA,sBAAAA,wBAIAA,EAAAA,cAAAA,gBAGAA,EAAAA,aAAAA,eAGAA,EAAAA,QAAAA,UAMAA,EAAAA,eAAAA,iBAKAA,EAAAA,cAAAA,gBAQAA,EAAAA,YAAAA,cAKAA,EAAAA,iBAAAA,mBAKAA,EAAAA,iBAAAA,mBAKAA,EAAAA,oBAAAA,sBAcAA,EAAAA,eAAAA,iBAIAA,EAAAA,mBAAAA,qBAIAA,EAAAA,cAAAA,gBAIAA,EAAAA,wBAAAA,0BAIAA,EAAAA,wBAAAA,0BAQAA,EAAAA,qBAAAA,uBAQAA,EAAAA,gBAAAA,iBAvGJ,EAAYA,IAAAA,EAAS,KA0GrB,IAAMW,EAAM,mBAECjI,EAAb,WAOI,WAAYJ,IAAe,eACvBsB,OAAOgH,eAAenH,KAAM,UAAW,CACnCoH,YAAY,EACZ/H,MAAOR,EACPwI,UAAU,GAEjB,CAbL,mCAeI,SAAKC,EAAoB/D,GACrB,IAAMgE,EAAQD,EAAS9B,cACC,MAApBO,EAAUwB,IACVvH,KAAK6C,mBAAmB,yBAA0B,WAAYyE,GAE9DlB,EAAYL,EAAUwB,IAC1BC,QAAQC,IAAI7D,MAAM4D,QAASjE,EAC9B,GAtBL,mBAwBI,WAAyB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACrBvD,KAAK0H,KAAKzI,EAAO0I,OAAOC,MAAOrE,EAClC,GA1BL,kBA4BI,WAAwB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACpBvD,KAAK0H,KAAKzI,EAAO0I,OAAOE,KAAMtE,EACjC,GA9BL,kBAgCI,WAAwB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACpBvD,KAAK0H,KAAKzI,EAAO0I,OAAOG,QAASvE,EACpC,GAlCL,uBAoCI,SAAUyD,EAAiBe,EAAkB7E,GAEzC,GAAI4C,EACA,OAAO9F,KAAKgI,UAAU,iBAAkBD,EAAM,CAAC,GAG9CA,IAAQA,EAAO9I,EAAOgJ,OAAOC,eAC7BhF,IAAUA,EAAS,CAAC,GAEzB,IAAMiF,EAAgC,GACtChI,OAAOiI,KAAKlF,GAAQwD,SAAQ,SAACjE,GACzB,IAAMpD,EAAQ6D,EAAOT,GACrB,IACI,GAAIpD,aAAiBsE,WAAY,CAE7B,IADA,IAAI9D,EAAM,GACDkE,EAAI,EAAGA,EAAI1E,EAAMkD,OAAQwB,IAChClE,GAAOqH,EAAI7H,EAAM0E,IAAM,GACvBlE,GAAOqH,EAAe,GAAX7H,EAAM0E,IAEnBoE,EAAe5D,KAAK9B,EAAM,iBAAmB5C,EAAM,IACtD,MACGsI,EAAe5D,KAAK9B,EAAM,IAAM4F,KAAKC,UAAUjJ,GAItD,CAFC,MAAO6C,GACLiG,EAAe5D,KAAK9B,EAAM,IAAM4F,KAAKC,UAAUpF,EAAOT,GAAKN,YAC9D,CACJ,IACDgG,EAAe5D,KAAf,eAA6BwD,IAC7BI,EAAe5D,KAAf,kBAAgCvE,KAAKnB,UAErC,IAAM0J,EAASvB,EAEXwB,EAAM,GAEV,OAAQT,GACJ,KAAKxB,EAAUkC,cACXD,EAAM,gBACN,IAAMvF,EAAQ+D,EAEd,OAAQ/D,GACJ,IAAK,WAAY,IAAK,YAAa,IAAK,mBACpCuF,GAAO,IAAMvF,EACb,MACJ,IAAK,iBAAkB,IAAK,iBACxBuF,GAAO,eACP,MACJ,IAAK,yBACDA,GAAO,kBAGf,MAEJ,KAAKjC,EAAUmC,eACf,KAAKnC,EAAUoC,mBACf,KAAKpC,EAAUqC,YACf,KAAKrC,EAAUsC,cACf,KAAKtC,EAAUuC,wBACf,KAAKvC,EAAUwC,qBACf,KAAKxC,EAAUyC,wBACXR,EAAMT,EAIVS,IACAxB,GAAW,8CAAiDwB,EAAM,MAGlEL,EAAe5F,SACfyE,GAAW,KAAOmB,EAAerB,KAAK,MAAQ,KAIlD,IAAM5E,EAAa,IAAI2E,MAAMG,GAQ7B,OAPA9E,EAAMqG,OAASA,EACfrG,EAAM6F,KAAOA,EAEb5H,OAAOiI,KAAKlF,GAAQwD,SAAQ,SAASjE,GACjCP,EAAMO,GAAOS,EAAOT,EACvB,IAEMP,CACV,GArHL,wBAuHI,SAAW8E,EAAiBe,EAAkB7E,GAC1C,MAAMlD,KAAKgI,UAAUhB,EAASe,EAAM7E,EACvC,GAzHL,gCA2HI,SAAmB8D,EAAiBiC,EAAc5J,GAC9C,OAAOW,KAAKF,WAAWkH,EAAS/H,EAAOgJ,OAAOiB,iBAAkB,CAC5DC,SAAUF,EACV5J,MAAOA,GAEd,GAhIL,oBAkII,SAAO+J,EAAgBpC,EAAiBe,EAAkB7E,GAChDkG,GACNpJ,KAAKF,WAAWkH,EAASe,EAAM7E,EAClC,GArIL,4BAuII,SAAekG,EAAgBpC,EAAiBiC,EAAc5J,GACpD+J,GACNpJ,KAAK6C,mBAAmBmE,EAASiC,EAAM5J,EAC1C,GA1IL,4BA4II,SAAe2H,GACI,MAAXA,IAAmBA,EAAU,+CAC7BR,GACAxG,KAAKF,WAAW,8CAA+Cb,EAAOgJ,OAAOoB,sBAAuB,CAChGtJ,UAAW,6BAA8B4G,KAAMH,GAG1D,GAnJL,6BAqJI,SAAgBnH,EAAe2H,GACL,kBAAX3H,IAEI,MAAX2H,IAAmBA,EAAU,mBAE7B3H,EAAQ,GAAKA,GAAS,mBACtBW,KAAKF,WAAWkH,EAAS/H,EAAOgJ,OAAOQ,cAAe,CAClD1I,UAAW,mBACXkD,MAAO,oBACP5D,MAAOA,IAIXA,EAAQ,GACRW,KAAKF,WAAWkH,EAAS/H,EAAOgJ,OAAOQ,cAAe,CAClD1I,UAAW,mBACXkD,MAAO,cACP5D,MAAOA,IAGlB,GAzKL,gCA2KI,SAAmBiK,EAAeC,EAAuBvC,GAEjDA,EADAA,EACU,KAAOA,EAEP,GAGVsC,EAAQC,GACRvJ,KAAKF,WAAW,mBAAqBkH,EAAS/H,EAAOgJ,OAAOuB,iBAAkB,CAC1EF,MAAOA,EACPC,cAAeA,IAInBD,EAAQC,GACRvJ,KAAKF,WAAW,qBAAuBkH,EAAS/H,EAAOgJ,OAAOwB,oBAAqB,CAC/EH,MAAOA,EACPC,cAAeA,GAG1B,GA/LL,sBAiMI,SAASG,EAAaC,GACdD,IAAWvJ,QAAoB,MAAVuJ,GACrB1J,KAAKF,WAAW,cAAeb,EAAOgJ,OAAOW,YAAa,CAAEK,KAAMU,EAAKV,MAE9E,GArML,2BAuMI,SAAcS,EAAaC,GACnBD,IAAWC,EACX3J,KAAKF,WACD,qCAAuCuI,KAAKC,UAAUqB,EAAKV,MAAQ,6BACnEhK,EAAOgJ,OAAOoB,sBACd,CAAEJ,KAAMS,EAAOT,KAAMlJ,UAAW,QAE7B2J,IAAWvJ,QAAoB,MAAVuJ,GAC5B1J,KAAKF,WAAW,cAAeb,EAAOgJ,OAAOW,YAAa,CAAEK,KAAMU,EAAKV,MAE9E,IAjNL,2BAmNI,WAEI,OADK5C,IAAiBA,EAAgB,IAAIpH,ECpX3B,iBDqXRoH,CACV,GAtNL,2BAwNI,SAAqBuD,EAAqBC,GAOtC,IANKD,GAAcC,GACf7J,KAAK8J,eAAehK,WAAW,wCAAyCb,EAAOgJ,OAAOoB,sBAAuB,CACzGtJ,UAAW,kBAIf8F,EAAwB,CACxB,IAAK+D,EAAc,OACnB5J,KAAK8J,eAAehK,WAAW,6BAA8Bb,EAAOgJ,OAAOoB,sBAAuB,CAC9FtJ,UAAW,iBAElB,CAED+F,IAAkB8D,EAClB/D,IAA2BgE,CAC9B,GAxOL,yBA0OI,SAAmBvC,GACf,IAAMC,EAAQxB,EAAUuB,EAAS9B,eACpB,MAAT+B,EAIJnB,EAAYmB,EAHRtI,EAAO6K,eAAetH,KAAK,uBAAyB8E,EAI3D,GAjPL,kBAmPI,SAAYzI,GACR,OAAO,IAAII,EAAOJ,EACrB,KArPL,KAGWI,EAAAA,OAASsH,EAETtH,EAAAA,OAASqH,C,uBErKpB,SAAWyD,EAAQC,GACjB,aAGA,SAASC,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAIrD,MAAMsD,GAAO,mBAClC,CAID,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAc,EAC7BA,EAAS/G,UAAY6G,EAAU7G,UAC/B4G,EAAK5G,UAAY,IAAI+G,EACrBH,EAAK5G,UAAUK,YAAcuG,CAC9B,CAID,SAASvL,EAAI2L,EAAQC,EAAMC,GACzB,GAAI7L,EAAG8L,KAAKH,GACV,OAAOA,EAGTzK,KAAK6K,SAAW,EAChB7K,KAAK8K,MAAQ,KACb9K,KAAKuC,OAAS,EAGdvC,KAAK+K,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGT1K,KAAKgL,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAEjD,CAUD,IAAIM,EATkB,kBAAXlB,EACTA,EAAOC,QAAUlL,EAEjBkL,EAAQlL,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGoM,SAAW,GAGd,IAEID,EADoB,qBAAXE,QAAmD,qBAAlBA,OAAOF,OACxCE,OAAOF,OAEPG,EAAAA,MAAAA,MAGZ,CADC,MAAO/I,GACR,CA+HD,SAASgJ,EAAeC,EAAQC,GAC9B,IAAIC,EAAIF,EAAOG,WAAWF,GAE1B,OAAIC,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXvB,GAAO,EAAO,wBAA0BqB,EAE3C,CAED,SAASI,EAAcJ,EAAQK,EAAYJ,GACzC,IAAIK,EAAIP,EAAcC,EAAQC,GAI9B,OAHIA,EAAQ,GAAKI,IACfC,GAAKP,EAAcC,EAAQC,EAAQ,IAAM,GAEpCK,CACR,CA6CD,SAASC,EAAWC,EAAKC,EAAOC,EAAK/K,GAInC,IAHA,IAAI2K,EAAI,EACJK,EAAI,EACJC,EAAM5G,KAAK6G,IAAIL,EAAIvJ,OAAQyJ,GACtBjI,EAAIgI,EAAOhI,EAAImI,EAAKnI,IAAK,CAChC,IAAIyH,EAAIM,EAAIL,WAAW1H,GAAK,GAE5B6H,GAAK3K,EAIHgL,EADET,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENvB,EAAOuB,GAAK,GAAKS,EAAIhL,EAAK,qBAC1B2K,GAAKK,CACN,CACD,OAAOL,CACR,CA2DD,SAASQ,EAAMC,EAAMC,GACnBD,EAAKvB,MAAQwB,EAAIxB,MACjBuB,EAAK9J,OAAS+J,EAAI/J,OAClB8J,EAAKxB,SAAWyB,EAAIzB,SACpBwB,EAAKtB,IAAMuB,EAAIvB,GAChB,CAqCD,GA9TAjM,EAAG8L,KAAO,SAAe2B,GACvB,OAAIA,aAAezN,GAIJ,OAARyN,GAA+B,kBAARA,GAC5BA,EAAIzI,YAAYoH,WAAapM,EAAGoM,UAAY1H,MAAMgJ,QAAQD,EAAIzB,MACjE,EAEDhM,EAAG2N,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACR,EAED7N,EAAGqN,IAAM,SAAcO,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACR,EAED7N,EAAG2E,UAAUuH,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOzK,KAAK6M,YAAYpC,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOzK,KAAK8M,WAAWrC,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETT,EAAOS,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIqB,EAAQ,EACM,OAFlBtB,EAASA,EAAOtI,WAAW4K,QAAQ,OAAQ,KAEhC,KACThB,IACA/L,KAAK6K,SAAW,GAGdkB,EAAQtB,EAAOlI,SACJ,KAATmI,EACF1K,KAAKgN,UAAUvC,EAAQsB,EAAOpB,IAE9B3K,KAAKiN,WAAWxC,EAAQC,EAAMqB,GACf,OAAXpB,GACF3K,KAAK8M,WAAW9M,KAAKkN,UAAWxC,EAAMC,IAI7C,EAED7L,EAAG2E,UAAUoJ,YAAc,SAAsBpC,EAAQC,EAAMC,GACzDF,EAAS,IACXzK,KAAK6K,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXzK,KAAK8K,MAAQ,CAAU,SAATL,GACdzK,KAAKuC,OAAS,GACLkI,EAAS,kBAClBzK,KAAK8K,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBzK,KAAKuC,OAAS,IAEd0H,EAAOQ,EAAS,kBAChBzK,KAAK8K,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFzK,KAAKuC,OAAS,GAGD,OAAXoI,GAGJ3K,KAAK8M,WAAW9M,KAAKkN,UAAWxC,EAAMC,EACvC,EAED7L,EAAG2E,UAAUqJ,WAAa,SAAqBrC,EAAQC,EAAMC,GAG3D,GADAV,EAAgC,kBAAlBQ,EAAOlI,QACjBkI,EAAOlI,QAAU,EAGnB,OAFAvC,KAAK8K,MAAQ,CAAC,GACd9K,KAAKuC,OAAS,EACPvC,KAGTA,KAAKuC,OAAS+C,KAAK6H,KAAK1C,EAAOlI,OAAS,GACxCvC,KAAK8K,MAAQ,IAAItH,MAAMxD,KAAKuC,QAC5B,IAAK,IAAIwB,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAC/B/D,KAAK8K,MAAM/G,GAAK,EAGlB,IAAIqJ,EAAGC,EACHlH,EAAM,EACV,GAAe,OAAXwE,EACF,IAAK5G,EAAI0G,EAAOlI,OAAS,EAAG6K,EAAI,EAAGrJ,GAAK,EAAGA,GAAK,EAC9CsJ,EAAI5C,EAAO1G,GAAM0G,EAAO1G,EAAI,IAAM,EAAM0G,EAAO1G,EAAI,IAAM,GACzD/D,KAAK8K,MAAMsC,IAAOC,GAAKlH,EAAO,SAC9BnG,KAAK8K,MAAMsC,EAAI,GAAMC,IAAO,GAAKlH,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPiH,UAGC,GAAe,OAAXzC,EACT,IAAK5G,EAAI,EAAGqJ,EAAI,EAAGrJ,EAAI0G,EAAOlI,OAAQwB,GAAK,EACzCsJ,EAAI5C,EAAO1G,GAAM0G,EAAO1G,EAAI,IAAM,EAAM0G,EAAO1G,EAAI,IAAM,GACzD/D,KAAK8K,MAAMsC,IAAOC,GAAKlH,EAAO,SAC9BnG,KAAK8K,MAAMsC,EAAI,GAAMC,IAAO,GAAKlH,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPiH,KAIN,OAAOpN,KAAKsN,QACb,EA0BDxO,EAAG2E,UAAUuJ,UAAY,SAAoBvC,EAAQsB,EAAOpB,GAE1D3K,KAAKuC,OAAS+C,KAAK6H,MAAM1C,EAAOlI,OAASwJ,GAAS,GAClD/L,KAAK8K,MAAQ,IAAItH,MAAMxD,KAAKuC,QAC5B,IAAK,IAAIwB,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAC/B/D,KAAK8K,MAAM/G,GAAK,EAIlB,IAGIsJ,EAHAlH,EAAM,EACNiH,EAAI,EAGR,GAAe,OAAXzC,EACF,IAAK5G,EAAI0G,EAAOlI,OAAS,EAAGwB,GAAKgI,EAAOhI,GAAK,EAC3CsJ,EAAI3B,EAAajB,EAAQsB,EAAOhI,IAAMoC,EACtCnG,KAAK8K,MAAMsC,IAAU,SAAJC,EACblH,GAAO,IACTA,GAAO,GACPiH,GAAK,EACLpN,KAAK8K,MAAMsC,IAAMC,IAAM,IAEvBlH,GAAO,OAKX,IAAKpC,GADa0G,EAAOlI,OAASwJ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOhI,EAAI0G,EAAOlI,OAAQwB,GAAK,EAC1EsJ,EAAI3B,EAAajB,EAAQsB,EAAOhI,IAAMoC,EACtCnG,KAAK8K,MAAMsC,IAAU,SAAJC,EACblH,GAAO,IACTA,GAAO,GACPiH,GAAK,EACLpN,KAAK8K,MAAMsC,IAAMC,IAAM,IAEvBlH,GAAO,EAKbnG,KAAKsN,QACN,EA6BDxO,EAAG2E,UAAUwJ,WAAa,SAAqBxC,EAAQC,EAAMqB,GAE3D/L,KAAK8K,MAAQ,CAAC,GACd9K,KAAKuC,OAAS,EAGd,IAAK,IAAIgL,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW9C,EAClE6C,IAEFA,IACAC,EAAWA,EAAU9C,EAAQ,EAO7B,IALA,IAAI+C,EAAQhD,EAAOlI,OAASwJ,EACxB2B,EAAMD,EAAQF,EACdvB,EAAM1G,KAAK6G,IAAIsB,EAAOA,EAAQC,GAAO3B,EAErC4B,EAAO,EACF5J,EAAIgI,EAAOhI,EAAIiI,EAAKjI,GAAKwJ,EAChCI,EAAO9B,EAAUpB,EAAQ1G,EAAGA,EAAIwJ,EAAS7C,GAEzC1K,KAAK4N,MAAMJ,GACPxN,KAAK8K,MAAM,GAAK6C,EAAO,SACzB3N,KAAK8K,MAAM,IAAM6C,EAEjB3N,KAAK6N,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAItM,EAAM,EAGV,IAFAuM,EAAO9B,EAAUpB,EAAQ1G,EAAG0G,EAAOlI,OAAQmI,GAEtC3G,EAAI,EAAGA,EAAI2J,EAAK3J,IACnB3C,GAAOsJ,EAGT1K,KAAK4N,MAAMxM,GACPpB,KAAK8K,MAAM,GAAK6C,EAAO,SACzB3N,KAAK8K,MAAM,IAAM6C,EAEjB3N,KAAK6N,OAAOF,EAEf,CAED3N,KAAKsN,QACN,EAEDxO,EAAG2E,UAAUqK,KAAO,SAAezB,GACjCA,EAAKvB,MAAQ,IAAItH,MAAMxD,KAAKuC,QAC5B,IAAK,IAAIwB,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAC/BsI,EAAKvB,MAAM/G,GAAK/D,KAAK8K,MAAM/G,GAE7BsI,EAAK9J,OAASvC,KAAKuC,OACnB8J,EAAKxB,SAAW7K,KAAK6K,SACrBwB,EAAKtB,IAAM/K,KAAK+K,GACjB,EASDjM,EAAG2E,UAAUsK,MAAQ,SAAgB1B,GACnCD,EAAKC,EAAMrM,KACZ,EAEDlB,EAAG2E,UAAUuK,MAAQ,WACnB,IAAIpC,EAAI,IAAI9M,EAAG,MAEf,OADAkB,KAAK8N,KAAKlC,GACHA,CACR,EAED9M,EAAG2E,UAAUwK,QAAU,SAAkBC,GACvC,KAAOlO,KAAKuC,OAAS2L,GACnBlO,KAAK8K,MAAM9K,KAAKuC,UAAY,EAE9B,OAAOvC,IACR,EAGDlB,EAAG2E,UAAU6J,OAAS,WACpB,KAAOtN,KAAKuC,OAAS,GAAqC,IAAhCvC,KAAK8K,MAAM9K,KAAKuC,OAAS,IACjDvC,KAAKuC,SAEP,OAAOvC,KAAKmO,WACb,EAEDrP,EAAG2E,UAAU0K,UAAY,WAKvB,OAHoB,IAAhBnO,KAAKuC,QAAkC,IAAlBvC,KAAK8K,MAAM,KAClC9K,KAAK6K,SAAW,GAEX7K,IACR,EAIqB,qBAAXoO,QAAgD,oBAAfA,OAAOC,IACjD,IACEvP,EAAG2E,UAAU2K,OAAOC,IAAI,+BAAiCC,CAG1D,CAFC,MAAOjM,GACPvD,EAAG2E,UAAU6K,QAAUA,CACxB,MAEDxP,EAAG2E,UAAU6K,QAAUA,EAGzB,SAASA,IACP,OAAQtO,KAAK+K,IAAM,UAAY,SAAW/K,KAAKmC,SAAS,IAAM,GAC/D,CAgCD,IAAIoM,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D3P,EAAG2E,UAAUtB,SAAW,SAAmBuI,EAAMgE,GAI/C,IAAIC,EACJ,GAHAD,EAAoB,EAAVA,GAAe,EAGZ,MAJbhE,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCiE,EAAM,GAGN,IAFA,IAAIxI,EAAM,EACNyI,EAAQ,EACH7K,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAAK,CACpC,IAAIsJ,EAAIrN,KAAK8K,MAAM/G,GACf4J,GAA+B,UAArBN,GAAKlH,EAAOyI,IAAmBzM,SAAS,IACtDyM,EAASvB,IAAO,GAAKlH,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPpC,KAGA4K,EADY,IAAVC,GAAe7K,IAAM/D,KAAKuC,OAAS,EAC/BgM,EAAM,EAAIZ,EAAKpL,QAAUoL,EAAOgB,EAEhChB,EAAOgB,CAEhB,CAID,IAHc,IAAVC,IACFD,EAAMC,EAAMzM,SAAS,IAAMwM,GAEtBA,EAAIpM,OAASmM,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB3O,KAAK6K,WACP8D,EAAM,IAAMA,GAEPA,CACR,CAED,GAAIjE,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAImE,EAAYL,EAAW9D,GAEvBoE,EAAYL,EAAW/D,GAC3BiE,EAAM,GACN,IAAInD,EAAIxL,KAAKgO,QAEb,IADAxC,EAAEX,SAAW,GACLW,EAAE1K,UAAU,CAClB,IAAI8K,EAAIJ,EAAEuD,MAAMD,GAAW3M,SAASuI,GAMlCiE,GALFnD,EAAIA,EAAEwD,MAAMF,IAELhO,SAGC8K,EAAI+C,EAFJJ,EAAMM,EAAYjD,EAAErJ,QAAUqJ,EAAI+C,CAI3C,CAID,IAHI3O,KAAKc,WACP6N,EAAM,IAAMA,GAEPA,EAAIpM,OAASmM,IAAY,GAC9BC,EAAM,IAAMA,EAKd,OAHsB,IAAlB3O,KAAK6K,WACP8D,EAAM,IAAMA,GAEPA,CACR,CAED1E,GAAO,EAAO,kCACf,EAEDnL,EAAG2E,UAAUxB,SAAW,WACtB,IAAIgN,EAAMjP,KAAK8K,MAAM,GASrB,OARoB,IAAhB9K,KAAKuC,OACP0M,GAAuB,SAAhBjP,KAAK8K,MAAM,GACO,IAAhB9K,KAAKuC,QAAkC,IAAlBvC,KAAK8K,MAAM,GAEzCmE,GAAO,iBAAoC,SAAhBjP,KAAK8K,MAAM,GAC7B9K,KAAKuC,OAAS,GACvB0H,GAAO,EAAO,8CAEU,IAAlBjK,KAAK6K,UAAmBoE,EAAMA,CACvC,EAEDnQ,EAAG2E,UAAUyL,OAAS,WACpB,OAAOlP,KAAKmC,SAAS,GAAI,EAC1B,EAEG8I,IACFnM,EAAG2E,UAAU0L,SAAW,SAAmBxE,EAAQpI,GACjD,OAAOvC,KAAKoP,YAAYnE,EAAQN,EAAQpI,EACzC,GAGHzD,EAAG2E,UAAUyJ,QAAU,SAAkBvC,EAAQpI,GAC/C,OAAOvC,KAAKoP,YAAY5L,MAAOmH,EAAQpI,EACxC,EA2gBD,SAAS8M,EAAYC,EAAM/C,EAAKoC,GAC9BA,EAAI9D,SAAW0B,EAAI1B,SAAWyE,EAAKzE,SACnC,IAAIqB,EAAOoD,EAAK/M,OAASgK,EAAIhK,OAAU,EACvCoM,EAAIpM,OAAS2J,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIqD,EAAoB,EAAhBD,EAAKxE,MAAM,GACfmB,EAAmB,EAAfM,EAAIzB,MAAM,GACdc,EAAI2D,EAAItD,EAERuD,EAAS,SAAJ5D,EACLgD,EAAShD,EAAI,SAAa,EAC9B+C,EAAI7D,MAAM,GAAK0E,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIvD,EAAKuD,IAAK,CAM5B,IAHA,IAAIC,EAASd,IAAU,GACnBe,EAAgB,SAARf,EACRgB,EAAOtK,KAAK6G,IAAIsD,EAAGlD,EAAIhK,OAAS,GAC3B6K,EAAI9H,KAAKmH,IAAI,EAAGgD,EAAIH,EAAK/M,OAAS,GAAI6K,GAAKwC,EAAMxC,IAAK,CAC7D,IAAIrJ,EAAK0L,EAAIrC,EAAK,EAIlBsC,IADA9D,GAFA2D,EAAoB,EAAhBD,EAAKxE,MAAM/G,KACfkI,EAAmB,EAAfM,EAAIzB,MAAMsC,IACFuC,GACG,SAAa,EAC5BA,EAAY,SAAJ/D,CACT,CACD+C,EAAI7D,MAAM2E,GAAa,EAARE,EACff,EAAiB,EAATc,CACT,CAOD,OANc,IAAVd,EACFD,EAAI7D,MAAM2E,GAAa,EAARb,EAEfD,EAAIpM,SAGCoM,EAAIrB,QACZ,CAziBDxO,EAAG2E,UAAU2L,YAAc,SAAsBS,EAAWlF,EAAQpI,GAClEvC,KAAKsN,SAEL,IAAIwC,EAAa9P,KAAK8P,aAClBC,EAAYxN,GAAU+C,KAAKmH,IAAI,EAAGqD,GACtC7F,EAAO6F,GAAcC,EAAW,yCAChC9F,EAAO8F,EAAY,EAAG,+BAEtB,IAAIC,EAfS,SAAmBH,EAAW3B,GAC3C,OAAI2B,EAAUI,YACLJ,EAAUI,YAAY/B,GAExB,IAAI2B,EAAU3B,EACtB,CAUWgC,CAASL,EAAWE,GAG9B,OADA/P,KAAK,gBADoB,OAAX2K,EAAkB,KAAO,OACRqF,EAAKF,GAC7BE,CACR,EAEDlR,EAAG2E,UAAU0M,eAAiB,SAAyBH,EAAKF,GAI1D,IAHA,IAAIM,EAAW,EACXxB,EAAQ,EAEH7K,EAAI,EAAGsM,EAAQ,EAAGtM,EAAI/D,KAAKuC,OAAQwB,IAAK,CAC/C,IAAI4J,EAAQ3N,KAAK8K,MAAM/G,IAAMsM,EAASzB,EAEtCoB,EAAII,KAAqB,IAAPzC,EACdyC,EAAWJ,EAAIzN,SACjByN,EAAII,KAAezC,GAAQ,EAAK,KAE9ByC,EAAWJ,EAAIzN,SACjByN,EAAII,KAAezC,GAAQ,GAAM,KAGrB,IAAV0C,GACED,EAAWJ,EAAIzN,SACjByN,EAAII,KAAezC,GAAQ,GAAM,KAEnCiB,EAAQ,EACRyB,EAAQ,IAERzB,EAAQjB,IAAS,GACjB0C,GAAS,EAEZ,CAED,GAAID,EAAWJ,EAAIzN,OAGjB,IAFAyN,EAAII,KAAcxB,EAEXwB,EAAWJ,EAAIzN,QACpByN,EAAII,KAAc,CAGvB,EAEDtR,EAAG2E,UAAU6M,eAAiB,SAAyBN,EAAKF,GAI1D,IAHA,IAAIM,EAAWJ,EAAIzN,OAAS,EACxBqM,EAAQ,EAEH7K,EAAI,EAAGsM,EAAQ,EAAGtM,EAAI/D,KAAKuC,OAAQwB,IAAK,CAC/C,IAAI4J,EAAQ3N,KAAK8K,MAAM/G,IAAMsM,EAASzB,EAEtCoB,EAAII,KAAqB,IAAPzC,EACdyC,GAAY,IACdJ,EAAII,KAAezC,GAAQ,EAAK,KAE9ByC,GAAY,IACdJ,EAAII,KAAezC,GAAQ,GAAM,KAGrB,IAAV0C,GACED,GAAY,IACdJ,EAAII,KAAezC,GAAQ,GAAM,KAEnCiB,EAAQ,EACRyB,EAAQ,IAERzB,EAAQjB,IAAS,GACjB0C,GAAS,EAEZ,CAED,GAAID,GAAY,EAGd,IAFAJ,EAAII,KAAcxB,EAEXwB,GAAY,GACjBJ,EAAII,KAAc,CAGvB,EAEG9K,KAAKiL,MACPzR,EAAG2E,UAAU+M,WAAa,SAAqBnD,GAC7C,OAAO,GAAK/H,KAAKiL,MAAMlD,EACxB,EAEDvO,EAAG2E,UAAU+M,WAAa,SAAqBnD,GAC7C,IAAIoD,EAAIpD,EACJzB,EAAI,EAiBR,OAhBI6E,GAAK,OACP7E,GAAK,GACL6E,KAAO,IAELA,GAAK,KACP7E,GAAK,EACL6E,KAAO,GAELA,GAAK,IACP7E,GAAK,EACL6E,KAAO,GAELA,GAAK,IACP7E,GAAK,EACL6E,KAAO,GAEF7E,EAAI6E,CACZ,EAGH3R,EAAG2E,UAAUiN,UAAY,SAAoBrD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIoD,EAAIpD,EACJzB,EAAI,EAoBR,OAnBqB,KAAZ,KAAJ6E,KACH7E,GAAK,GACL6E,KAAO,IAEU,KAAV,IAAJA,KACH7E,GAAK,EACL6E,KAAO,GAES,KAAT,GAAJA,KACH7E,GAAK,EACL6E,KAAO,GAES,KAAT,EAAJA,KACH7E,GAAK,EACL6E,KAAO,GAES,KAAT,EAAJA,IACH7E,IAEKA,CACR,EAGD9M,EAAG2E,UAAUkN,UAAY,WACvB,IAAItD,EAAIrN,KAAK8K,MAAM9K,KAAKuC,OAAS,GAC7BqO,EAAK5Q,KAAKwQ,WAAWnD,GACzB,OAA2B,IAAnBrN,KAAKuC,OAAS,GAAUqO,CACjC,EAgBD9R,EAAG2E,UAAUoN,SAAW,WACtB,GAAI7Q,KAAKc,SAAU,OAAO,EAG1B,IADA,IAAI8K,EAAI,EACC7H,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAAK,CACpC,IAAIkI,EAAIjM,KAAK0Q,UAAU1Q,KAAK8K,MAAM/G,IAElC,GADA6H,GAAKK,EACK,KAANA,EAAU,KACf,CACD,OAAOL,CACR,EAED9M,EAAG2E,UAAUqM,WAAa,WACxB,OAAOxK,KAAK6H,KAAKnN,KAAK2Q,YAAc,EACrC,EAED7R,EAAG2E,UAAUjD,OAAS,SAAiBsQ,GACrC,OAAsB,IAAlB9Q,KAAK6K,SACA7K,KAAK+Q,MAAMC,MAAMF,GAAOG,MAAM,GAEhCjR,KAAKgO,OACb,EAEDlP,EAAG2E,UAAUlD,SAAW,SAAmBuQ,GACzC,OAAI9Q,KAAKkR,MAAMJ,EAAQ,GACd9Q,KAAKmR,KAAKL,GAAOG,MAAM,GAAGG,OAE5BpR,KAAKgO,OACb,EAEDlP,EAAG2E,UAAUvC,MAAQ,WACnB,OAAyB,IAAlBlB,KAAK6K,QACb,EAGD/L,EAAG2E,UAAU4N,IAAM,WACjB,OAAOrR,KAAKgO,QAAQoD,MACrB,EAEDtS,EAAG2E,UAAU2N,KAAO,WAKlB,OAJKpR,KAAKc,WACRd,KAAK6K,UAAY,GAGZ7K,IACR,EAGDlB,EAAG2E,UAAU6N,KAAO,SAAe/E,GACjC,KAAOvM,KAAKuC,OAASgK,EAAIhK,QACvBvC,KAAK8K,MAAM9K,KAAKuC,UAAY,EAG9B,IAAK,IAAIwB,EAAI,EAAGA,EAAIwI,EAAIhK,OAAQwB,IAC9B/D,KAAK8K,MAAM/G,GAAK/D,KAAK8K,MAAM/G,GAAKwI,EAAIzB,MAAM/G,GAG5C,OAAO/D,KAAKsN,QACb,EAEDxO,EAAG2E,UAAU8N,IAAM,SAAchF,GAE/B,OADAtC,EAA0C,KAAlCjK,KAAK6K,SAAW0B,EAAI1B,WACrB7K,KAAKsR,KAAK/E,EAClB,EAGDzN,EAAG2E,UAAUlC,GAAK,SAAagL,GAC7B,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQuD,IAAIhF,GAC/CA,EAAIyB,QAAQuD,IAAIvR,KACxB,EAEDlB,EAAG2E,UAAU+N,IAAM,SAAcjF,GAC/B,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQsD,KAAK/E,GAChDA,EAAIyB,QAAQsD,KAAKtR,KACzB,EAGDlB,EAAG2E,UAAUgO,MAAQ,SAAgBlF,GAEnC,IAAIN,EAEFA,EADEjM,KAAKuC,OAASgK,EAAIhK,OAChBgK,EAEAvM,KAGN,IAAK,IAAI+D,EAAI,EAAGA,EAAIkI,EAAE1J,OAAQwB,IAC5B/D,KAAK8K,MAAM/G,GAAK/D,KAAK8K,MAAM/G,GAAKwI,EAAIzB,MAAM/G,GAK5C,OAFA/D,KAAKuC,OAAS0J,EAAE1J,OAETvC,KAAKsN,QACb,EAEDxO,EAAG2E,UAAUiO,KAAO,SAAenF,GAEjC,OADAtC,EAA0C,KAAlCjK,KAAK6K,SAAW0B,EAAI1B,WACrB7K,KAAKyR,MAAMlF,EACnB,EAGDzN,EAAG2E,UAAUnC,IAAM,SAAciL,GAC/B,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQ0D,KAAKnF,GAChDA,EAAIyB,QAAQ0D,KAAK1R,KACzB,EAEDlB,EAAG2E,UAAUkO,KAAO,SAAepF,GACjC,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQyD,MAAMlF,GACjDA,EAAIyB,QAAQyD,MAAMzR,KAC1B,EAGDlB,EAAG2E,UAAUmO,MAAQ,SAAgBrF,GAEnC,IAAIgD,EACAtD,EACAjM,KAAKuC,OAASgK,EAAIhK,QACpBgN,EAAIvP,KACJiM,EAAIM,IAEJgD,EAAIhD,EACJN,EAAIjM,MAGN,IAAK,IAAI+D,EAAI,EAAGA,EAAIkI,EAAE1J,OAAQwB,IAC5B/D,KAAK8K,MAAM/G,GAAKwL,EAAEzE,MAAM/G,GAAKkI,EAAEnB,MAAM/G,GAGvC,GAAI/D,OAASuP,EACX,KAAOxL,EAAIwL,EAAEhN,OAAQwB,IACnB/D,KAAK8K,MAAM/G,GAAKwL,EAAEzE,MAAM/G,GAM5B,OAFA/D,KAAKuC,OAASgN,EAAEhN,OAETvC,KAAKsN,QACb,EAEDxO,EAAG2E,UAAUoO,KAAO,SAAetF,GAEjC,OADAtC,EAA0C,KAAlCjK,KAAK6K,SAAW0B,EAAI1B,WACrB7K,KAAK4R,MAAMrF,EACnB,EAGDzN,EAAG2E,UAAUjC,IAAM,SAAc+K,GAC/B,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQ6D,KAAKtF,GAChDA,EAAIyB,QAAQ6D,KAAK7R,KACzB,EAEDlB,EAAG2E,UAAUqO,KAAO,SAAevF,GACjC,OAAIvM,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQ4D,MAAMrF,GACjDA,EAAIyB,QAAQ4D,MAAM5R,KAC1B,EAGDlB,EAAG2E,UAAUuN,MAAQ,SAAgBF,GACnC7G,EAAwB,kBAAV6G,GAAsBA,GAAS,GAE7C,IAAIiB,EAAsC,EAAxBzM,KAAK6H,KAAK2D,EAAQ,IAChCkB,EAAWlB,EAAQ,GAGvB9Q,KAAKiO,QAAQ8D,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIhO,EAAI,EAAGA,EAAIgO,EAAahO,IAC/B/D,KAAK8K,MAAM/G,GAAsB,UAAhB/D,KAAK8K,MAAM/G,GAS9B,OALIiO,EAAW,IACbhS,KAAK8K,MAAM/G,IAAM/D,KAAK8K,MAAM/G,GAAM,UAAc,GAAKiO,GAIhDhS,KAAKsN,QACb,EAEDxO,EAAG2E,UAAU0N,KAAO,SAAeL,GACjC,OAAO9Q,KAAKgO,QAAQgD,MAAMF,EAC3B,EAGDhS,EAAG2E,UAAUwO,KAAO,SAAeC,EAAKhI,GACtCD,EAAsB,kBAARiI,GAAoBA,GAAO,GAEzC,IAAI/L,EAAO+L,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAlS,KAAKiO,QAAQ9H,EAAM,GAGjBnG,KAAK8K,MAAM3E,GADT+D,EACgBlK,KAAK8K,MAAM3E,GAAQ,GAAKgM,EAExBnS,KAAK8K,MAAM3E,KAAS,GAAKgM,GAGtCnS,KAAKsN,QACb,EAGDxO,EAAG2E,UAAU2O,KAAO,SAAe7F,GACjC,IAAIX,EAkBA2D,EAAGtD,EAfP,GAAsB,IAAlBjM,KAAK6K,UAAmC,IAAjB0B,EAAI1B,SAI7B,OAHA7K,KAAK6K,SAAW,EAChBe,EAAI5L,KAAKqS,KAAK9F,GACdvM,KAAK6K,UAAY,EACV7K,KAAKmO,YAGP,GAAsB,IAAlBnO,KAAK6K,UAAmC,IAAjB0B,EAAI1B,SAIpC,OAHA0B,EAAI1B,SAAW,EACfe,EAAI5L,KAAKqS,KAAK9F,GACdA,EAAI1B,SAAW,EACRe,EAAEuC,YAKPnO,KAAKuC,OAASgK,EAAIhK,QACpBgN,EAAIvP,KACJiM,EAAIM,IAEJgD,EAAIhD,EACJN,EAAIjM,MAIN,IADA,IAAI4O,EAAQ,EACH7K,EAAI,EAAGA,EAAIkI,EAAE1J,OAAQwB,IAC5B6H,GAAkB,EAAb2D,EAAEzE,MAAM/G,KAAwB,EAAbkI,EAAEnB,MAAM/G,IAAU6K,EAC1C5O,KAAK8K,MAAM/G,GAAS,SAAJ6H,EAChBgD,EAAQhD,IAAM,GAEhB,KAAiB,IAAVgD,GAAe7K,EAAIwL,EAAEhN,OAAQwB,IAClC6H,GAAkB,EAAb2D,EAAEzE,MAAM/G,IAAU6K,EACvB5O,KAAK8K,MAAM/G,GAAS,SAAJ6H,EAChBgD,EAAQhD,IAAM,GAIhB,GADA5L,KAAKuC,OAASgN,EAAEhN,OACF,IAAVqM,EACF5O,KAAK8K,MAAM9K,KAAKuC,QAAUqM,EAC1B5O,KAAKuC,cAEA,GAAIgN,IAAMvP,KACf,KAAO+D,EAAIwL,EAAEhN,OAAQwB,IACnB/D,KAAK8K,MAAM/G,GAAKwL,EAAEzE,MAAM/G,GAI5B,OAAO/D,IACR,EAGDlB,EAAG2E,UAAU7C,IAAM,SAAc2L,GAC/B,IAAIyD,EACJ,OAAqB,IAAjBzD,EAAI1B,UAAoC,IAAlB7K,KAAK6K,UAC7B0B,EAAI1B,SAAW,EACfmF,EAAMhQ,KAAKa,IAAI0L,GACfA,EAAI1B,UAAY,EACTmF,GACmB,IAAjBzD,EAAI1B,UAAoC,IAAlB7K,KAAK6K,UACpC7K,KAAK6K,SAAW,EAChBmF,EAAMzD,EAAI1L,IAAIb,MACdA,KAAK6K,SAAW,EACTmF,GAGLhQ,KAAKuC,OAASgK,EAAIhK,OAAevC,KAAKgO,QAAQoE,KAAK7F,GAEhDA,EAAIyB,QAAQoE,KAAKpS,KACzB,EAGDlB,EAAG2E,UAAU4O,KAAO,SAAe9F,GAEjC,GAAqB,IAAjBA,EAAI1B,SAAgB,CACtB0B,EAAI1B,SAAW,EACf,IAAIe,EAAI5L,KAAKoS,KAAK7F,GAElB,OADAA,EAAI1B,SAAW,EACRe,EAAEuC,WAGV,CAAM,GAAsB,IAAlBnO,KAAK6K,SAId,OAHA7K,KAAK6K,SAAW,EAChB7K,KAAKoS,KAAK7F,GACVvM,KAAK6K,SAAW,EACT7K,KAAKmO,YAId,IAWIoB,EAAGtD,EAXHW,EAAM5M,KAAK4M,IAAIL,GAGnB,GAAY,IAARK,EAIF,OAHA5M,KAAK6K,SAAW,EAChB7K,KAAKuC,OAAS,EACdvC,KAAK8K,MAAM,GAAK,EACT9K,KAKL4M,EAAM,GACR2C,EAAIvP,KACJiM,EAAIM,IAEJgD,EAAIhD,EACJN,EAAIjM,MAIN,IADA,IAAI4O,EAAQ,EACH7K,EAAI,EAAGA,EAAIkI,EAAE1J,OAAQwB,IAE5B6K,GADAhD,GAAkB,EAAb2D,EAAEzE,MAAM/G,KAAwB,EAAbkI,EAAEnB,MAAM/G,IAAU6K,IAC7B,GACb5O,KAAK8K,MAAM/G,GAAS,SAAJ6H,EAElB,KAAiB,IAAVgD,GAAe7K,EAAIwL,EAAEhN,OAAQwB,IAElC6K,GADAhD,GAAkB,EAAb2D,EAAEzE,MAAM/G,IAAU6K,IACV,GACb5O,KAAK8K,MAAM/G,GAAS,SAAJ6H,EAIlB,GAAc,IAAVgD,GAAe7K,EAAIwL,EAAEhN,QAAUgN,IAAMvP,KACvC,KAAO+D,EAAIwL,EAAEhN,OAAQwB,IACnB/D,KAAK8K,MAAM/G,GAAKwL,EAAEzE,MAAM/G,GAU5B,OANA/D,KAAKuC,OAAS+C,KAAKmH,IAAIzM,KAAKuC,OAAQwB,GAEhCwL,IAAMvP,OACRA,KAAK6K,SAAW,GAGX7K,KAAKsN,QACb,EAGDxO,EAAG2E,UAAU5C,IAAM,SAAc0L,GAC/B,OAAOvM,KAAKgO,QAAQqE,KAAK9F,EAC1B,EA8CD,IAAI+F,EAAc,SAAsBhD,EAAM/C,EAAKoC,GACjD,IAIIa,EACA+C,EACA3B,EANArB,EAAID,EAAKxE,MACTmB,EAAIM,EAAIzB,MACR0H,EAAI7D,EAAI7D,MACRU,EAAI,EAIJiH,EAAY,EAAPlD,EAAE,GACPmD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrD,EAAE,GACPsD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxD,EAAE,GACPyD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3D,EAAE,GACP4D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9D,EAAE,GACP+D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjE,EAAE,GACPkE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpE,EAAE,GACPqE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvE,EAAE,GACPwE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1E,EAAE,GACP2E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7E,EAAE,GACP8E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtI,EAAE,GACPuI,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzI,EAAE,GACP0I,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5I,EAAE,GACP6I,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/I,EAAE,GACPgJ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlJ,EAAE,GACPmJ,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAPrJ,EAAE,GACPsJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPxJ,EAAE,GACPyJ,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP3J,EAAE,GACP4J,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP9J,EAAE,GACP+J,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPjK,EAAE,GACPkK,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBvH,EAAI9D,SAAWyE,EAAKzE,SAAW0B,EAAI1B,SACnC8D,EAAIpM,OAAS,GAMb,IAAI8T,IAAQ7K,GAJZgE,EAAKlK,KAAKgR,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMjN,KAAKgR,KAAK5D,EAAK+B,IACRnP,KAAKgR,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDhJ,IAFAoF,EAAKtL,KAAKgR,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAEN7G,EAAKlK,KAAKgR,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKzD,EAAK4B,IACRnP,KAAKgR,KAAKxD,EAAK0B,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQ/K,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKkC,GAAQ,GACvBtP,KAAKgR,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDnJ,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAEN/G,EAAKlK,KAAKgR,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKtD,EAAKyB,IACRnP,KAAKgR,KAAKrD,EAAKuB,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKrD,EAAKwB,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAK+B,GAAQ,GACvBtP,KAAKgR,KAAKxD,EAAK6B,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQhL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKqC,GAAQ,GACvBzP,KAAKgR,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDtJ,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAKlK,KAAKgR,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKnD,EAAKsB,IACRnP,KAAKgR,KAAKlD,EAAKoB,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKlD,EAAKqB,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAK4B,GAAQ,GACvBtP,KAAKgR,KAAKrD,EAAK0B,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAK2B,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKkC,GAAQ,GACvBzP,KAAKgR,KAAKxD,EAAKgC,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQjL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKwC,GAAQ,GACvB5P,KAAKgR,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDzJ,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAKlK,KAAKgR,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKhD,EAAKmB,IACRnP,KAAKgR,KAAK/C,EAAKiB,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAK/C,EAAKkB,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAKyB,GAAQ,GACvBtP,KAAKgR,KAAKlD,EAAKuB,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAKwB,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAK+B,GAAQ,GACvBzP,KAAKgR,KAAKrD,EAAK6B,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAK8B,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKqC,GAAQ,GACvB5P,KAAKgR,KAAKxD,EAAKmC,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQlL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAK2C,IAAQ,GACvB/P,KAAKgR,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD5J,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAKlK,KAAKgR,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAK7C,EAAKgB,IACRnP,KAAKgR,KAAK5C,EAAKc,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAK5C,EAAKe,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAKsB,GAAQ,GACvBtP,KAAKgR,KAAK/C,EAAKoB,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAKqB,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAK4B,GAAQ,GACvBzP,KAAKgR,KAAKlD,EAAK0B,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAK2B,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAKkC,GAAQ,GACvB5P,KAAKgR,KAAKrD,EAAKgC,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAKiC,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKwC,IAAQ,GACvB/P,KAAKgR,KAAKxD,EAAKsC,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQnL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAK8C,IAAQ,GACvBlQ,KAAKgR,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrD/J,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAKlK,KAAKgR,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAK1C,EAAKa,IACRnP,KAAKgR,KAAKzC,EAAKW,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKzC,EAAKY,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKmB,GAAQ,GACvBtP,KAAKgR,KAAK5C,EAAKiB,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKkB,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAKyB,GAAQ,GACvBzP,KAAKgR,KAAK/C,EAAKuB,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAKwB,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAK+B,GAAQ,GACvB5P,KAAKgR,KAAKlD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAK8B,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAKqC,IAAQ,GACvB/P,KAAKgR,KAAKrD,EAAKmC,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAKoC,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAK2C,IAAQ,GACvBlQ,KAAKgR,KAAKxD,EAAKyC,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQpL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKiD,IAAQ,GACvBrQ,KAAKgR,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDlK,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAKlK,KAAKgR,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKvC,EAAKU,IACRnP,KAAKgR,KAAKtC,EAAKQ,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKtC,EAAKS,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKgB,GAAQ,GACvBtP,KAAKgR,KAAKzC,EAAKc,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKe,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKsB,GAAQ,GACvBzP,KAAKgR,KAAK5C,EAAKoB,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKqB,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAK4B,GAAQ,GACvB5P,KAAKgR,KAAK/C,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAK2B,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAKkC,IAAQ,GACvB/P,KAAKgR,KAAKlD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAKiC,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAKwC,IAAQ,GACvBlQ,KAAKgR,KAAKrD,EAAKsC,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAKuC,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAK8C,IAAQ,GACvBrQ,KAAKgR,KAAKxD,EAAK4C,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQrL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKoD,IAAQ,GACvBxQ,KAAKgR,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDrK,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAKlK,KAAKgR,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKpC,EAAKO,IACRnP,KAAKgR,KAAKnC,EAAKK,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKnC,EAAKM,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKa,GAAQ,GACvBtP,KAAKgR,KAAKtC,EAAKW,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKY,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKmB,GAAQ,GACvBzP,KAAKgR,KAAKzC,EAAKiB,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKkB,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKyB,GAAQ,GACvB5P,KAAKgR,KAAK5C,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKwB,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAK+B,IAAQ,GACvB/P,KAAKgR,KAAK/C,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAK8B,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAKqC,IAAQ,GACvBlQ,KAAKgR,KAAKlD,EAAKmC,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAKoC,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAK2C,IAAQ,GACvBrQ,KAAKgR,KAAKrD,EAAKyC,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAK0C,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKiD,IAAQ,GACvBxQ,KAAKgR,KAAKxD,EAAK+C,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQtL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAKuD,IAAQ,GACvB3Q,KAAKgR,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDxK,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAKlK,KAAKgR,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKI,IACRnP,KAAKgR,KAAKhC,EAAKE,GAAQ,EACpC5D,EAAKtL,KAAKgR,KAAKhC,EAAKG,GACpBjF,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKU,GAAQ,GACvBtP,KAAKgR,KAAKnC,EAAKQ,GAAQ,EACpC/D,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKS,GAAQ,EAClCpF,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKgB,GAAQ,GACvBzP,KAAKgR,KAAKtC,EAAKc,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKe,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKsB,GAAQ,GACvB5P,KAAKgR,KAAKzC,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKqB,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAK4B,IAAQ,GACvB/P,KAAKgR,KAAK5C,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAK2B,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAKkC,IAAQ,GACvBlQ,KAAKgR,KAAK/C,EAAKgC,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAKiC,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAKwC,IAAQ,GACvBrQ,KAAKgR,KAAKlD,EAAKsC,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAKuC,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAK8C,IAAQ,GACvBxQ,KAAKgR,KAAKrD,EAAK4C,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAK6C,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKoD,IAAQ,GACvB3Q,KAAKgR,KAAKxD,EAAKkD,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQvL,GAJZgE,EAAMA,EAAKlK,KAAKgR,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK5D,EAAK0D,IAAQ,GACvB9Q,KAAKgR,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKlK,KAAKgR,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKO,IACRtP,KAAKgR,KAAKhC,EAAKK,GAAQ,EACpC/D,EAAKtL,KAAKgR,KAAKhC,EAAKM,GACpBpF,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKa,GAAQ,GACvBzP,KAAKgR,KAAKnC,EAAKW,GAAQ,EACpClE,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKY,GAAQ,EAClCvF,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKmB,GAAQ,GACvB5P,KAAKgR,KAAKtC,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKkB,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKyB,IAAQ,GACvB/P,KAAKgR,KAAKzC,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKwB,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAK+B,IAAQ,GACvBlQ,KAAKgR,KAAK5C,EAAK6B,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAK8B,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAKqC,IAAQ,GACvBrQ,KAAKgR,KAAK/C,EAAKmC,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAKoC,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAK2C,IAAQ,GACvBxQ,KAAKgR,KAAKlD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAK0C,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAKiD,IAAQ,GACvB3Q,KAAKgR,KAAKrD,EAAK+C,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASxL,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKzD,EAAKuD,IAAQ,GACvB9Q,KAAKgR,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPxH,EAAKlK,KAAKgR,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKU,IACRzP,KAAKgR,KAAKhC,EAAKQ,GAAQ,EACpClE,EAAKtL,KAAKgR,KAAKhC,EAAKS,GACpBvF,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKgB,GAAQ,GACvB5P,KAAKgR,KAAKnC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKe,GAAQ,EAClC1F,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKsB,IAAQ,GACvB/P,KAAKgR,KAAKtC,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKqB,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAK4B,IAAQ,GACvBlQ,KAAKgR,KAAKzC,EAAK0B,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAK2B,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKkC,IAAQ,GACvBrQ,KAAKgR,KAAK5C,EAAKgC,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKiC,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAKwC,IAAQ,GACvBxQ,KAAKgR,KAAK/C,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAKuC,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAK8C,IAAQ,GACvB3Q,KAAKgR,KAAKlD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAASzL,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKtD,EAAKoD,IAAQ,GACvB9Q,KAAKgR,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAKlK,KAAKgR,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKa,IACR5P,KAAKgR,KAAKhC,EAAKW,GAAQ,EACpCrE,EAAKtL,KAAKgR,KAAKhC,EAAKY,GACpB1F,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKmB,IAAQ,GACvB/P,KAAKgR,KAAKnC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKkB,IAAQ,EAClC7F,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKyB,IAAQ,GACvBlQ,KAAKgR,KAAKtC,EAAKuB,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKwB,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAK+B,IAAQ,GACvBrQ,KAAKgR,KAAKzC,EAAK6B,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAK8B,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKqC,IAAQ,GACvBxQ,KAAKgR,KAAK5C,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKoC,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAK2C,IAAQ,GACvB3Q,KAAKgR,KAAK/C,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS1L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKnD,EAAKiD,IAAQ,GACvB9Q,KAAKgR,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAKlK,KAAKgR,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKgB,KACR/P,KAAKgR,KAAKhC,EAAKc,GAAQ,EACpCxE,EAAKtL,KAAKgR,KAAKhC,EAAKe,IACpB7F,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKsB,IAAQ,GACvBlQ,KAAKgR,KAAKnC,EAAKoB,IAAQ,EACpC3E,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKqB,IAAQ,EAClChG,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAK4B,IAAQ,GACvBrQ,KAAKgR,KAAKtC,EAAK0B,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAK2B,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKkC,IAAQ,GACvBxQ,KAAKgR,KAAKzC,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKiC,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAKwC,IAAQ,GACvB3Q,KAAKgR,KAAK5C,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS3L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKhD,EAAK8C,IAAQ,GACvB9Q,KAAKgR,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAKlK,KAAKgR,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKmB,KACRlQ,KAAKgR,KAAKhC,EAAKiB,IAAQ,EACpC3E,EAAKtL,KAAKgR,KAAKhC,EAAKkB,IACpBhG,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKyB,IAAQ,GACvBrQ,KAAKgR,KAAKnC,EAAKuB,IAAQ,EACpC9E,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKwB,IAAQ,EAClCnG,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAK+B,IAAQ,GACvBxQ,KAAKgR,KAAKtC,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAK8B,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKqC,IAAQ,GACvB3Q,KAAKgR,KAAKzC,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS5L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK7C,EAAK2C,IAAQ,GACvB9Q,KAAKgR,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAKlK,KAAKgR,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKsB,KACRrQ,KAAKgR,KAAKhC,EAAKoB,IAAQ,EACpC9E,EAAKtL,KAAKgR,KAAKhC,EAAKqB,IACpBnG,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAK4B,IAAQ,GACvBxQ,KAAKgR,KAAKnC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAK2B,IAAQ,EAClCtG,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKkC,IAAQ,GACvB3Q,KAAKgR,KAAKtC,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAS7L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAK1C,EAAKwC,IAAQ,GACvB9Q,KAAKgR,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAKlK,KAAKgR,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAKyB,KACRxQ,KAAKgR,KAAKhC,EAAKuB,IAAQ,EACpCjF,EAAKtL,KAAKgR,KAAKhC,EAAKwB,IACpBtG,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAK+B,IAAQ,GACvB3Q,KAAKgR,KAAKnC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAS9L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKvC,EAAKqC,IAAQ,GACvB9Q,KAAKgR,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAKlK,KAAKgR,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAK4B,KACR3Q,KAAKgR,KAAKhC,EAAK0B,IAAQ,EACpCpF,EAAKtL,KAAKgR,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAAS/L,GAJbgE,EAAMA,EAAKlK,KAAKgR,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMjN,KAAKgR,KAAKpC,EAAKkC,IAAQ,GACvB9Q,KAAKgR,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD3K,IAFAoF,EAAMA,EAAKtL,KAAKgR,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAAShM,GAJbgE,EAAKlK,KAAKgR,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMjN,KAAKgR,KAAKjC,EAAK+B,KACR9Q,KAAKgR,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA3K,IAFAoF,EAAKtL,KAAKgR,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANhM,IACFgH,EAAE,IAAMhH,EACRmD,EAAIpM,UAECoM,CACR,EAOD,SAAS8I,EAAUnI,EAAM/C,EAAKoC,GAC5BA,EAAI9D,SAAW0B,EAAI1B,SAAWyE,EAAKzE,SACnC8D,EAAIpM,OAAS+M,EAAK/M,OAASgK,EAAIhK,OAI/B,IAFA,IAAIqM,EAAQ,EACR8I,EAAU,EACLjI,EAAI,EAAGA,EAAId,EAAIpM,OAAS,EAAGkN,IAAK,CAGvC,IAAIC,EAASgI,EACbA,EAAU,EAGV,IAFA,IAAI/H,EAAgB,SAARf,EACRgB,EAAOtK,KAAK6G,IAAIsD,EAAGlD,EAAIhK,OAAS,GAC3B6K,EAAI9H,KAAKmH,IAAI,EAAGgD,EAAIH,EAAK/M,OAAS,GAAI6K,GAAKwC,EAAMxC,IAAK,CAC7D,IAAIrJ,EAAI0L,EAAIrC,EAGRxB,GAFoB,EAAhB0D,EAAKxE,MAAM/G,KACI,EAAfwI,EAAIzB,MAAMsC,IAGdoC,EAAS,SAAJ5D,EAGT+D,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpB+H,IAFAhI,GAHAA,EAAUA,GAAW9D,EAAI,SAAa,GAAM,IAGxB4D,IAAO,IAAO,KAEZ,GACtBE,GAAU,QACX,CACDf,EAAI7D,MAAM2E,GAAKE,EACff,EAAQc,EACRA,EAASgI,CACV,CAOD,OANc,IAAV9I,EACFD,EAAI7D,MAAM2E,GAAKb,EAEfD,EAAIpM,SAGCoM,EAAIrB,QACZ,CAED,SAASqK,EAAYrI,EAAM/C,EAAKoC,GAI9B,OAAO8I,EAASnI,EAAM/C,EAAKoC,EAC5B,CAqBD,SAASiJ,EAAMC,EAAGC,GAChB9X,KAAK6X,EAAIA,EACT7X,KAAK8X,EAAIA,CACV,CA1EIxS,KAAKgR,OACRhE,EAAcjD,GAmDhBvQ,EAAG2E,UAAUsU,MAAQ,SAAgBxL,EAAKoC,GACxC,IACIzC,EAAMlM,KAAKuC,OAASgK,EAAIhK,OAW5B,OAVoB,KAAhBvC,KAAKuC,QAAgC,KAAfgK,EAAIhK,OACtB+P,EAAYtS,KAAMuM,EAAKoC,GACpBzC,EAAM,GACTmD,EAAWrP,KAAMuM,EAAKoC,GACnBzC,EAAM,KACTuL,EAASzX,KAAMuM,EAAKoC,GAEpBgJ,EAAW3X,KAAMuM,EAAKoC,EAI/B,EAUDiJ,EAAKnU,UAAUuU,QAAU,SAAkBC,GAGzC,IAFA,IAAIxH,EAAI,IAAIjN,MAAMyU,GACdC,EAAIpZ,EAAG2E,UAAU+M,WAAWyH,GAAK,EAC5BlU,EAAI,EAAGA,EAAIkU,EAAGlU,IACrB0M,EAAE1M,GAAK/D,KAAKmY,OAAOpU,EAAGmU,EAAGD,GAG3B,OAAOxH,CACR,EAGDmH,EAAKnU,UAAU0U,OAAS,SAAiBN,EAAGK,EAAGD,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIO,EAAK,EACArU,EAAI,EAAGA,EAAImU,EAAGnU,IACrBqU,IAAW,EAAJP,IAAWK,EAAInU,EAAI,EAC1B8T,IAAM,EAGR,OAAOO,CACR,EAIDR,EAAKnU,UAAU4U,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,IAAIlU,EAAI,EAAGA,EAAIkU,EAAGlU,IACrB0U,EAAK1U,GAAKwU,EAAID,EAAIvU,IAClB2U,EAAK3U,GAAKyU,EAAIF,EAAIvU,GAErB,EAED6T,EAAKnU,UAAUkV,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtEtY,KAAKqY,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GAExC,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IALA,IAAIV,EAAIU,GAAK,EAETC,EAAQvT,KAAKwT,IAAI,EAAIxT,KAAKyT,GAAKb,GAC/Bc,EAAQ1T,KAAK2T,IAAI,EAAI3T,KAAKyT,GAAKb,GAE1BgB,EAAI,EAAGA,EAAIjB,EAAGiB,GAAKhB,EAI1B,IAHA,IAAIiB,EAASN,EACTO,EAASJ,EAEJ5L,EAAI,EAAGA,EAAIwL,EAAGxL,IAAK,CAC1B,IAAIiM,EAAKZ,EAAKS,EAAI9L,GACdkM,EAAKZ,EAAKQ,EAAI9L,GAEdmM,EAAKd,EAAKS,EAAI9L,EAAIwL,GAClBY,EAAKd,EAAKQ,EAAI9L,EAAIwL,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAI9L,GAAKiM,EAAKE,EACnBb,EAAKQ,EAAI9L,GAAKkM,EAAKE,EAEnBf,EAAKS,EAAI9L,EAAIwL,GAAKS,EAAKE,EACvBb,EAAKQ,EAAI9L,EAAIwL,GAAKU,EAAKE,EAGnBpM,IAAM8K,IACRuB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEZ,CAGN,EAED7B,EAAKnU,UAAUiW,YAAc,SAAsBC,EAAGC,GACpD,IAAI3B,EAAqB,EAAjB3S,KAAKmH,IAAImN,EAAGD,GAChBE,EAAU,EAAJ5B,EACNlU,EAAI,EACR,IAAKkU,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BlU,IAGF,OAAO,GAAKA,EAAI,EAAI8V,CACrB,EAEDjC,EAAKnU,UAAUqW,UAAY,SAAoBvB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIlU,EAAI,EAAGA,EAAIkU,EAAI,EAAGlU,IAAK,CAC9B,IAAI0M,EAAI8H,EAAIxU,GAEZwU,EAAIxU,GAAKwU,EAAIN,EAAIlU,EAAI,GACrBwU,EAAIN,EAAIlU,EAAI,GAAK0M,EAEjBA,EAAI+H,EAAIzU,GAERyU,EAAIzU,IAAMyU,EAAIP,EAAIlU,EAAI,GACtByU,EAAIP,EAAIlU,EAAI,IAAM0M,CACnB,CACF,EAEDmH,EAAKnU,UAAUsW,aAAe,SAAuBC,EAAI/B,GAEvD,IADA,IAAIrJ,EAAQ,EACH7K,EAAI,EAAGA,EAAIkU,EAAI,EAAGlU,IAAK,CAC9B,IAAIsJ,EAAoC,KAAhC/H,KAAK2U,MAAMD,EAAG,EAAIjW,EAAI,GAAKkU,GACjC3S,KAAK2U,MAAMD,EAAG,EAAIjW,GAAKkU,GACvBrJ,EAEFoL,EAAGjW,GAAS,SAAJsJ,EAGNuB,EADEvB,EAAI,SACE,EAEAA,EAAI,SAAY,CAE3B,CAED,OAAO2M,CACR,EAEDpC,EAAKnU,UAAUyW,WAAa,SAAqBF,EAAI9N,EAAKqM,EAAKN,GAE7D,IADA,IAAIrJ,EAAQ,EACH7K,EAAI,EAAGA,EAAImI,EAAKnI,IACvB6K,GAAyB,EAARoL,EAAGjW,GAEpBwU,EAAI,EAAIxU,GAAa,KAAR6K,EAAgBA,KAAkB,GAC/C2J,EAAI,EAAIxU,EAAI,GAAa,KAAR6K,EAAgBA,KAAkB,GAIrD,IAAK7K,EAAI,EAAImI,EAAKnI,EAAIkU,IAAKlU,EACzBwU,EAAIxU,GAAK,EAGXkG,EAAiB,IAAV2E,GACP3E,EAA6B,MAAb,KAAR2E,GACT,EAEDgJ,EAAKnU,UAAU0W,KAAO,SAAelC,GAEnC,IADA,IAAImC,EAAK,IAAI5W,MAAMyU,GACVlU,EAAI,EAAGA,EAAIkU,EAAGlU,IACrBqW,EAAGrW,GAAK,EAGV,OAAOqW,CACR,EAEDxC,EAAKnU,UAAU4W,KAAO,SAAexC,EAAGC,EAAGnJ,GACzC,IAAIsJ,EAAI,EAAIjY,KAAK0Z,YAAY7B,EAAEtV,OAAQuV,EAAEvV,QAErC+V,EAAMtY,KAAKgY,QAAQC,GAEnBqC,EAAIta,KAAKma,KAAKlC,GAEdM,EAAM,IAAI/U,MAAMyU,GAChBsC,EAAO,IAAI/W,MAAMyU,GACjBuC,EAAO,IAAIhX,MAAMyU,GAEjBwC,EAAO,IAAIjX,MAAMyU,GACjByC,EAAQ,IAAIlX,MAAMyU,GAClB0C,EAAQ,IAAInX,MAAMyU,GAElB2C,EAAOjM,EAAI7D,MACf8P,EAAKrY,OAAS0V,EAEdjY,KAAKka,WAAWrC,EAAE/M,MAAO+M,EAAEtV,OAAQgW,EAAKN,GACxCjY,KAAKka,WAAWpC,EAAEhN,MAAOgN,EAAEvV,OAAQkY,EAAMxC,GAEzCjY,KAAK2Y,UAAUJ,EAAK+B,EAAGC,EAAMC,EAAMvC,EAAGK,GACtCtY,KAAK2Y,UAAU8B,EAAMH,EAAGI,EAAOC,EAAO1C,EAAGK,GAEzC,IAAK,IAAIvU,EAAI,EAAGA,EAAIkU,EAAGlU,IAAK,CAC1B,IAAI0V,EAAKc,EAAKxW,GAAK2W,EAAM3W,GAAKyW,EAAKzW,GAAK4W,EAAM5W,GAC9CyW,EAAKzW,GAAKwW,EAAKxW,GAAK4W,EAAM5W,GAAKyW,EAAKzW,GAAK2W,EAAM3W,GAC/CwW,EAAKxW,GAAK0V,CACX,CASD,OAPAzZ,KAAK8Z,UAAUS,EAAMC,EAAMvC,GAC3BjY,KAAK2Y,UAAU4B,EAAMC,EAAMI,EAAMN,EAAGrC,EAAGK,GACvCtY,KAAK8Z,UAAUc,EAAMN,EAAGrC,GACxBjY,KAAK+Z,aAAaa,EAAM3C,GAExBtJ,EAAI9D,SAAWgN,EAAEhN,SAAWiN,EAAEjN,SAC9B8D,EAAIpM,OAASsV,EAAEtV,OAASuV,EAAEvV,OACnBoM,EAAIrB,QACZ,EAGDxO,EAAG2E,UAAUxC,IAAM,SAAcsL,GAC/B,IAAIoC,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAI7D,MAAQ,IAAItH,MAAMxD,KAAKuC,OAASgK,EAAIhK,QACjCvC,KAAK+X,MAAMxL,EAAKoC,EACxB,EAGD7P,EAAG2E,UAAUoX,KAAO,SAAetO,GACjC,IAAIoC,EAAM,IAAI7P,EAAG,MAEjB,OADA6P,EAAI7D,MAAQ,IAAItH,MAAMxD,KAAKuC,OAASgK,EAAIhK,QACjCoV,EAAW3X,KAAMuM,EAAKoC,EAC9B,EAGD7P,EAAG2E,UAAU6S,KAAO,SAAe/J,GACjC,OAAOvM,KAAKgO,QAAQ+J,MAAMxL,EAAKvM,KAChC,EAEDlB,EAAG2E,UAAUmK,MAAQ,SAAgBrB,GACnC,IAAIuO,EAAWvO,EAAM,EACjBuO,IAAUvO,GAAOA,GAErBtC,EAAsB,kBAARsC,GACdtC,EAAOsC,EAAM,UAIb,IADA,IAAIqC,EAAQ,EACH7K,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAAK,CACpC,IAAIsJ,GAAqB,EAAhBrN,KAAK8K,MAAM/G,IAAUwI,EAC1BiD,GAAU,SAAJnC,IAA0B,SAARuB,GAC5BA,IAAU,GACVA,GAAUvB,EAAI,SAAa,EAE3BuB,GAASY,IAAO,GAChBxP,KAAK8K,MAAM/G,GAAU,SAALyL,CACjB,CAOD,OALc,IAAVZ,IACF5O,KAAK8K,MAAM/G,GAAK6K,EAChB5O,KAAKuC,UAGAuY,EAAW9a,KAAKoR,OAASpR,IACjC,EAEDlB,EAAG2E,UAAUsX,KAAO,SAAexO,GACjC,OAAOvM,KAAKgO,QAAQJ,MAAMrB,EAC3B,EAGDzN,EAAG2E,UAAUuX,IAAM,WACjB,OAAOhb,KAAKiB,IAAIjB,KACjB,EAGDlB,EAAG2E,UAAUwX,KAAO,WAClB,OAAOjb,KAAKsW,KAAKtW,KAAKgO,QACvB,EAGDlP,EAAG2E,UAAUrC,IAAM,SAAcmL,GAC/B,IAAIc,EA7xCN,SAAqBd,GAGnB,IAFA,IAAIc,EAAI,IAAI7J,MAAM+I,EAAIoE,aAEbuB,EAAM,EAAGA,EAAM7E,EAAE9K,OAAQ2P,IAAO,CACvC,IAAI/L,EAAO+L,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB7E,EAAE6E,GAAQ3F,EAAIzB,MAAM3E,KAASgM,EAAQ,CACtC,CAED,OAAO9E,CACR,CAkxCS6N,CAAW3O,GACnB,GAAiB,IAAbc,EAAE9K,OAAc,OAAO,IAAIzD,EAAG,GAIlC,IADA,IAAIkR,EAAMhQ,KACD+D,EAAI,EAAGA,EAAIsJ,EAAE9K,QACP,IAAT8K,EAAEtJ,GADsBA,IAAKiM,EAAMA,EAAIgL,OAI7C,KAAMjX,EAAIsJ,EAAE9K,OACV,IAAK,IAAI4Y,EAAInL,EAAIgL,MAAOjX,EAAIsJ,EAAE9K,OAAQwB,IAAKoX,EAAIA,EAAEH,MAClC,IAAT3N,EAAEtJ,KAENiM,EAAMA,EAAI/O,IAAIka,IAIlB,OAAOnL,CACR,EAGDlR,EAAG2E,UAAU2X,OAAS,SAAiBC,GACrCpR,EAAuB,kBAAToR,GAAqBA,GAAQ,GAC3C,IAGItX,EAHA6H,EAAIyP,EAAO,GACXzC,GAAKyC,EAAOzP,GAAK,GACjB0P,EAAa,WAAe,GAAK1P,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIgD,EAAQ,EAEZ,IAAK7K,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAAK,CAChC,IAAIwX,EAAWvb,KAAK8K,MAAM/G,GAAKuX,EAC3B9P,GAAsB,EAAhBxL,KAAK8K,MAAM/G,IAAUwX,GAAa3P,EAC5C5L,KAAK8K,MAAM/G,GAAKyH,EAAIoD,EACpBA,EAAQ2M,IAAc,GAAK3P,CAC5B,CAEGgD,IACF5O,KAAK8K,MAAM/G,GAAK6K,EAChB5O,KAAKuC,SAER,CAED,GAAU,IAANqW,EAAS,CACX,IAAK7U,EAAI/D,KAAKuC,OAAS,EAAGwB,GAAK,EAAGA,IAChC/D,KAAK8K,MAAM/G,EAAI6U,GAAK5Y,KAAK8K,MAAM/G,GAGjC,IAAKA,EAAI,EAAGA,EAAI6U,EAAG7U,IACjB/D,KAAK8K,MAAM/G,GAAK,EAGlB/D,KAAKuC,QAAUqW,CAChB,CAED,OAAO5Y,KAAKsN,QACb,EAEDxO,EAAG2E,UAAU+X,MAAQ,SAAgBH,GAGnC,OADApR,EAAyB,IAAlBjK,KAAK6K,UACL7K,KAAKob,OAAOC,EACpB,EAKDvc,EAAG2E,UAAUgY,OAAS,SAAiBJ,EAAMK,EAAMC,GAEjD,IAAIC,EADJ3R,EAAuB,kBAAToR,GAAqBA,GAAQ,GAGzCO,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI9P,EAAIyP,EAAO,GACXzC,EAAItT,KAAK6G,KAAKkP,EAAOzP,GAAK,GAAI5L,KAAKuC,QACnCsZ,EAAO,SAAc,WAAcjQ,GAAMA,EACzCkQ,EAAcH,EAMlB,GAJAC,GAAKhD,EACLgD,EAAItW,KAAKmH,IAAI,EAAGmP,GAGZE,EAAa,CACf,IAAK,IAAI/X,EAAI,EAAGA,EAAI6U,EAAG7U,IACrB+X,EAAYhR,MAAM/G,GAAK/D,KAAK8K,MAAM/G,GAEpC+X,EAAYvZ,OAASqW,CACtB,CAED,GAAU,IAANA,QAEG,GAAI5Y,KAAKuC,OAASqW,EAEvB,IADA5Y,KAAKuC,QAAUqW,EACV7U,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAC3B/D,KAAK8K,MAAM/G,GAAK/D,KAAK8K,MAAM/G,EAAI6U,QAGjC5Y,KAAK8K,MAAM,GAAK,EAChB9K,KAAKuC,OAAS,EAGhB,IAAIqM,EAAQ,EACZ,IAAK7K,EAAI/D,KAAKuC,OAAS,EAAGwB,GAAK,IAAgB,IAAV6K,GAAe7K,GAAK6X,GAAI7X,IAAK,CAChE,IAAI4J,EAAuB,EAAhB3N,KAAK8K,MAAM/G,GACtB/D,KAAK8K,MAAM/G,GAAM6K,GAAU,GAAKhD,EAAO+B,IAAS/B,EAChDgD,EAAQjB,EAAOkO,CAChB,CAYD,OATIC,GAAyB,IAAVlN,IACjBkN,EAAYhR,MAAMgR,EAAYvZ,UAAYqM,GAGxB,IAAhB5O,KAAKuC,SACPvC,KAAK8K,MAAM,GAAK,EAChB9K,KAAKuC,OAAS,GAGTvC,KAAKsN,QACb,EAEDxO,EAAG2E,UAAUsY,MAAQ,SAAgBV,EAAMK,EAAMC,GAG/C,OADA1R,EAAyB,IAAlBjK,KAAK6K,UACL7K,KAAKyb,OAAOJ,EAAMK,EAAMC,EAChC,EAGD7c,EAAG2E,UAAU/B,KAAO,SAAe2Z,GACjC,OAAOrb,KAAKgO,QAAQwN,MAAMH,EAC3B,EAEDvc,EAAG2E,UAAUuY,MAAQ,SAAgBX,GACnC,OAAOrb,KAAKgO,QAAQoN,OAAOC,EAC5B,EAGDvc,EAAG2E,UAAU9B,KAAO,SAAe0Z,GACjC,OAAOrb,KAAKgO,QAAQ+N,MAAMV,EAC3B,EAEDvc,EAAG2E,UAAUwY,MAAQ,SAAgBZ,GACnC,OAAOrb,KAAKgO,QAAQyN,OAAOJ,EAC5B,EAGDvc,EAAG2E,UAAUyN,MAAQ,SAAgBgB,GACnCjI,EAAsB,kBAARiI,GAAoBA,GAAO,GACzC,IAAItG,EAAIsG,EAAM,GACV0G,GAAK1G,EAAMtG,GAAK,GAChBuP,EAAI,GAAKvP,EAGb,QAAI5L,KAAKuC,QAAUqW,OAGX5Y,KAAK8K,MAAM8N,GAELuC,EACf,EAGDrc,EAAG2E,UAAUyY,OAAS,SAAiBb,GACrCpR,EAAuB,kBAAToR,GAAqBA,GAAQ,GAC3C,IAAIzP,EAAIyP,EAAO,GACXzC,GAAKyC,EAAOzP,GAAK,GAIrB,GAFA3B,EAAyB,IAAlBjK,KAAK6K,SAAgB,2CAExB7K,KAAKuC,QAAUqW,EACjB,OAAO5Y,KAQT,GALU,IAAN4L,GACFgN,IAEF5Y,KAAKuC,OAAS+C,KAAK6G,IAAIyM,EAAG5Y,KAAKuC,QAErB,IAANqJ,EAAS,CACX,IAAIiQ,EAAO,SAAc,WAAcjQ,GAAMA,EAC7C5L,KAAK8K,MAAM9K,KAAKuC,OAAS,IAAMsZ,CAChC,CAED,OAAO7b,KAAKsN,QACb,EAGDxO,EAAG2E,UAAUhC,MAAQ,SAAgB4Z,GACnC,OAAOrb,KAAKgO,QAAQkO,OAAOb,EAC5B,EAGDvc,EAAG2E,UAAUwN,MAAQ,SAAgB1E,GAGnC,OAFAtC,EAAsB,kBAARsC,GACdtC,EAAOsC,EAAM,UACTA,EAAM,EAAUvM,KAAKmc,OAAO5P,GAGV,IAAlBvM,KAAK6K,SACa,IAAhB7K,KAAKuC,SAAiC,EAAhBvC,KAAK8K,MAAM,KAAWyB,GAC9CvM,KAAK8K,MAAM,GAAKyB,GAAuB,EAAhBvM,KAAK8K,MAAM,IAClC9K,KAAK6K,SAAW,EACT7K,OAGTA,KAAK6K,SAAW,EAChB7K,KAAKmc,MAAM5P,GACXvM,KAAK6K,SAAW,EACT7K,MAIFA,KAAK6N,OAAOtB,EACpB,EAEDzN,EAAG2E,UAAUoK,OAAS,SAAiBtB,GACrCvM,KAAK8K,MAAM,IAAMyB,EAGjB,IAAK,IAAIxI,EAAI,EAAGA,EAAI/D,KAAKuC,QAAUvC,KAAK8K,MAAM/G,IAAM,SAAWA,IAC7D/D,KAAK8K,MAAM/G,IAAM,SACbA,IAAM/D,KAAKuC,OAAS,EACtBvC,KAAK8K,MAAM/G,EAAI,GAAK,EAEpB/D,KAAK8K,MAAM/G,EAAI,KAKnB,OAFA/D,KAAKuC,OAAS+C,KAAKmH,IAAIzM,KAAKuC,OAAQwB,EAAI,GAEjC/D,IACR,EAGDlB,EAAG2E,UAAU0Y,MAAQ,SAAgB5P,GAGnC,GAFAtC,EAAsB,kBAARsC,GACdtC,EAAOsC,EAAM,UACTA,EAAM,EAAG,OAAOvM,KAAKiR,OAAO1E,GAEhC,GAAsB,IAAlBvM,KAAK6K,SAIP,OAHA7K,KAAK6K,SAAW,EAChB7K,KAAKiR,MAAM1E,GACXvM,KAAK6K,SAAW,EACT7K,KAKT,GAFAA,KAAK8K,MAAM,IAAMyB,EAEG,IAAhBvM,KAAKuC,QAAgBvC,KAAK8K,MAAM,GAAK,EACvC9K,KAAK8K,MAAM,IAAM9K,KAAK8K,MAAM,GAC5B9K,KAAK6K,SAAW,OAGhB,IAAK,IAAI9G,EAAI,EAAGA,EAAI/D,KAAKuC,QAAUvC,KAAK8K,MAAM/G,GAAK,EAAGA,IACpD/D,KAAK8K,MAAM/G,IAAM,SACjB/D,KAAK8K,MAAM/G,EAAI,IAAM,EAIzB,OAAO/D,KAAKsN,QACb,EAEDxO,EAAG2E,UAAU2Y,KAAO,SAAe7P,GACjC,OAAOvM,KAAKgO,QAAQiD,MAAM1E,EAC3B,EAEDzN,EAAG2E,UAAU4Y,KAAO,SAAe9P,GACjC,OAAOvM,KAAKgO,QAAQmO,MAAM5P,EAC3B,EAEDzN,EAAG2E,UAAU6Y,KAAO,WAGlB,OAFAtc,KAAK6K,SAAW,EAET7K,IACR,EAEDlB,EAAG2E,UAAUsN,IAAM,WACjB,OAAO/Q,KAAKgO,QAAQsO,MACrB,EAEDxd,EAAG2E,UAAU8Y,aAAe,SAAuBhQ,EAAKtL,EAAKoP,GAC3D,IACItM,EAIAsJ,EALAnB,EAAMK,EAAIhK,OAAS8N,EAGvBrQ,KAAKiO,QAAQ/B,GAGb,IAAI0C,EAAQ,EACZ,IAAK7K,EAAI,EAAGA,EAAIwI,EAAIhK,OAAQwB,IAAK,CAC/BsJ,GAA6B,EAAxBrN,KAAK8K,MAAM/G,EAAIsM,IAAczB,EAClC,IAAIjC,GAAwB,EAAfJ,EAAIzB,MAAM/G,IAAU9C,EAEjC2N,IADAvB,GAAa,SAARV,IACS,KAAQA,EAAQ,SAAa,GAC3C3M,KAAK8K,MAAM/G,EAAIsM,GAAa,SAAJhD,CACzB,CACD,KAAOtJ,EAAI/D,KAAKuC,OAAS8N,EAAOtM,IAE9B6K,GADAvB,GAA6B,EAAxBrN,KAAK8K,MAAM/G,EAAIsM,IAAczB,IACrB,GACb5O,KAAK8K,MAAM/G,EAAIsM,GAAa,SAAJhD,EAG1B,GAAc,IAAVuB,EAAa,OAAO5O,KAAKsN,SAK7B,IAFArD,GAAkB,IAAX2E,GACPA,EAAQ,EACH7K,EAAI,EAAGA,EAAI/D,KAAKuC,OAAQwB,IAE3B6K,GADAvB,IAAsB,EAAhBrN,KAAK8K,MAAM/G,IAAU6K,IACd,GACb5O,KAAK8K,MAAM/G,GAAS,SAAJsJ,EAIlB,OAFArN,KAAK6K,SAAW,EAET7K,KAAKsN,QACb,EAEDxO,EAAG2E,UAAU+Y,SAAW,SAAmBjQ,EAAKkQ,GAC9C,IAAIpM,GAAQrQ,KAAKuC,OAASgK,EAAIhK,QAE1BgN,EAAIvP,KAAKgO,QACT/B,EAAIM,EAGJmQ,EAA8B,EAAxBzQ,EAAEnB,MAAMmB,EAAE1J,OAAS,GAGf,KADd8N,EAAQ,GADMrQ,KAAKwQ,WAAWkM,MAG5BzQ,EAAIA,EAAE+P,MAAM3L,GACZd,EAAE6L,OAAO/K,GACTqM,EAA8B,EAAxBzQ,EAAEnB,MAAMmB,EAAE1J,OAAS,IAI3B,IACI4Y,EADAvB,EAAIrK,EAAEhN,OAAS0J,EAAE1J,OAGrB,GAAa,QAATka,EAAgB,EAClBtB,EAAI,IAAIrc,EAAG,OACTyD,OAASqX,EAAI,EACfuB,EAAErQ,MAAQ,IAAItH,MAAM2X,EAAE5Y,QACtB,IAAK,IAAIwB,EAAI,EAAGA,EAAIoX,EAAE5Y,OAAQwB,IAC5BoX,EAAErQ,MAAM/G,GAAK,CAEhB,CAED,IAAI4Y,EAAOpN,EAAEvB,QAAQuO,aAAatQ,EAAG,EAAG2N,GAClB,IAAlB+C,EAAK9R,WACP0E,EAAIoN,EACAxB,IACFA,EAAErQ,MAAM8O,GAAK,IAIjB,IAAK,IAAIxM,EAAIwM,EAAI,EAAGxM,GAAK,EAAGA,IAAK,CAC/B,IAAIwP,EAAmC,UAAL,EAAxBrN,EAAEzE,MAAMmB,EAAE1J,OAAS6K,KACE,EAA5BmC,EAAEzE,MAAMmB,EAAE1J,OAAS6K,EAAI,IAO1B,IAHAwP,EAAKtX,KAAK6G,IAAKyQ,EAAKF,EAAO,EAAG,UAE9BnN,EAAEgN,aAAatQ,EAAG2Q,EAAIxP,GACA,IAAfmC,EAAE1E,UACP+R,IACArN,EAAE1E,SAAW,EACb0E,EAAEgN,aAAatQ,EAAG,EAAGmB,GAChBmC,EAAEzO,WACLyO,EAAE1E,UAAY,GAGdsQ,IACFA,EAAErQ,MAAMsC,GAAKwP,EAEhB,CAWD,OAVIzB,GACFA,EAAE7N,SAEJiC,EAAEjC,SAGW,QAATmP,GAA4B,IAAVpM,GACpBd,EAAEkM,OAAOpL,GAGJ,CACLrP,IAAKma,GAAK,KACVzN,IAAK6B,EAER,EAMDzQ,EAAG2E,UAAUoZ,OAAS,SAAiBtQ,EAAKkQ,EAAMK,GAGhD,OAFA7S,GAAQsC,EAAIzL,UAERd,KAAKc,SACA,CACLE,IAAK,IAAIlC,EAAG,GACZ4O,IAAK,IAAI5O,EAAG,IAKM,IAAlBkB,KAAK6K,UAAmC,IAAjB0B,EAAI1B,UAC7BmF,EAAMhQ,KAAKqR,MAAMwL,OAAOtQ,EAAKkQ,GAEhB,QAATA,IACFzb,EAAMgP,EAAIhP,IAAIqQ,OAGH,QAAToL,IACF/O,EAAMsC,EAAItC,IAAI2D,MACVyL,GAA6B,IAAjBpP,EAAI7C,UAClB6C,EAAI0E,KAAK7F,IAIN,CACLvL,IAAKA,EACL0M,IAAKA,IAIa,IAAlB1N,KAAK6K,UAAmC,IAAjB0B,EAAI1B,UAC7BmF,EAAMhQ,KAAK6c,OAAOtQ,EAAI8E,MAAOoL,GAEhB,QAATA,IACFzb,EAAMgP,EAAIhP,IAAIqQ,OAGT,CACLrQ,IAAKA,EACL0M,IAAKsC,EAAItC,MAI0B,KAAlC1N,KAAK6K,SAAW0B,EAAI1B,WACvBmF,EAAMhQ,KAAKqR,MAAMwL,OAAOtQ,EAAI8E,MAAOoL,GAEtB,QAATA,IACF/O,EAAMsC,EAAItC,IAAI2D,MACVyL,GAA6B,IAAjBpP,EAAI7C,UAClB6C,EAAI2E,KAAK9F,IAIN,CACLvL,IAAKgP,EAAIhP,IACT0M,IAAKA,IAOLnB,EAAIhK,OAASvC,KAAKuC,QAAUvC,KAAK4M,IAAIL,GAAO,EACvC,CACLvL,IAAK,IAAIlC,EAAG,GACZ4O,IAAK1N,MAKU,IAAfuM,EAAIhK,OACO,QAATka,EACK,CACLzb,IAAKhB,KAAK+c,KAAKxQ,EAAIzB,MAAM,IACzB4C,IAAK,MAII,QAAT+O,EACK,CACLzb,IAAK,KACL0M,IAAK,IAAI5O,EAAGkB,KAAK+O,MAAMxC,EAAIzB,MAAM,MAI9B,CACL9J,IAAKhB,KAAK+c,KAAKxQ,EAAIzB,MAAM,IACzB4C,IAAK,IAAI5O,EAAGkB,KAAK+O,MAAMxC,EAAIzB,MAAM,MAI9B9K,KAAKwc,SAASjQ,EAAKkQ,GAlF1B,IAAIzb,EAAK0M,EAAKsC,CAmFf,EAGDlR,EAAG2E,UAAUzC,IAAM,SAAcuL,GAC/B,OAAOvM,KAAK6c,OAAOtQ,EAAK,OAAO,GAAOvL,GACvC,EAGDlC,EAAG2E,UAAUiK,IAAM,SAAcnB,GAC/B,OAAOvM,KAAK6c,OAAOtQ,EAAK,OAAO,GAAOmB,GACvC,EAED5O,EAAG2E,UAAUtC,KAAO,SAAeoL,GACjC,OAAOvM,KAAK6c,OAAOtQ,EAAK,OAAO,GAAMmB,GACtC,EAGD5O,EAAG2E,UAAUuZ,SAAW,SAAmBzQ,GACzC,IAAI0Q,EAAKjd,KAAK6c,OAAOtQ,GAGrB,GAAI0Q,EAAGvP,IAAI5M,SAAU,OAAOmc,EAAGjc,IAE/B,IAAI0M,EAA0B,IAApBuP,EAAGjc,IAAI6J,SAAiBoS,EAAGvP,IAAI2E,KAAK9F,GAAO0Q,EAAGvP,IAEpDwP,EAAO3Q,EAAI0P,MAAM,GACjBkB,EAAK5Q,EAAI6Q,MAAM,GACfxQ,EAAMc,EAAId,IAAIsQ,GAGlB,OAAItQ,EAAM,GAAa,IAAPuQ,GAAoB,IAARvQ,EAAmBqQ,EAAGjc,IAGvB,IAApBic,EAAGjc,IAAI6J,SAAiBoS,EAAGjc,IAAImb,MAAM,GAAKc,EAAGjc,IAAIiQ,MAAM,EAC/D,EAEDnS,EAAG2E,UAAUsL,MAAQ,SAAgBxC,GACnC,IAAIuO,EAAWvO,EAAM,EACjBuO,IAAUvO,GAAOA,GAErBtC,EAAOsC,GAAO,UAId,IAHA,IAAI2M,GAAK,GAAK,IAAM3M,EAEhB8Q,EAAM,EACDtZ,EAAI/D,KAAKuC,OAAS,EAAGwB,GAAK,EAAGA,IACpCsZ,GAAOnE,EAAImE,GAAuB,EAAhBrd,KAAK8K,MAAM/G,KAAWwI,EAG1C,OAAOuO,GAAYuC,EAAMA,CAC1B,EAGDve,EAAG2E,UAAU6Z,KAAO,SAAe/Q,GACjC,OAAOvM,KAAK+O,MAAMxC,EACnB,EAGDzN,EAAG2E,UAAUuL,MAAQ,SAAgBzC,GACnC,IAAIuO,EAAWvO,EAAM,EACjBuO,IAAUvO,GAAOA,GAErBtC,EAAOsC,GAAO,UAGd,IADA,IAAIqC,EAAQ,EACH7K,EAAI/D,KAAKuC,OAAS,EAAGwB,GAAK,EAAGA,IAAK,CACzC,IAAIsJ,GAAqB,EAAhBrN,KAAK8K,MAAM/G,IAAkB,SAAR6K,EAC9B5O,KAAK8K,MAAM/G,GAAMsJ,EAAId,EAAO,EAC5BqC,EAAQvB,EAAId,CACb,CAGD,OADAvM,KAAKsN,SACEwN,EAAW9a,KAAKoR,OAASpR,IACjC,EAEDlB,EAAG2E,UAAUsZ,KAAO,SAAexQ,GACjC,OAAOvM,KAAKgO,QAAQgB,MAAMzC,EAC3B,EAEDzN,EAAG2E,UAAU8Z,KAAO,SAAerE,GACjCjP,EAAsB,IAAfiP,EAAErO,UACTZ,GAAQiP,EAAEpY,UAEV,IAAI+W,EAAI7X,KACJ8X,EAAIoB,EAAElL,QAGR6J,EADiB,IAAfA,EAAEhN,SACAgN,EAAE1W,KAAK+X,GAEPrB,EAAE7J,QAaR,IATA,IAAIwP,EAAI,IAAI1e,EAAG,GACX2e,EAAI,IAAI3e,EAAG,GAGX4e,EAAI,IAAI5e,EAAG,GACX6e,EAAI,IAAI7e,EAAG,GAEX8e,EAAI,EAED/F,EAAEgG,UAAY/F,EAAE+F,UACrBhG,EAAE4D,OAAO,GACT3D,EAAE2D,OAAO,KACPmC,EAMJ,IAHA,IAAIE,EAAKhG,EAAE9J,QACP+P,EAAKlG,EAAE7J,SAEH6J,EAAE/W,UAAU,CAClB,IAAK,IAAIiD,EAAI,EAAGia,EAAK,EAAyB,KAArBnG,EAAE/M,MAAM,GAAKkT,IAAaja,EAAI,KAAMA,EAAGia,IAAO,GACvE,GAAIja,EAAI,EAEN,IADA8T,EAAE4D,OAAO1X,GACFA,KAAM,IACPyZ,EAAES,SAAWR,EAAEQ,WACjBT,EAAEpL,KAAK0L,GACPL,EAAEpL,KAAK0L,IAGTP,EAAE/B,OAAO,GACTgC,EAAEhC,OAAO,GAIb,IAAK,IAAIrO,EAAI,EAAG8Q,EAAK,EAAyB,KAArBpG,EAAEhN,MAAM,GAAKoT,IAAa9Q,EAAI,KAAMA,EAAG8Q,IAAO,GACvE,GAAI9Q,EAAI,EAEN,IADA0K,EAAE2D,OAAOrO,GACFA,KAAM,IACPsQ,EAAEO,SAAWN,EAAEM,WACjBP,EAAEtL,KAAK0L,GACPH,EAAEtL,KAAK0L,IAGTL,EAAEjC,OAAO,GACTkC,EAAElC,OAAO,GAIT5D,EAAEjL,IAAIkL,IAAM,GACdD,EAAExF,KAAKyF,GACP0F,EAAEnL,KAAKqL,GACPD,EAAEpL,KAAKsL,KAEP7F,EAAEzF,KAAKwF,GACP6F,EAAErL,KAAKmL,GACPG,EAAEtL,KAAKoL,GAEV,CAED,MAAO,CACLlO,EAAGmO,EACHzR,EAAG0R,EACHQ,IAAKrG,EAAEsD,OAAOwC,GAEjB,EAKD9e,EAAG2E,UAAU2a,OAAS,SAAiBlF,GACrCjP,EAAsB,IAAfiP,EAAErO,UACTZ,GAAQiP,EAAEpY,UAEV,IAAIyO,EAAIvP,KACJiM,EAAIiN,EAAElL,QAGRuB,EADiB,IAAfA,EAAE1E,SACA0E,EAAEpO,KAAK+X,GAEP3J,EAAEvB,QAQR,IALA,IAuCIgC,EAvCAqO,EAAK,IAAIvf,EAAG,GACZwf,EAAK,IAAIxf,EAAG,GAEZyf,EAAQtS,EAAE+B,QAEPuB,EAAEiP,KAAK,GAAK,GAAKvS,EAAEuS,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIza,EAAI,EAAGia,EAAK,EAAyB,KAArBzO,EAAEzE,MAAM,GAAKkT,IAAaja,EAAI,KAAMA,EAAGia,IAAO,GACvE,GAAIja,EAAI,EAEN,IADAwL,EAAEkM,OAAO1X,GACFA,KAAM,GACPsa,EAAGJ,SACLI,EAAGjM,KAAKmM,GAGVF,EAAG5C,OAAO,GAId,IAAK,IAAIrO,EAAI,EAAG8Q,EAAK,EAAyB,KAArBjS,EAAEnB,MAAM,GAAKoT,IAAa9Q,EAAI,KAAMA,EAAG8Q,IAAO,GACvE,GAAI9Q,EAAI,EAEN,IADAnB,EAAEwP,OAAOrO,GACFA,KAAM,GACPkR,EAAGL,SACLK,EAAGlM,KAAKmM,GAGVD,EAAG7C,OAAO,GAIVlM,EAAE3C,IAAIX,IAAM,GACdsD,EAAE8C,KAAKpG,GACPoS,EAAGhM,KAAKiM,KAERrS,EAAEoG,KAAK9C,GACP+O,EAAGjM,KAAKgM,GAEX,CAaD,OATErO,EADgB,IAAdT,EAAEiP,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBxO,EAAIoC,KAAK8G,GAGJlJ,CACR,EAEDlR,EAAG2E,UAAU0a,IAAM,SAAc5R,GAC/B,GAAIvM,KAAKc,SAAU,OAAOyL,EAAIwE,MAC9B,GAAIxE,EAAIzL,SAAU,OAAOd,KAAK+Q,MAE9B,IAAIxB,EAAIvP,KAAKgO,QACT/B,EAAIM,EAAIyB,QACZuB,EAAE1E,SAAW,EACboB,EAAEpB,SAAW,EAGb,IAAK,IAAIwF,EAAQ,EAAGd,EAAEsO,UAAY5R,EAAE4R,SAAUxN,IAC5Cd,EAAEkM,OAAO,GACTxP,EAAEwP,OAAO,GAGX,OAAG,CACD,KAAOlM,EAAEsO,UACPtO,EAAEkM,OAAO,GAEX,KAAOxP,EAAE4R,UACP5R,EAAEwP,OAAO,GAGX,IAAI7P,EAAI2D,EAAE3C,IAAIX,GACd,GAAIL,EAAI,EAAG,CAET,IAAI6E,EAAIlB,EACRA,EAAItD,EACJA,EAAIwE,CACL,MAAM,GAAU,IAAN7E,GAAyB,IAAdK,EAAEuS,KAAK,GAC3B,MAGFjP,EAAE8C,KAAKpG,EACR,CAED,OAAOA,EAAEmP,OAAO/K,EACjB,EAGDvR,EAAG2E,UAAUgb,KAAO,SAAelS,GACjC,OAAOvM,KAAKud,KAAKhR,GAAKgD,EAAEpO,KAAKoL,EAC9B,EAEDzN,EAAG2E,UAAUoa,OAAS,WACpB,OAA+B,KAAP,EAAhB7d,KAAK8K,MAAM,GACpB,EAEDhM,EAAG2E,UAAUwa,MAAQ,WACnB,OAA+B,KAAP,EAAhBje,KAAK8K,MAAM,GACpB,EAGDhM,EAAG2E,UAAU2Z,MAAQ,SAAgB7Q,GACnC,OAAOvM,KAAK8K,MAAM,GAAKyB,CACxB,EAGDzN,EAAG2E,UAAUib,MAAQ,SAAgBxM,GACnCjI,EAAsB,kBAARiI,GACd,IAAItG,EAAIsG,EAAM,GACV0G,GAAK1G,EAAMtG,GAAK,GAChBuP,EAAI,GAAKvP,EAGb,GAAI5L,KAAKuC,QAAUqW,EAGjB,OAFA5Y,KAAKiO,QAAQ2K,EAAI,GACjB5Y,KAAK8K,MAAM8N,IAAMuC,EACVnb,KAKT,IADA,IAAI4O,EAAQuM,EACHpX,EAAI6U,EAAa,IAAVhK,GAAe7K,EAAI/D,KAAKuC,OAAQwB,IAAK,CACnD,IAAIsJ,EAAoB,EAAhBrN,KAAK8K,MAAM/G,GAEnB6K,GADAvB,GAAKuB,KACS,GACdvB,GAAK,SACLrN,KAAK8K,MAAM/G,GAAKsJ,CACjB,CAKD,OAJc,IAAVuB,IACF5O,KAAK8K,MAAM/G,GAAK6K,EAChB5O,KAAKuC,UAEAvC,IACR,EAEDlB,EAAG2E,UAAU3C,OAAS,WACpB,OAAuB,IAAhBd,KAAKuC,QAAkC,IAAlBvC,KAAK8K,MAAM,EACxC,EAEDhM,EAAG2E,UAAU+a,KAAO,SAAejS,GACjC,IAOIyD,EAPAnF,EAAW0B,EAAM,EAErB,GAAsB,IAAlBvM,KAAK6K,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB7K,KAAK6K,UAAkBA,EAAU,OAAO,EAK5C,GAHA7K,KAAKsN,SAGDtN,KAAKuC,OAAS,EAChByN,EAAM,MACD,CACDnF,IACF0B,GAAOA,GAGTtC,EAAOsC,GAAO,SAAW,qBAEzB,IAAIc,EAAoB,EAAhBrN,KAAK8K,MAAM,GACnBkF,EAAM3C,IAAMd,EAAM,EAAIc,EAAId,GAAO,EAAI,CACtC,CACD,OAAsB,IAAlBvM,KAAK6K,SAA8B,GAANmF,EAC1BA,CACR,EAMDlR,EAAG2E,UAAUmJ,IAAM,SAAcL,GAC/B,GAAsB,IAAlBvM,KAAK6K,UAAmC,IAAjB0B,EAAI1B,SAAgB,OAAQ,EACvD,GAAsB,IAAlB7K,KAAK6K,UAAmC,IAAjB0B,EAAI1B,SAAgB,OAAO,EAEtD,IAAImF,EAAMhQ,KAAK2e,KAAKpS,GACpB,OAAsB,IAAlBvM,KAAK6K,SAA8B,GAANmF,EAC1BA,CACR,EAGDlR,EAAG2E,UAAUkb,KAAO,SAAepS,GAEjC,GAAIvM,KAAKuC,OAASgK,EAAIhK,OAAQ,OAAO,EACrC,GAAIvC,KAAKuC,OAASgK,EAAIhK,OAAQ,OAAQ,EAGtC,IADA,IAAIyN,EAAM,EACDjM,EAAI/D,KAAKuC,OAAS,EAAGwB,GAAK,EAAGA,IAAK,CACzC,IAAIwL,EAAoB,EAAhBvP,KAAK8K,MAAM/G,GACfkI,EAAmB,EAAfM,EAAIzB,MAAM/G,GAElB,GAAIwL,IAAMtD,EAAV,CACIsD,EAAItD,EACN+D,GAAO,EACET,EAAItD,IACb+D,EAAM,GAER,KANqB,CAOtB,CACD,OAAOA,CACR,EAEDlR,EAAG2E,UAAUmb,IAAM,SAAcrS,GAC/B,OAA0B,IAAnBvM,KAAKwe,KAAKjS,EAClB,EAEDzN,EAAG2E,UAAU1B,GAAK,SAAawK,GAC7B,OAAyB,IAAlBvM,KAAK4M,IAAIL,EACjB,EAEDzN,EAAG2E,UAAUob,KAAO,SAAetS,GACjC,OAAOvM,KAAKwe,KAAKjS,IAAQ,CAC1B,EAEDzN,EAAG2E,UAAUzB,IAAM,SAAcuK,GAC/B,OAAOvM,KAAK4M,IAAIL,IAAQ,CACzB,EAEDzN,EAAG2E,UAAUqb,IAAM,SAAcvS,GAC/B,OAA2B,IAApBvM,KAAKwe,KAAKjS,EAClB,EAEDzN,EAAG2E,UAAU5B,GAAK,SAAa0K,GAC7B,OAA0B,IAAnBvM,KAAK4M,IAAIL,EACjB,EAEDzN,EAAG2E,UAAUsb,KAAO,SAAexS,GACjC,OAAOvM,KAAKwe,KAAKjS,IAAQ,CAC1B,EAEDzN,EAAG2E,UAAU3B,IAAM,SAAcyK,GAC/B,OAAOvM,KAAK4M,IAAIL,IAAQ,CACzB,EAEDzN,EAAG2E,UAAUub,IAAM,SAAczS,GAC/B,OAA0B,IAAnBvM,KAAKwe,KAAKjS,EAClB,EAEDzN,EAAG2E,UAAU7B,GAAK,SAAa2K,GAC7B,OAAyB,IAAlBvM,KAAK4M,IAAIL,EACjB,EAMDzN,EAAGiM,IAAM,SAAcwB,GACrB,OAAO,IAAI0S,EAAI1S,EAChB,EAEDzN,EAAG2E,UAAUyb,MAAQ,SAAgBC,GAGnC,OAFAlV,GAAQjK,KAAK+K,IAAK,yCAClBd,EAAyB,IAAlBjK,KAAK6K,SAAgB,iCACrBsU,EAAIC,UAAUpf,MAAMqf,UAAUF,EACtC,EAEDrgB,EAAG2E,UAAU6b,QAAU,WAErB,OADArV,EAAOjK,KAAK+K,IAAK,wDACV/K,KAAK+K,IAAIwU,YAAYvf,KAC7B,EAEDlB,EAAG2E,UAAU4b,UAAY,SAAoBF,GAE3C,OADAnf,KAAK+K,IAAMoU,EACJnf,IACR,EAEDlB,EAAG2E,UAAU+b,SAAW,SAAmBL,GAEzC,OADAlV,GAAQjK,KAAK+K,IAAK,yCACX/K,KAAKqf,UAAUF,EACvB,EAEDrgB,EAAG2E,UAAUgc,OAAS,SAAiBlT,GAErC,OADAtC,EAAOjK,KAAK+K,IAAK,sCACV/K,KAAK+K,IAAInK,IAAIZ,KAAMuM,EAC3B,EAEDzN,EAAG2E,UAAUic,QAAU,SAAkBnT,GAEvC,OADAtC,EAAOjK,KAAK+K,IAAK,uCACV/K,KAAK+K,IAAIqH,KAAKpS,KAAMuM,EAC5B,EAEDzN,EAAG2E,UAAUkc,OAAS,SAAiBpT,GAErC,OADAtC,EAAOjK,KAAK+K,IAAK,sCACV/K,KAAK+K,IAAIlK,IAAIb,KAAMuM,EAC3B,EAEDzN,EAAG2E,UAAUmc,QAAU,SAAkBrT,GAEvC,OADAtC,EAAOjK,KAAK+K,IAAK,uCACV/K,KAAK+K,IAAIsH,KAAKrS,KAAMuM,EAC5B,EAEDzN,EAAG2E,UAAUoc,OAAS,SAAiBtT,GAErC,OADAtC,EAAOjK,KAAK+K,IAAK,sCACV/K,KAAK+K,IAAI+U,IAAI9f,KAAMuM,EAC3B,EAEDzN,EAAG2E,UAAUsc,OAAS,SAAiBxT,GAGrC,OAFAtC,EAAOjK,KAAK+K,IAAK,sCACjB/K,KAAK+K,IAAIiV,SAAShgB,KAAMuM,GACjBvM,KAAK+K,IAAI9J,IAAIjB,KAAMuM,EAC3B,EAEDzN,EAAG2E,UAAUwc,QAAU,SAAkB1T,GAGvC,OAFAtC,EAAOjK,KAAK+K,IAAK,sCACjB/K,KAAK+K,IAAIiV,SAAShgB,KAAMuM,GACjBvM,KAAK+K,IAAIuL,KAAKtW,KAAMuM,EAC5B,EAEDzN,EAAG2E,UAAUyc,OAAS,WAGpB,OAFAjW,EAAOjK,KAAK+K,IAAK,sCACjB/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAIiQ,IAAIhb,KACrB,EAEDlB,EAAG2E,UAAU2c,QAAU,WAGrB,OAFAnW,EAAOjK,KAAK+K,IAAK,uCACjB/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAIkQ,KAAKjb,KACtB,EAGDlB,EAAG2E,UAAU4c,QAAU,WAGrB,OAFApW,EAAOjK,KAAK+K,IAAK,uCACjB/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAIuV,KAAKtgB,KACtB,EAEDlB,EAAG2E,UAAU8c,QAAU,WAGrB,OAFAtW,EAAOjK,KAAK+K,IAAK,uCACjB/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAI0T,KAAKze,KACtB,EAGDlB,EAAG2E,UAAU+c,OAAS,WAGpB,OAFAvW,EAAOjK,KAAK+K,IAAK,sCACjB/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAIsG,IAAIrR,KACrB,EAEDlB,EAAG2E,UAAUgd,OAAS,SAAiBlU,GAGrC,OAFAtC,EAAOjK,KAAK+K,MAAQwB,EAAIxB,IAAK,qBAC7B/K,KAAK+K,IAAIoV,SAASngB,MACXA,KAAK+K,IAAI3J,IAAIpB,KAAMuM,EAC3B,EAGD,IAAImU,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ9X,EAAMiQ,GAErBlZ,KAAKiJ,KAAOA,EACZjJ,KAAKkZ,EAAI,IAAIpa,EAAGoa,EAAG,IACnBlZ,KAAK2Z,EAAI3Z,KAAKkZ,EAAEvI,YAChB3Q,KAAKyP,EAAI,IAAI3Q,EAAG,GAAGsc,OAAOpb,KAAK2Z,GAAGtH,KAAKrS,KAAKkZ,GAE5ClZ,KAAKghB,IAAMhhB,KAAKihB,MACjB,CAgDD,SAASC,IACPH,EAAOrd,KACL1D,KACA,OACA,0EACH,CA8DD,SAASmhB,IACPJ,EAAOrd,KACL1D,KACA,OACA,iEACH,CAGD,SAASohB,IACPL,EAAOrd,KACL1D,KACA,OACA,wDACH,CAGD,SAASqhB,IAEPN,EAAOrd,KACL1D,KACA,QACA,sEACH,CA6CD,SAASif,EAAKrF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI0H,EAAQxiB,EAAGyiB,OAAO3H,GACtB5Z,KAAK4Z,EAAI0H,EAAMpI,EACflZ,KAAKshB,MAAQA,CACd,MACCrX,EAAO2P,EAAEgF,IAAI,GAAI,kCACjB5e,KAAK4Z,EAAIA,EACT5Z,KAAKshB,MAAQ,IAEhB,CAkOD,SAASE,EAAM5H,GACbqF,EAAIvb,KAAK1D,KAAM4Z,GAEf5Z,KAAKqQ,MAAQrQ,KAAK4Z,EAAEjJ,YAChB3Q,KAAKqQ,MAAQ,KAAO,IACtBrQ,KAAKqQ,OAAS,GAAMrQ,KAAKqQ,MAAQ,IAGnCrQ,KAAK4L,EAAI,IAAI9M,EAAG,GAAGsc,OAAOpb,KAAKqQ,OAC/BrQ,KAAKmd,GAAKnd,KAAKyhB,KAAKzhB,KAAK4L,EAAEoP,OAC3Bhb,KAAK0hB,KAAO1hB,KAAK4L,EAAEwS,OAAOpe,KAAK4Z,GAE/B5Z,KAAK2hB,KAAO3hB,KAAK0hB,KAAKzgB,IAAIjB,KAAK4L,GAAGuQ,MAAM,GAAGnb,IAAIhB,KAAK4Z,GACpD5Z,KAAK2hB,KAAO3hB,KAAK2hB,KAAKxgB,KAAKnB,KAAK4L,GAChC5L,KAAK2hB,KAAO3hB,KAAK4L,EAAE/K,IAAIb,KAAK2hB,KAC7B,CA/aDZ,EAAOtd,UAAUwd,KAAO,WACtB,IAAID,EAAM,IAAIliB,EAAG,MAEjB,OADAkiB,EAAIlW,MAAQ,IAAItH,MAAM8B,KAAK6H,KAAKnN,KAAK2Z,EAAI,KAClCqH,CACR,EAEDD,EAAOtd,UAAUme,QAAU,SAAkBrV,GAG3C,IACIsV,EADAjW,EAAIW,EAGR,GACEvM,KAAK8hB,MAAMlW,EAAG5L,KAAKghB,KAGnBa,GADAjW,GADAA,EAAI5L,KAAK+hB,MAAMnW,IACTwG,KAAKpS,KAAKghB,MACPrQ,kBACFkR,EAAO7hB,KAAK2Z,GAErB,IAAI/M,EAAMiV,EAAO7hB,KAAK2Z,GAAK,EAAI/N,EAAE+S,KAAK3e,KAAKkZ,GAgB3C,OAfY,IAARtM,GACFhB,EAAEd,MAAM,GAAK,EACbc,EAAErJ,OAAS,GACFqK,EAAM,EACfhB,EAAEyG,KAAKrS,KAAKkZ,QAEI8I,IAAZpW,EAAEqW,MAEJrW,EAAEqW,QAGFrW,EAAE0B,SAIC1B,CACR,EAEDmV,EAAOtd,UAAUqe,MAAQ,SAAgBI,EAAOvT,GAC9CuT,EAAMzG,OAAOzb,KAAK2Z,EAAG,EAAGhL,EACzB,EAEDoS,EAAOtd,UAAUse,MAAQ,SAAgBxV,GACvC,OAAOA,EAAI+J,KAAKtW,KAAKyP,EACtB,EAQDrF,EAAS8W,EAAMH,GAEfG,EAAKzd,UAAUqe,MAAQ,SAAgBI,EAAOC,GAK5C,IAHA,IAAItG,EAAO,QAEPuG,EAAS9c,KAAK6G,IAAI+V,EAAM3f,OAAQ,GAC3BwB,EAAI,EAAGA,EAAIqe,EAAQre,IAC1Boe,EAAOrX,MAAM/G,GAAKme,EAAMpX,MAAM/G,GAIhC,GAFAoe,EAAO5f,OAAS6f,EAEZF,EAAM3f,QAAU,EAGlB,OAFA2f,EAAMpX,MAAM,GAAK,OACjBoX,EAAM3f,OAAS,GAKjB,IAAI8f,EAAOH,EAAMpX,MAAM,GAGvB,IAFAqX,EAAOrX,MAAMqX,EAAO5f,UAAY8f,EAAOxG,EAElC9X,EAAI,GAAIA,EAAIme,EAAM3f,OAAQwB,IAAK,CAClC,IAAIue,EAAwB,EAAjBJ,EAAMpX,MAAM/G,GACvBme,EAAMpX,MAAM/G,EAAI,KAAQue,EAAOzG,IAAS,EAAMwG,IAAS,GACvDA,EAAOC,CACR,CACDD,KAAU,GACVH,EAAMpX,MAAM/G,EAAI,IAAMse,EACT,IAATA,GAAcH,EAAM3f,OAAS,GAC/B2f,EAAM3f,QAAU,GAEhB2f,EAAM3f,QAAU,CAEnB,EAED2e,EAAKzd,UAAUse,MAAQ,SAAgBxV,GAErCA,EAAIzB,MAAMyB,EAAIhK,QAAU,EACxBgK,EAAIzB,MAAMyB,EAAIhK,OAAS,GAAK,EAC5BgK,EAAIhK,QAAU,EAId,IADA,IAAIiN,EAAK,EACAzL,EAAI,EAAGA,EAAIwI,EAAIhK,OAAQwB,IAAK,CACnC,IAAIsJ,EAAmB,EAAfd,EAAIzB,MAAM/G,GAClByL,GAAU,IAAJnC,EACNd,EAAIzB,MAAM/G,GAAU,SAALyL,EACfA,EAAS,GAAJnC,GAAamC,EAAK,SAAa,EACrC,CASD,OANkC,IAA9BjD,EAAIzB,MAAMyB,EAAIhK,OAAS,KACzBgK,EAAIhK,SAC8B,IAA9BgK,EAAIzB,MAAMyB,EAAIhK,OAAS,IACzBgK,EAAIhK,UAGDgK,CACR,EAQDnC,EAAS+W,EAAMJ,GAQf3W,EAASgX,EAAML,GASf3W,EAASiX,EAAQN,GAEjBM,EAAO5d,UAAUse,MAAQ,SAAgBxV,GAGvC,IADA,IAAIqC,EAAQ,EACH7K,EAAI,EAAGA,EAAIwI,EAAIhK,OAAQwB,IAAK,CACnC,IAAI6M,EAA0B,IAAL,EAAfrE,EAAIzB,MAAM/G,IAAiB6K,EACjCY,EAAU,SAALoB,EACTA,KAAQ,GAERrE,EAAIzB,MAAM/G,GAAKyL,EACfZ,EAAQgC,CACT,CAID,OAHc,IAAVhC,IACFrC,EAAIzB,MAAMyB,EAAIhK,UAAYqM,GAErBrC,CACR,EAGDzN,EAAGyiB,OAAS,SAAgBtY,GAE1B,GAAIyX,EAAOzX,GAAO,OAAOyX,EAAOzX,GAEhC,IAAIqY,EACJ,GAAa,SAATrY,EACFqY,EAAQ,IAAIJ,OACP,GAAa,SAATjY,EACTqY,EAAQ,IAAIH,OACP,GAAa,SAATlY,EACTqY,EAAQ,IAAIF,MACP,IAAa,WAATnY,EAGT,MAAM,IAAIpC,MAAM,iBAAmBoC,GAFnCqY,EAAQ,IAAID,CAGb,CAGD,OAFAX,EAAOzX,GAAQqY,EAERA,CACR,EAiBDrC,EAAIxb,UAAU0c,SAAW,SAAmB5Q,GAC1CtF,EAAsB,IAAfsF,EAAE1E,SAAgB,iCACzBZ,EAAOsF,EAAExE,IAAK,kCACf,EAEDkU,EAAIxb,UAAUuc,SAAW,SAAmBzQ,EAAGtD,GAC7ChC,EAAqC,KAA7BsF,EAAE1E,SAAWoB,EAAEpB,UAAiB,iCACxCZ,EAAOsF,EAAExE,KAAOwE,EAAExE,MAAQkB,EAAElB,IAC1B,kCACH,EAEDkU,EAAIxb,UAAUge,KAAO,SAAelS,GAClC,OAAIvP,KAAKshB,MAActhB,KAAKshB,MAAMM,QAAQrS,GAAG8P,UAAUrf,OAEvDoM,EAAKmD,EAAGA,EAAEpO,KAAKnB,KAAK4Z,GAAGyF,UAAUrf,OAC1BuP,EACR,EAED0P,EAAIxb,UAAU4N,IAAM,SAAc9B,GAChC,OAAIA,EAAEzO,SACGyO,EAAEvB,QAGJhO,KAAK4Z,EAAE/Y,IAAI0O,GAAG8P,UAAUrf,KAChC,EAEDif,EAAIxb,UAAU7C,IAAM,SAAc2O,EAAGtD,GACnCjM,KAAKggB,SAASzQ,EAAGtD,GAEjB,IAAI+D,EAAMT,EAAE3O,IAAIqL,GAIhB,OAHI+D,EAAIpD,IAAI5M,KAAK4Z,IAAM,GACrB5J,EAAIqC,KAAKrS,KAAK4Z,GAET5J,EAAIqP,UAAUrf,KACtB,EAEDif,EAAIxb,UAAU2O,KAAO,SAAe7C,EAAGtD,GACrCjM,KAAKggB,SAASzQ,EAAGtD,GAEjB,IAAI+D,EAAMT,EAAE6C,KAAKnG,GAIjB,OAHI+D,EAAIpD,IAAI5M,KAAK4Z,IAAM,GACrB5J,EAAIqC,KAAKrS,KAAK4Z,GAET5J,CACR,EAEDiP,EAAIxb,UAAU5C,IAAM,SAAc0O,EAAGtD,GACnCjM,KAAKggB,SAASzQ,EAAGtD,GAEjB,IAAI+D,EAAMT,EAAE1O,IAAIoL,GAIhB,OAHI+D,EAAIwO,KAAK,GAAK,GAChBxO,EAAIoC,KAAKpS,KAAK4Z,GAET5J,EAAIqP,UAAUrf,KACtB,EAEDif,EAAIxb,UAAU4O,KAAO,SAAe9C,EAAGtD,GACrCjM,KAAKggB,SAASzQ,EAAGtD,GAEjB,IAAI+D,EAAMT,EAAE8C,KAAKpG,GAIjB,OAHI+D,EAAIwO,KAAK,GAAK,GAChBxO,EAAIoC,KAAKpS,KAAK4Z,GAET5J,CACR,EAEDiP,EAAIxb,UAAUqc,IAAM,SAAcvQ,EAAGhD,GAEnC,OADAvM,KAAKmgB,SAAS5Q,GACPvP,KAAKyhB,KAAKlS,EAAEyM,MAAMzP,GAC1B,EAED0S,EAAIxb,UAAU6S,KAAO,SAAe/G,EAAGtD,GAErC,OADAjM,KAAKggB,SAASzQ,EAAGtD,GACVjM,KAAKyhB,KAAKlS,EAAE+G,KAAKrK,GACzB,EAEDgT,EAAIxb,UAAUxC,IAAM,SAAcsO,EAAGtD,GAEnC,OADAjM,KAAKggB,SAASzQ,EAAGtD,GACVjM,KAAKyhB,KAAKlS,EAAEtO,IAAIgL,GACxB,EAEDgT,EAAIxb,UAAUwX,KAAO,SAAe1L,GAClC,OAAOvP,KAAKsW,KAAK/G,EAAGA,EAAEvB,QACvB,EAEDiR,EAAIxb,UAAUuX,IAAM,SAAczL,GAChC,OAAOvP,KAAKiB,IAAIsO,EAAGA,EACpB,EAED0P,EAAIxb,UAAU6c,KAAO,SAAe/Q,GAClC,GAAIA,EAAEzO,SAAU,OAAOyO,EAAEvB,QAEzB,IAAIuU,EAAOviB,KAAK4Z,EAAEwD,MAAM,GAIxB,GAHAnT,EAAOsY,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAInhB,EAAMpB,KAAK4Z,EAAEhZ,IAAI,IAAI9B,EAAG,IAAI2c,OAAO,GACvC,OAAOzb,KAAKoB,IAAImO,EAAGnO,EACpB,CAOD,IAFA,IAAI+Z,EAAInb,KAAK4Z,EAAEyC,KAAK,GAChBzD,EAAI,GACAuC,EAAEra,UAA2B,IAAfqa,EAAEiC,MAAM,IAC5BxE,IACAuC,EAAEM,OAAO,GAEXxR,GAAQkR,EAAEra,UAEV,IAAI0hB,EAAM,IAAI1jB,EAAG,GAAGogB,MAAMlf,MACtByiB,EAAOD,EAAIhC,SAIXkC,EAAO1iB,KAAK4Z,EAAEyC,KAAK,GAAGZ,OAAO,GAC7BkH,EAAI3iB,KAAK4Z,EAAEjJ,YAGf,IAFAgS,EAAI,IAAI7jB,EAAG,EAAI6jB,EAAIA,GAAGzD,MAAMlf,MAEW,IAAhCA,KAAKoB,IAAIuhB,EAAGD,GAAM9V,IAAI6V,IAC3BE,EAAEjD,QAAQ+C,GAOZ,IAJA,IAAIjX,EAAIxL,KAAKoB,IAAIuhB,EAAGxH,GAChBvP,EAAI5L,KAAKoB,IAAImO,EAAG4L,EAAEiB,KAAK,GAAGX,OAAO,IACjChL,EAAIzQ,KAAKoB,IAAImO,EAAG4L,GAChBvB,EAAIhB,EACc,IAAfnI,EAAE7D,IAAI4V,IAAY,CAEvB,IADA,IAAIxB,EAAMvQ,EACD1M,EAAI,EAAoB,IAAjBid,EAAIpU,IAAI4V,GAAYze,IAClCid,EAAMA,EAAId,SAEZjW,EAAOlG,EAAI6V,GACX,IAAI3N,EAAIjM,KAAKoB,IAAIoK,EAAG,IAAI1M,EAAG,GAAGsc,OAAOxB,EAAI7V,EAAI,IAE7C6H,EAAIA,EAAEmU,OAAO9T,GACbT,EAAIS,EAAEiU,SACNzP,EAAIA,EAAEsP,OAAOvU,GACboO,EAAI7V,CACL,CAED,OAAO6H,CACR,EAEDqT,EAAIxb,UAAUgb,KAAO,SAAelP,GAClC,IAAIqT,EAAMrT,EAAE6O,OAAOpe,KAAK4Z,GACxB,OAAqB,IAAjBgJ,EAAI/X,UACN+X,EAAI/X,SAAW,EACR7K,KAAKyhB,KAAKmB,GAAKpC,UAEfxgB,KAAKyhB,KAAKmB,EAEpB,EAED3D,EAAIxb,UAAUrC,IAAM,SAAcmO,EAAGhD,GACnC,GAAIA,EAAIzL,SAAU,OAAO,IAAIhC,EAAG,GAAGogB,MAAMlf,MACzC,GAAoB,IAAhBuM,EAAIiS,KAAK,GAAU,OAAOjP,EAAEvB,QAEhC,IACI6U,EAAM,IAAIrf,MAAM,IACpBqf,EAAI,GAAK,IAAI/jB,EAAG,GAAGogB,MAAMlf,MACzB6iB,EAAI,GAAKtT,EACT,IAAK,IAAIxL,EAAI,EAAGA,EAAI8e,EAAItgB,OAAQwB,IAC9B8e,EAAI9e,GAAK/D,KAAKiB,IAAI4hB,EAAI9e,EAAI,GAAIwL,GAGhC,IAAIS,EAAM6S,EAAI,GACVC,EAAU,EACVC,EAAa,EACbhX,EAAQQ,EAAIoE,YAAc,GAK9B,IAJc,IAAV5E,IACFA,EAAQ,IAGLhI,EAAIwI,EAAIhK,OAAS,EAAGwB,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI4J,EAAOpB,EAAIzB,MAAM/G,GACZqJ,EAAIrB,EAAQ,EAAGqB,GAAK,EAAGA,IAAK,CACnC,IAAI8E,EAAOvE,GAAQP,EAAK,EACpB4C,IAAQ6S,EAAI,KACd7S,EAAMhQ,KAAKgb,IAAIhL,IAGL,IAARkC,GAAyB,IAAZ4Q,GAKjBA,IAAY,EACZA,GAAW5Q,GA9BE,MA+Bb6Q,GACwC,IAANhf,GAAiB,IAANqJ,KAE7C4C,EAAMhQ,KAAKiB,IAAI+O,EAAK6S,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYhB,CACDhX,EAAQ,EACT,CAED,OAAOiE,CACR,EAEDiP,EAAIxb,UAAU2b,UAAY,SAAoB7S,GAC5C,IAAIX,EAAIW,EAAIpL,KAAKnB,KAAK4Z,GAEtB,OAAOhO,IAAMW,EAAMX,EAAEoC,QAAUpC,CAChC,EAEDqT,EAAIxb,UAAU8b,YAAc,SAAsBhT,GAChD,IAAIyD,EAAMzD,EAAIyB,QAEd,OADAgC,EAAIjF,IAAM,KACHiF,CACR,EAMDlR,EAAGkkB,KAAO,SAAezW,GACvB,OAAO,IAAIiV,EAAKjV,EACjB,EAkBDnC,EAASoX,EAAMvC,GAEfuC,EAAK/d,UAAU2b,UAAY,SAAoB7S,GAC7C,OAAOvM,KAAKyhB,KAAKlV,EAAIyP,MAAMhc,KAAKqQ,OACjC,EAEDmR,EAAK/d,UAAU8b,YAAc,SAAsBhT,GACjD,IAAIX,EAAI5L,KAAKyhB,KAAKlV,EAAItL,IAAIjB,KAAK0hB,OAE/B,OADA9V,EAAEb,IAAM,KACDa,CACR,EAED4V,EAAK/d,UAAU6S,KAAO,SAAe/G,EAAGtD,GACtC,GAAIsD,EAAEzO,UAAYmL,EAAEnL,SAGlB,OAFAyO,EAAEzE,MAAM,GAAK,EACbyE,EAAEhN,OAAS,EACJgN,EAGT,IAAIkB,EAAIlB,EAAE+G,KAAKrK,GACXT,EAAIiF,EAAEhP,MAAMzB,KAAKqQ,OAAOpP,IAAIjB,KAAK2hB,MAAMzF,OAAOlc,KAAKqQ,OAAOpP,IAAIjB,KAAK4Z,GACnEqJ,EAAIxS,EAAE4B,KAAK7G,GAAGiQ,OAAOzb,KAAKqQ,OAC1BL,EAAMiT,EAQV,OANIA,EAAErW,IAAI5M,KAAK4Z,IAAM,EACnB5J,EAAMiT,EAAE5Q,KAAKrS,KAAK4Z,GACTqJ,EAAEzE,KAAK,GAAK,IACrBxO,EAAMiT,EAAE7Q,KAAKpS,KAAK4Z,IAGb5J,EAAIqP,UAAUrf,KACtB,EAEDwhB,EAAK/d,UAAUxC,IAAM,SAAcsO,EAAGtD,GACpC,GAAIsD,EAAEzO,UAAYmL,EAAEnL,SAAU,OAAO,IAAIhC,EAAG,GAAGugB,UAAUrf,MAEzD,IAAIyQ,EAAIlB,EAAEtO,IAAIgL,GACVT,EAAIiF,EAAEhP,MAAMzB,KAAKqQ,OAAOpP,IAAIjB,KAAK2hB,MAAMzF,OAAOlc,KAAKqQ,OAAOpP,IAAIjB,KAAK4Z,GACnEqJ,EAAIxS,EAAE4B,KAAK7G,GAAGiQ,OAAOzb,KAAKqQ,OAC1BL,EAAMiT,EAOV,OANIA,EAAErW,IAAI5M,KAAK4Z,IAAM,EACnB5J,EAAMiT,EAAE5Q,KAAKrS,KAAK4Z,GACTqJ,EAAEzE,KAAK,GAAK,IACrBxO,EAAMiT,EAAE7Q,KAAKpS,KAAK4Z,IAGb5J,EAAIqP,UAAUrf,KACtB,EAEDwhB,EAAK/d,UAAUgb,KAAO,SAAelP,GAGnC,OADUvP,KAAKyhB,KAAKlS,EAAE6O,OAAOpe,KAAK4Z,GAAG3Y,IAAIjB,KAAKmd,KACnCkC,UAAUrf,KACtB,CAz9GH,E,WA09G4CA,K,oCC19G7B,SAASkjB,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,C,mECJA,SAASC,EAAkB5Z,EAAQ6Z,GACjC,IAAK,IAAIxf,EAAI,EAAGA,EAAIwf,EAAMhhB,OAAQwB,IAAK,CACrC,IAAIyf,EAAaD,EAAMxf,GACvByf,EAAWpc,WAAaoc,EAAWpc,aAAc,EACjDoc,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWnc,UAAW,GACjDlH,OAAOgH,eAAeuC,EAAQ8Z,EAAW/gB,IAAK+gB,EAChD,CACF,CAEe,SAASE,EAAaN,EAAaO,EAAYC,GAM5D,OALID,GAAYL,EAAkBF,EAAY3f,UAAWkgB,GACrDC,GAAaN,EAAkBF,EAAaQ,GAChDzjB,OAAOgH,eAAeic,EAAa,YAAa,CAC9C/b,UAAU,IAEL+b,CACT,C","sources":["../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/bn.js/lib/bn.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js"],"sourcesContent":["export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"names":["version","BN","_BN","logger","Logger","_constructorGuard","MAX_SAFE","isBigNumberish","value","BigNumber","isBigNumber","match","isHexString","isBytes","_warnedToStringRadix","constructorGuard","hex","throwError","operation","this","_hex","_isBigNumber","Object","freeze","toBigNumber","toBN","fromTwos","toTwos","from","substring","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","BigInt","e","arguments","length","warn","key","type","toHexString","toHex","throwArgumentError","String","anyValue","hexlify","fault","params","isHexable","addSlice","array","slice","args","Array","prototype","call","Uint8Array","apply","isInteger","constructor","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","push","allowMissingPrefix","hexPad","concat","items","objects","map","item","reduce","accum","offset","object","set","zeroPad","HexCharacters","Math","floor","toLowerCase","hexDataSlice","data","endOffset","hexZeroPad","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","join","fromCharCode","message","_checkNormalize","HEX","defineProperty","enumerable","writable","logLevel","level","console","log","_log","levels","DEBUG","INFO","WARNING","code","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","reason","url","NUMERIC_FAULT","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","b","len","min","move","dest","src","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","_createClass","protoProps","staticProps"],"sourceRoot":""}