{"version":3,"sources":["resources/fonts/SFProDisplay-Bold.woff","resources/fonts/SFProDisplay-Bold.woff2","resources/fonts/SFProDisplay-Medium.woff","resources/fonts/SFProDisplay-Medium.woff2","resources/fonts/SFProText-Medium.woff","resources/fonts/SFProText-Medium.woff2","resources/fonts/SFProText-Regular.woff","resources/fonts/SFProText-Regular.woff2","resources/fonts/Cyberspace-Raceway-Front.woff","resources/fonts/Cyberspace-Raceway-Front.woff2","components/Icons/index.tsx","components/Button/components.tsx","components/Header/components.tsx","components/Modals/NetworkModal/components.tsx","components/Modals/Base/components.tsx","components/Modals/Base/index.tsx","hooks.ts","api/__generated__/operations.ts","contexts/network.tsx","components/Modals/NetworkModal/index.tsx","components/Header/index.tsx","components/Input/components.tsx","pages/HomePage/components.tsx","utils/date.ts","pages/HomePage/RecentBlocks.tsx","pages/HomePage/RecentTransactions.tsx","pages/HomePage/__generated__/operations.ts","pages/HomePage/index.tsx","pages/AddressPage/components.tsx","components/Modals/QRModal/components.tsx","components/Modals/QRModal/index.tsx","components/Table/components.tsx","pages/AddressPage/__generated__/operations.ts","pages/AddressPage/index.tsx","pages/BlockPage/components.tsx","pages/BlockPage/__generated__/operations.ts","pages/BlockPage/index.tsx","pages/TransactionPage/components.tsx","utils.ts","pages/TransactionPage/__generated__/operations.ts","pages/CreateTransactionPage/components.tsx","pages/TransactionPage/index.tsx","utils/address.ts","components/Link/components.tsx","pages/BlockTransactionsPage/components.tsx","pages/BlockTransactionsPage/__generated__/operations.ts","pages/BlockTransactionsPage/index.tsx","pages/CreateTransactionPage/index.tsx","pages/ContractPage/components.tsx","pages/AddressPage/constants.ts","pages/ContractPage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LogoIcon","style","rest","xmlns","viewBox","width","height","id","d","clipPath","fill","stroke","strokeWidth","ArrowIcon","fillRule","ExternalLinkIcon","ExpandIcon","ShrinkIcon","ButtonReset","styled","button","HeaderContainer","header","HeaderContent","div","ContentItem","Logo","LogoLink","Link","NavigationLinksContainer","NavigationLink","a","NetworkSelectorButton","NetworkSelectorIcon","Container","Title","h2","NetworkSelectorCheckbox","isSelected","isHighlighted","NetworkSelectorButtonText","ActiveNetworkIndicator","span","ConfirmNetworkButton","section","Wrapper","Modal","props","children","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","defaultOptions","ChainFragmentDoc","gql","ChainQueryDocument","ChainContext","React","createContext","chains","loading","ChainProvider","baseOptions","options","Apollo","useChainQuery","data","useMemo","chain","Provider","value","NetworkModal","useState","selectedChain","selectChain","contentRef","useRef","activeChain","setActiveChain","highlightedChain","onClose","map","idx","onClick","onNetworkSelect","name","undefined","NavigationLinks","text","link","Header","modal","setModal","useContext","to","navigationItem","href","rel","InputReset","input","Content","InputContainer","Input","SearchIcon","DataContainer","DataItem","DataTitle","DataBox","DataBoxRow","RecentBlockRow","TransactionsDataBoxRow","DataBoxColumn","DataTimestamp","DataLabel","BlockProducerText","BaseLink","ProducerAddress","BlockNumber","TxCount","TxType","TransactionAddress","TransactionRecipientLabel","TransactionRecipientLink","TransactionTypeColumn","TransactionHashColumn","TransactionRecipientsColumn","TransactionRecipientsWrapper","RecentBlockColumn1","RecentBlockColumn2","TransactionRowColumn","dateDiff","date1","date2","seconds","Math","floor","abs","getTime","minutes","hours","days","dateDiffRelative","getTextForRelativeTimeDifference","push","slice","join","RecentBlocks","blocks","Date","now","block","time","producer","transactions","length","BlockTimestamp","difference","RecentTransactions","sortedTransactions","sort","t1","t2","status","transaction","TransactionRow","timestamp","getTextForTimeDifference","isScript","inputs","__typename","owner","outputs","output","HomePageBlockFragmentDoc","HomePageTransactionFragmentDoc","HomePageTransactionsQueryDocument","HomePageBlocksQueryDocument","HomePage","setBlocks","setTransactions","transactionsQuery","useHomePageTransactionsQuery","variables","count","blocksQuery","useHomePageBlocksQuery","error","edges","edge","node","placeholder","HeadlineContainer","HeadlineAddressContainer","HeadlineCoinsContainer","HeadlineAddressHeader","HeadlineAddress","Tooltip","HeadlineAddressButton","CopyButtonIcon","QRButtonIcon","CoinsCounterLabel","CoinsCounter","TokenDropdownContainer","TokenButtonSeparator","TokenButton","isActive","TokenButtonSymbol","TokenButtonAmount","TokenButtonIconContainer","TokenDropdownIcon","TableContainer","TableHeadlineContainer","TableHeadlinerContentItem","TableHeadlineDisclaimer","h3","HeadlineHighlighedDisclaimer","TableWrapper","Table","table","TableHeadRow","tr","TableRow","TableHeadCell","th","TableCell","td","TxHash","TxRecipient","rotated","BoldText","TransactionValue","CoinLink","TableNavigationButtons","TableNavigationButton","TableNavigationNumbersContainer","TableNavigationNumberButton","TableNavigationTextButton","TableNextNavigationTextButton","QRAddress","p","QRCodeContainer","QRModal","address","fgColor","bgColor","TableCounterText","TableHeadlineTitle","bold","AddressPageTransactionFragmentDoc","AddressPageQueryDocument","AddressPage","useParams","copyTooltip","useAddressPageQuery","first","transactionsByOwner","navigator","clipboard","writeText","TransactionsTable","trimAddress","contract","amount","assetId","BlockDataContainer","BlockDataRow","RowKeyColumn","ProducerLink","BlockHash","EtherscanBlockLink","AddressesCount","TransactionsCount","BlockHeightContainer","BlockHeight","BlockNavigationButton","BlockNavigationIcon","rotate","BlockPageBlockFragmentDoc","BlockPageQueryDocument","BlockPage","useBlockPageQuery","BigNumber","from","toString","previousHeight","sub","bl","prevBl","previousBlock","parseInt","TitleTransaction","TransactionDataContainer","TransactionDataRow","RowValueColumn","TransactionStatus","UTXOContainer","DetailsButtonContainer","DetailsButton","UTXOBoxesContainer","UTXOBoxesColumn","UTXOSeparatorColumn","UTXOBoxContainer","UTXOHeadlineContainer","UTXOHeadlineColumn","UTXOHeadlineColumn2","UTXOTitle","UTXOHash","HeadlineText","UTXODetailsContainer","UTXODetailsRow","UTXODetailsKey","UTXODetailsLink","UTXOSeparatorArrow","ScriptsContainer","ScriptTitle","ScriptContainer","ScriptTabsContainer","ScriptTabButton","ScriptTextarea","textarea","ContractTextarea","InputFragmentDoc","OutputFragmentDoc","TransactionPageQueryDocument","WrapText","RowValueLink","UTXODetailsValue","WitnessContainer","WitnessIndex","WitnessIconContainer","WitnessIcon","WitnessAddress","TransactionPage","useTransactionPageQuery","tx","replace","maturity","gasPrice","gasLimit","UTXOComponent","ScriptsComponent","ContractComponent","witnesses","witness","index","readOnly","ScriptComponent","tabs","contents","script","scriptData","selectedTab","setSelectedTab","tabItem","expanded","setExpanded","prevExpanded","UTXOInputBox","UTXOOutputBox","utxoId","predicate","predicateData","witnessIndex","balanceRoot","stateRoot","UTXOOutput","inputIndex","GreenLink","Subtitle","TxHashLink","TxRecipientLink","TxValue","HeadlineTransactionsNumber","BlockTransactionFragmentDoc","BlockTransactionsPageQueryDocument","BlockTransactionsPage","useBlockTransactionsPageQuery","Transactions","CreateTransactionPage","Inputs","inputItem","Outputs","outputItem","title","hash","contractId","CoinDetailsContainer","CoinDetailsRow","KeyLabel","KeyValue","ContractLink","TableTabsContainer","TableTabButton","type","subTransactions","coin","fee","ContractPage","subtransaction","subTransaction","toFixed","TableNavigation","pages","selectedPage","selectPage","disabled","prevPage","pageIdx","process","REACT_APP_GRAPHQL_API_ENDPOINT","PUBLIC_URL","client","ApolloClient","uri","cache","InMemoryCache","watchQuery","fetchPolicy","errorPolicy","query","App","ApolloProvider","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae52e4fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SFProDisplay-Bold.74dd16e8.woff\";","export default __webpack_public_path__ + \"static/media/SFProDisplay-Bold.c431524b.woff2\";","export default __webpack_public_path__ + \"static/media/SFProDisplay-Medium.b9d7b0a9.woff\";","export default __webpack_public_path__ + \"static/media/SFProDisplay-Medium.fc888922.woff2\";","export default __webpack_public_path__ + \"static/media/SFProText-Medium.45838e88.woff\";","export default __webpack_public_path__ + \"static/media/SFProText-Medium.3d4081de.woff2\";","export default __webpack_public_path__ + \"static/media/SFProText-Regular.c488b3ed.woff\";","export default __webpack_public_path__ + \"static/media/SFProText-Regular.a5e9585e.woff2\";","export default __webpack_public_path__ + \"static/media/Cyberspace-Raceway-Front.211aff89.woff\";","export default __webpack_public_path__ + \"static/media/Cyberspace-Raceway-Front.db70322b.woff2\";","export const LogoIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 852 852\"\n      style={{ width: 80, height: 80, ...style }}\n      {...rest}\n    >\n      <defs />\n      <defs>\n        <clipPath id=\"a\">\n          <path d=\"M0 0h852v852H0z\" />\n        </clipPath>\n      </defs>\n      <g data-name=\"Fuel logo\">\n        <g clipPath=\"url(#a)\" data-name=\"logo\">\n          <path\n            fill=\"#58c09b\"\n            d=\"M638.737 321.745a16.735 16.735 0 0115.33 9.607 17.281 17.281 0 01-1.737 18.127L360.261 715.008a19.368 19.368 0 01-6.229 4.684 16.628 16.628 0 01-15.113-.151 17.057 17.057 0 01-9.192-19.623l52.567-201.191-216.294.664a16.735 16.735 0 01-15.33-9.607c-2.758-5.887-2.056-13.38 1.737-18.127L444.708 106.62a16.178 16.178 0 0120.618-4.793c7.47 3.1 11.376 11.442 9.686 19.394l-52.567 201.19z\"\n          />\n          <path\n            fill=\"none\"\n            stroke=\"#58c09b\"\n            strokeWidth=\"9\"\n            d=\"M639.536 328.815c6.585-.071 58.279 27.655 61.04 33.541a17.291 17.291 0 01-1.741 18.129L406.767 746.012a19.366 19.366 0 01-6.23 4.684 16.628 16.628 0 01-15.113-.151c-6.976-3.332-50.131-38.57-47.946-46.751l94.077-152.613H226.679c-6.585.071-71.974-62.843-68.181-67.59q205.349-262.69 293.209-372.414c9.573-11.955 52.922 17.831 60.122 21.654 7.47 3.1 11.376 11.442 9.686 19.394l-52.567 201.19z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const SearchIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 19.979 19.979\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <defs />\n      <path\n        fill=\"gray\"\n        fill-rule=\"evenodd\"\n        d=\"M14.032 12.458l5.948 5.948-1.574 1.574-5.948-5.948a7.79 7.79 0 111.574-1.574zm-6.24.9a5.565 5.565 0 10-5.565-5.565 5.565 5.565 0 005.565 5.564z\"\n      />\n    </svg>\n  );\n};\n\nexport const ArrowIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 492.004 492.004\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M382.678 226.804L163.73 7.86C158.666 2.792 151.906 0 144.698 0s-13.968 2.792-19.032 7.86l-16.124 16.12c-10.492 10.504-10.492 27.576 0 38.064L293.398 245.9l-184.06 184.06c-5.064 5.068-7.86 11.824-7.86 19.028 0 7.212 2.796 13.968 7.86 19.04l16.124 16.116c5.068 5.068 11.824 7.86 19.032 7.86s13.968-2.792 19.032-7.86L382.678 265c5.076-5.084 7.864-11.872 7.848-19.088.016-7.244-2.772-14.028-7.848-19.108z\"\n      />\n    </svg>\n  );\n};\n\nexport const CopyIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 488.3 488.3\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M314.25 85.4h-227c-21.3 0-38.6 17.3-38.6 38.6v325.7c0 21.3 17.3 38.6 38.6 38.6h227c21.3 0 38.6-17.3 38.6-38.6V124c-.1-21.3-17.4-38.6-38.6-38.6zm11.5 364.2c0 6.4-5.2 11.6-11.6 11.6h-227c-6.4 0-11.6-5.2-11.6-11.6V124c0-6.4 5.2-11.6 11.6-11.6h227c6.4 0 11.6 5.2 11.6 11.6v325.6z\"\n      />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M401.05 0h-227c-21.3 0-38.6 17.3-38.6 38.6 0 7.5 6 13.5 13.5 13.5s13.5-6 13.5-13.5c0-6.4 5.2-11.6 11.6-11.6h227c6.4 0 11.6 5.2 11.6 11.6v325.7c0 6.4-5.2 11.6-11.6 11.6-7.5 0-13.5 6-13.5 13.5s6 13.5 13.5 13.5c21.3 0 38.6-17.3 38.6-38.6V38.6c0-21.3-17.3-38.6-38.6-38.6z\"\n      />\n    </svg>\n  );\n};\n\nexport const QRIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 401.994 401.994\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M0 401.991h182.724V219.265H0v182.726zm36.542-146.178h109.636v109.352H36.542V255.813z\"\n      />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M73.089 292.355h36.544v36.549H73.089zM292.352 365.449h36.553v36.545h-36.553zM365.442 365.449h36.552v36.545h-36.552z\"\n      />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M365.446 255.813h-36.542v-36.548H219.265v182.726h36.548V292.355h36.539v36.549h109.639V219.265h-36.545zM0 182.728h182.724V0H0v182.728zM36.542 36.542h109.636v109.636H36.542V36.542z\"\n      />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M73.089 73.089h36.544v36.547H73.089zM219.265 0v182.728h182.729V0H219.265zm146.181 146.178H255.813V36.542h109.633v109.636z\"\n      />\n      <path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M292.352 73.089h36.553v36.547h-36.553z\" />\n    </svg>\n  );\n};\n\nexport const PlusIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 426.66667 426.66667\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M405.332031 192H234.667969V21.332031C234.667969 9.558594 225.109375 0 213.332031 0 201.558594 0 192 9.558594 192 21.332031V192H21.332031C9.558594 192 0 201.558594 0 213.332031c0 11.777344 9.558594 21.335938 21.332031 21.335938H192v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938V234.667969h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"\n      />\n    </svg>\n  );\n};\n\nexport const ExternalLinkIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M488.727 0H302.545c-12.853 0-23.273 10.42-23.273 23.273s10.42 23.273 23.273 23.273h129.997L192.999 286.09c-9.087 9.087-9.087 23.823 0 32.912 4.543 4.543 10.499 6.816 16.455 6.816 5.956 0 11.913-2.273 16.455-6.817L465.455 79.458v129.997c0 12.853 10.42 23.273 23.273 23.273s23.273-10.42 23.273-23.273V23.273C512 10.42 501.58 0 488.727 0z\"\n      />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M395.636 232.727c-12.853 0-23.273 10.42-23.273 23.273v209.455H46.545V139.636H256c12.853 0 23.273-10.42 23.273-23.273S268.853 93.091 256 93.091H23.273C10.42 93.091 0 103.511 0 116.364v372.364C0 501.58 10.42 512 23.273 512h372.364c12.853 0 23.273-10.42 23.273-23.273V256c-.001-12.853-10.421-23.273-23.274-23.273z\"\n      />\n    </svg>\n  );\n};\n\nexport const ExpandIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 64 64\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M26.586 34.586L12 49.172V44c0-1.104-.896-2-2-2s-2 .896-2 2v10c0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2s-.896-2-2-2h-5.172l14.586-14.586c.781-.781.781-2.047 0-2.828-.78-.781-2.048-.781-2.828 0zM54 8H44c-1.104 0-2 .896-2 2s.896 2 2 2h5.172L34.586 26.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586s1.023-.195 1.414-.586L52 14.828V20c0 1.104.896 2 2 2s2-.896 2-2V10c0-1.104-.896-2-2-2z\"\n      />\n    </svg>\n  );\n};\n\nexport const ShrinkIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 64 64\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M52.586 8.586L38 23.172V18c0-1.104-.896-2-2-2s-2 .896-2 2v10c0 1.104.896 2 2 2h10c1.104 0 2-.896 2-2s-.896-2-2-2h-5.172l14.586-14.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0zM10 56c.512 0 1.023-.195 1.414-.586L26 40.828V46c0 1.104.896 2 2 2s2-.896 2-2V36c0-1.104-.896-2-2-2H18c-1.104 0-2 .896-2 2s.896 2 2 2h5.172L8.586 52.586c-.781.781-.781 2.047 0 2.828.391.391.902.586 1.414.586z\"\n      />\n    </svg>\n  );\n};\n\nexport const FileIcon = ({ style = {}, ...rest }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      style={{ width: 20, height: 20, ...style }}\n      {...rest}\n    >\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M459.36 100.64l-96-96C360.341 1.645 356.253-.024 352 0H96C69.49 0 48 21.49 48 48v416c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48V112c.025-4.253-1.645-8.34-4.64-11.36zM432 464c0 8.837-7.163 16-16 16H96c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16h240v64c0 17.673 14.327 32 32 32h64v336z\"\n      />\n    </svg>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ButtonReset = styled.button`\n  padding: 0;\n  display: flex;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0);\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n`;\n","import styled from \"styled-components\";\nimport { ArrowIcon, LogoIcon } from \"../Icons\";\nimport { ButtonReset } from \"../Button/components\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderContainer = styled.header``;\n\nexport const HeaderContent = styled.div`\n  padding: 56px 32px 0;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 425px) {\n    padding: 32px 24px 0;\n  }\n`;\n\nexport const ContentItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Logo = styled(LogoIcon)`\n  flex: 0 0 48px;\n  margin: 0 8px 0 0;\n  width: 48px !important;\n  height: 48px !important;\n\n  @media screen and (max-width: 768px) {\n    flex: 0 0 40px;\n    width: 40px !important;\n    height: 40px !important;\n  }\n`;\n\nexport const LogoLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  font-family: Cyberspace-Raceway-Front;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: normal;\n  color: #eefef8;\n\n  @media screen and (max-width: 768px) {\n    font-size: 11px;\n    max-width: 160px;\n  }\n`;\n\nexport const NavigationLinksContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 1000px) {\n    display: none;\n  }\n`;\n\nexport const NavigationLink = styled.a`\n  padding: 4px 10px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  color: #808080;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const NetworkSelectorButton = styled(ButtonReset)`\n  margin: 0 16px 0 8px;\n  padding: 8px 12px 8px 16px;\n  font-family: SFProDisplay;\n  font-size: 10px;\n  line-height: 14px;\n  font-weight: 500;\n  color: #081c17;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover,\n  :active {\n    box-shadow: 0 0 6px 0 #58c09b;\n  }\n`;\n\nexport const NetworkSelectorIcon = styled(ArrowIcon)`\n  margin: 0 0 0 8px;\n  width: 8px !important;\n  height: 8px !important;\n  transform: rotate(90deg);\n`;\n","import styled from \"styled-components\";\nimport { ButtonReset } from \"../../Button/components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 348px;\n  border-radius: 6px;\n  box-shadow: 0 0 25px 0 #58c09b;\n  border: solid 1px #58c09c;\n  background-color: #021d17;\n`;\n\nexport const Title = styled.h2`\n  margin: 20px 0;\n  font-family: SFProDisplay;\n  font-size: 17px;\n  font-weight: 500;\n  text-align: center;\n  color: #f8fefc;\n`;\n\nexport const NetworkSelectorCheckbox = styled.div`\n  width: 24px;\n  height: 24px;\n\n  :hover {\n    border: solid 1px #f9fefc !important;\n  }\n`;\n\nexport const NetworkSelectorButton = styled(ButtonReset)<{\n  isSelected?: boolean;\n  isHighlighted?: boolean;\n}>`\n  width: 100%;\n  padding: 22px 40px 22px 32px;\n  justify-content: space-between;\n  border-bottom: solid 1px #1c2e2a;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #f8fefc;\n\n  :first-of-type {\n    border-top: solid 1px #1c2e2a;\n  }\n\n  :hover ${NetworkSelectorCheckbox} {\n    border: ${({ isSelected }) => (isSelected ? \"solid 1px #f9fefc\" : \"solid 1px #f9fefc\")};\n  }\n\n  ${NetworkSelectorCheckbox} {\n    background-color: ${({ isSelected }) => (isSelected ? \"#58c09b\" : \"none\")};\n    box-shadow: ${({ isHighlighted, isSelected }) =>\n      isHighlighted && isSelected ? \"0 0 3px 0 #58c09b\" : \"none\"};\n    border: ${({ isSelected }) => (isSelected ? \"none\" : \"solid 1px #808080\")};\n  }\n`;\n\nexport const NetworkSelectorButtonText = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ActiveNetworkIndicator = styled.span`\n  margin: 0 0 0 8px;\n  display: block;\n  width: 6px;\n  height: 6px;\n  box-shadow: 0 0 6px 0 #58c09b;\n  background-color: #58c09b;\n  border-radius: 3px;\n`;\n\nexport const ConfirmNetworkButton = styled(ButtonReset)`\n  width: calc(100% - 48px);\n  margin: 24px 24px;\n  padding: 16px 8px;\n  justify-content: center;\n  background-color: #58c09b;\n  font-family: SFProDisplay;\n  font-size: 21px;\n  line-height: 28px;\n  font-weight: 500;\n  color: #fff;\n\n  :hover,\n  :active {\n    box-shadow: 0 0 6px 0 #58c09b;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(9, 28, 23, 0.8);\n  z-index: 50;\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding: 32px;\n  display: flex;\n  justify-content: center;\n`;\n","import { Container, Wrapper } from \"./components\";\nimport * as React from \"react\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport function Modal(props: Props) {\n  return (\n    <Container>\n      <Wrapper>{props.children}</Wrapper>\n    </Container>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref: any, handler: () => void) {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler();\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import type * as Types from \"./types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type ChainQueryVariables = Types.Exact<{ [key: string]: never }>;\n\nexport type ChainQuery = {\n  __typename: \"Query\";\n  chain: { __typename: \"ChainInfo\"; name: string; baseChainHeight: string; peerCount: number };\n};\n\nexport type Chain = {\n  __typename: \"ChainInfo\";\n  name: string;\n  baseChainHeight: string;\n  peerCount: number;\n};\n\nexport const ChainFragmentDoc = gql`\n  fragment Chain on ChainInfo {\n    name\n    baseChainHeight\n    peerCount\n  }\n`;\nexport const ChainQueryDocument = gql`\n  query ChainQuery {\n    chain {\n      ...Chain\n    }\n  }\n  ${ChainFragmentDoc}\n`;\n\n/**\n * __useChainQuery__\n *\n * To run a query within a React component, call `useChainQuery` and pass it any options that fit your needs.\n * When your component renders, `useChainQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useChainQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useChainQuery(\n  baseOptions?: Apollo.QueryHookOptions<ChainQuery, ChainQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ChainQuery, ChainQueryVariables>(ChainQueryDocument, options);\n}\nexport function useChainQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ChainQuery, ChainQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ChainQuery, ChainQueryVariables>(ChainQueryDocument, options);\n}\nexport type ChainQueryHookResult = ReturnType<typeof useChainQuery>;\nexport type ChainQueryLazyQueryHookResult = ReturnType<typeof useChainQueryLazyQuery>;\nexport type ChainQueryQueryResult = Apollo.QueryResult<ChainQuery, ChainQueryVariables>;\n","import { default as React, useMemo } from \"react\";\nimport { Chain, useChainQuery } from \"../api\";\n\nexport const ChainContext = React.createContext<{\n  chains: Chain[];\n  loading: boolean;\n}>({\n  chains: [],\n  loading: false,\n});\n\nexport const ChainProvider: React.FC = ({ children }) => {\n  const { data, loading } = useChainQuery();\n  const chains = useMemo<Chain[]>(() => {\n    return data?.chain ? [data.chain] : [];\n  }, [data]);\n\n  return (\n    <ChainContext.Provider\n      value={{\n        chains,\n        loading,\n      }}\n    >\n      {children}\n    </ChainContext.Provider>\n  );\n};\n","import {\n  Title,\n  Container,\n  NetworkSelectorButton,\n  NetworkSelectorCheckbox,\n  NetworkSelectorButtonText,\n  ActiveNetworkIndicator,\n  ConfirmNetworkButton,\n} from \"./components\";\nimport * as React from \"react\";\nimport { Modal } from \"../Base\";\nimport { useMemo, useRef, useState } from \"react\";\nimport { useOnClickOutside } from \"../../../hooks\";\nimport { ChainContext } from \"../../../contexts/network\";\nimport { Chain } from \"../../../api\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nexport function NetworkModal(props: Props) {\n  const [selectedChain, selectChain] = useState<Chain | undefined>();\n  const contentRef = useRef<HTMLDivElement>(null);\n  const { chains } = React.useContext(ChainContext);\n  const [activeChain, setActiveChain] = useState<Chain>(chains?.[0]);\n  const highlightedChain = useMemo(\n    () => selectedChain || activeChain,\n    [activeChain, selectedChain],\n  );\n\n  useOnClickOutside(contentRef, onClickOutside);\n\n  function onNetworkSelect(chain: Chain) {\n    selectChain(chain);\n  }\n\n  function onNetworkSwitch() {\n    if (selectedChain) {\n      setActiveChain(selectedChain);\n      props.onClose();\n    }\n    selectChain(undefined);\n  }\n\n  function onClickOutside() {\n    props.onClose();\n  }\n\n  return (\n    <Modal>\n      <Container ref={contentRef}>\n        <Title>Change Network</Title>\n        {chains.map((chain, idx) => (\n          <NetworkSelectorButton\n            key={idx}\n            onClick={() => {\n              onNetworkSelect(chain);\n            }}\n            isSelected={chain === highlightedChain}\n            isHighlighted={chain === activeChain}\n          >\n            <NetworkSelectorButtonText>\n              {chain.name}\n              {activeChain === chain && <ActiveNetworkIndicator />}\n            </NetworkSelectorButtonText>\n            <NetworkSelectorCheckbox />\n          </NetworkSelectorButton>\n        ))}\n        <ConfirmNetworkButton\n          onClick={() => {\n            onNetworkSwitch();\n          }}\n        >\n          Switch\n        </ConfirmNetworkButton>\n      </Container>\n    </Modal>\n  );\n}\n","import {\n  ContentItem,\n  HeaderContainer,\n  HeaderContent,\n  Logo,\n  LogoLink,\n  NavigationLink,\n  NavigationLinksContainer,\n  NetworkSelectorButton,\n  NetworkSelectorIcon,\n} from \"./components\";\nimport { useContext, useState } from \"react\";\nimport { NetworkModal } from \"../Modals/NetworkModal\";\nimport { ChainContext } from \"../../contexts/network\";\n\nconst NavigationLinks = [\n  {\n    text: \"v1 Docs\",\n    link: \"https://docs.fuel.sh\",\n  },\n  {\n    text: \"GitHub\",\n    link: \"https://github.com/FuelLabs\",\n  },\n  {\n    text: \"Discord\",\n    link: \"https://discord.com/invite/xfpK4Pe\",\n  },\n  {\n    text: \"Twitter\",\n    link: \"https://twitter.com/fuellabs_\",\n  },\n  {\n    text: \"Medium\",\n    link: \"https://fuellabs.medium.com\",\n  },\n  {\n    text: \"Jobs\",\n    link: \"https://jobs.lever.co/fuellabs\",\n  },\n];\n\nexport function Header() {\n  const [modal, setModal] = useState(false);\n  const { chains } = useContext(ChainContext);\n\n  function onClose() {\n    setModal(false);\n  }\n\n  function showModal() {\n    setModal(true);\n  }\n\n  return (\n    <>\n      <HeaderContainer>\n        <HeaderContent>\n          <ContentItem>\n            <LogoLink to=\"/\">\n              <Logo />\n              NETWORK EXPLORER\n            </LogoLink>\n          </ContentItem>\n          <ContentItem>\n            <NetworkSelectorButton onClick={() => showModal()}>\n              {chains?.[0]?.name}\n              <NetworkSelectorIcon />\n            </NetworkSelectorButton>\n            <NavigationLinksContainer>\n              {NavigationLinks.map((navigationItem, idx) => (\n                <NavigationLink\n                  key={idx}\n                  href={navigationItem.link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {navigationItem.text}\n                </NavigationLink>\n              ))}\n            </NavigationLinksContainer>\n          </ContentItem>\n        </HeaderContent>\n      </HeaderContainer>\n      {modal && <NetworkModal onClose={onClose} />}\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const InputReset = styled.input`\n  background-color: rgba(0, 0, 0, 0);\n  border: none;\n  color: #d1d4d7;\n  font-family: SFProDisplay;\n\n  ::placeholder {\n    color: #808080;\n    opacity: 1;\n  }\n`;\n","import styled from \"styled-components\";\nimport { InputReset } from \"../../components/Input/components\";\nimport { SearchIcon as SearchSvg } from \"../../components/Icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px 0;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 700px;\n`;\n\nexport const Input = styled(InputReset)`\n  height: 40px;\n  width: 100%;\n  padding: 0 12px;\n  border: solid 1px #808080;\n  background-color: #192f2b;\n  outline: none;\n  font-size: 18px;\n  font-weight: 500;\n\n  :hover {\n    border: solid 1px #f9fefc;\n  }\n\n  :focus {\n    box-shadow: 0 0 2px 0 #58c09b;\n    border: solid 1px #58c09b;\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 16px;\n  }\n`;\n\nexport const SearchIcon = styled(SearchSvg)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 8px;\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 48px 0;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const DataItem = styled.div`\n  width: 48%;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n\n    :first-of-type {\n      margin: 0 0 32px;\n    }\n  }\n`;\n\nexport const DataTitle = styled.h2`\n  margin: 0 0 16px;\n  font-family: SFProDisplay;\n  font-size: 21px;\n  font-weight: 600;\n  color: #eafff8;\n`;\n\nexport const DataBox = styled.div`\n  border-radius: 12px;\n  border: solid 1px #808080;\n`;\n\nexport const DataBoxRow = styled.div`\n  display: flex;\n  border-bottom: solid 1px #21302d;\n\n  :last-of-type {\n    border-bottom: none;\n  }\n`;\n\nexport const RecentBlockRow = styled(DataBoxRow)`\n  padding: 22px 24px;\n`;\n\nexport const TransactionsDataBoxRow = styled(DataBoxRow)`\n  padding: 22px 24px 22px 0;\n\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n  }\n`;\n\nexport const DataBoxColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DataTimestamp = styled.span`\n  font-family: SFProText;\n  font-size: 10px;\n  font-weight: 500;\n  font-style: normal;\n  color: #808080;\n`;\n\nexport const ProducerRow = styled.div`\n  display: flex;\n`;\n\nexport const DataLabel = styled.span`\n  display: flex;\n  font-family: SFProText;\n  font-size: 15px;\n  line-height: 18px;\n  font-weight: normal;\n  color: #808080;\n  white-space: pre;\n`;\n\nexport const BlockProducerText = styled.span`\n  display: flex;\n  font-family: SFProText;\n  font-size: 15px;\n  line-height: 18px;\n  font-weight: normal;\n  color: #808080;\n  white-space: pre;\n  max-width: 204px;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  line-height: 18px;\n  font-weight: normal;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const ProducerAddress = styled(BaseLink)`\n  display: block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const BlockNumber = styled(Link)`\n  margin: 0 0 2px 0;\n  font-family: SFProText;\n  font-size: 21px;\n  line-height: 24px;\n  font-weight: normal;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TxCount = styled(BaseLink)``;\n\nexport const TxType = styled.span`\n  padding: 2px 8px;\n  margin: 4px 0 0;\n  height: 20px;\n  border-radius: 10px;\n  background-color: #f9fefc;\n  font-family: SFProText;\n  font-size: 13px;\n  line-height: 16px;\n  font-weight: 600;\n  color: #021d17;\n`;\n\nexport const TransactionAddress = styled(Link)`\n  display: block;\n  margin: 0 0 4px;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TransactionRecipientLabel = styled(DataLabel)`\n  font-weight: 500;\n`;\n\nexport const TransactionRecipientLink = styled(BaseLink)`\n  margin: 0 0 2px;\n  font-weight: 500;\n  text-overflow: ellipsis;\n  display: block;\n  overflow: hidden;\n`;\n\nexport const TransactionTypeColumn = styled(DataBoxColumn)`\n  margin: 0 0 0 20px;\n`;\n\nexport const TransactionHashColumn = styled(DataBoxColumn)`\n  max-width: 124px;\n  margin: 0 0 0 20px;\n  overflow: hidden;\n\n  @media screen and (max-width: 1000px) {\n    max-width: 400px;\n  }\n`;\n\nexport const TransactionRecipientsColumn = styled.div`\n  margin: 0 0 0 24px;\n  display: flex;\n  justify-content: space-between;\n  flex-grow: 1;\n  overflow: hidden;\n\n  @media screen and (max-width: 1000px) {\n    margin: 16px 0 0 24px;\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n\nexport const TransactionRecipientsWrapper = styled.div`\n  width: 45%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RecentBlockColumn1 = styled(DataBoxColumn)`\n  flex: 1 1 0;\n  max-width: 124px;\n`;\n\nexport const RecentBlockColumn2 = styled(DataBoxColumn)`\n  flex: 1 1 0;\n  padding: 0 0 0 16px;\n  overflow: hidden;\n`;\n\nexport const TransactionRowColumn = styled.div`\n  display: flex;\n`;\n","type DateDifference = {\n  seconds: number;\n  minutes: number;\n  hours: number;\n  days: number;\n};\n\nexport const dateDiff = (date1: Date, date2: Date): DateDifference => {\n  let seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n\n  // hours = hours - (days * 24);\n  // minutes = minutes - (days * 24 * 60) - (hours * 60);\n  // seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const dateDiffRelative = (date1: Date, date2: Date): DateDifference => {\n  let seconds = Math.floor(Math.abs(date1.getTime() - date2.getTime()) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n\n  hours = hours - days * 24;\n  minutes = minutes - days * 24 * 60 - hours * 60;\n  seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n\n  return { seconds, minutes, hours, days };\n};\n\nexport const getTextForRelativeTimeDifference = (dateDiff: DateDifference) => {\n  let text: string[] = [];\n\n  if (dateDiff.days > 0) text.push(`${dateDiff.days} days`);\n  if (dateDiff.hours > 0) text.push(`${dateDiff.hours} hrs`);\n  if (dateDiff.minutes > 0) text.push(`${dateDiff.minutes} min`);\n  if (dateDiff.seconds > 0) text.push(`${dateDiff.seconds} sec`);\n\n  return text.slice(0, 2).join(\" \") + \" ago\";\n};\n\nexport const getTextForTimeDifference = (dateDiff: DateDifference) => {\n  if (dateDiff.days > 0) return `${dateDiff.hours} hours ago`;\n  if (dateDiff.hours > 0) return `${dateDiff.hours} hours ago`;\n  if (dateDiff.minutes > 0) return `${dateDiff.minutes} minutes ago`;\n  if (dateDiff.seconds > 0) return `${dateDiff.seconds} seconds ago`;\n\n  return \"\";\n};\n","import { default as React, useMemo, useState } from \"react\";\nimport { dateDiff } from \"../../utils/date\";\nimport {\n  BlockNumber,\n  RecentBlockColumn1,\n  RecentBlockColumn2,\n  RecentBlockRow,\n  DataBox,\n  DataItem,\n  DataTimestamp,\n  DataTitle,\n  ProducerAddress,\n  TxCount,\n  BlockProducerText,\n} from \"./components\";\nimport { HomePageBlock } from \"./__generated__/operations\";\n\ntype Props = {\n  blocks: HomePageBlock[];\n};\n\nexport const RecentBlocks: React.FC<Props> = ({ blocks }) => {\n  const [now] = useState(new Date());\n\n  return (\n    <DataItem>\n      <DataTitle>Recent Blocks</DataTitle>\n      <DataBox>\n        {blocks.map((block) => (\n          <RecentBlockRow key={block.id}>\n            <RecentBlockColumn1>\n              <BlockNumber id=\"recent-block-link\" to={`/block/${block.height}`}>\n                {block.height}\n              </BlockNumber>\n              <BlockTimestamp date1={now} date2={new Date(block.time)} />\n            </RecentBlockColumn1>\n            <RecentBlockColumn2>\n              <BlockProducerText>\n                {`Producer: `}\n                <ProducerAddress id=\"recent-block-producer-link\" to={`/address/${block.producer}`}>\n                  {block.producer}\n                </ProducerAddress>\n              </BlockProducerText>\n              <TxCount\n                id=\"recent-block-transactions-link\"\n                to={`/block/${block.height}/transactions`}\n              >{`${block.transactions?.length} Tx's`}</TxCount>\n            </RecentBlockColumn2>\n          </RecentBlockRow>\n        ))}\n      </DataBox>\n    </DataItem>\n  );\n};\n\nconst BlockTimestamp: React.FC<{ date1: Date; date2: Date }> = ({ date1, date2 }) => {\n  const difference = useMemo(() => {\n    return dateDiff(date1, date2);\n  }, [date1, date2]);\n  const text = useMemo(() => {\n    if (difference?.hours > 0) return `${difference.hours} hours ago`;\n    if (difference?.minutes > 0) return `${difference.minutes} minutes ago`;\n    if (difference?.seconds > 0) return `${difference.seconds} seconds ago`;\n  }, [difference]);\n\n  return <DataTimestamp>{text}</DataTimestamp>;\n};\n","import { default as React, useMemo } from \"react\";\nimport { dateDiff, getTextForTimeDifference } from \"../../utils/date\";\nimport {\n  DataTimestamp,\n  DataBox,\n  DataItem,\n  DataTitle,\n  TxType,\n  TransactionAddress,\n  TransactionRecipientLabel,\n  TransactionRecipientLink,\n  TransactionTypeColumn,\n  TransactionHashColumn,\n  TransactionRecipientsColumn,\n  TransactionRecipientsWrapper,\n  TransactionsDataBoxRow,\n  TransactionRowColumn,\n} from \"./components\";\nimport { HomePageTransaction } from \"./__generated__/operations\";\n\ntype Props = {\n  transactions: HomePageTransaction[];\n};\n\nexport const RecentTransactions: React.FC<Props> = ({ transactions }) => {\n  const sortedTransactions = transactions\n    .sort((t1, t2) =>\n      new Date(t1.status!.time).getTime() - new Date(t2.status!.time).getTime() <= 0 ? 1 : -1,\n    )\n    .slice(0, 5);\n\n  return (\n    <DataItem>\n      <DataTitle>Recent Transactions</DataTitle>\n      <DataBox>\n        {sortedTransactions.map((transaction) => (\n          <TransactionRow key={transaction.id} transaction={transaction} />\n        ))}\n      </DataBox>\n    </DataItem>\n  );\n};\n\nconst TransactionRow = ({ transaction }: { transaction: HomePageTransaction }) => {\n  const difference = useMemo(() => {\n    return dateDiff(new Date(), new Date(transaction.status!.time));\n  }, [transaction]);\n  const timestamp = useMemo(() => getTextForTimeDifference(difference), [difference]);\n\n  return (\n    <TransactionsDataBoxRow key={transaction.id}>\n      <TransactionRowColumn>\n        <TransactionTypeColumn>\n          <TxType>{transaction.isScript ? \"Script\" : \"Create\"}</TxType>\n        </TransactionTypeColumn>\n        <TransactionHashColumn>\n          <TransactionAddress id=\"recent-transaction-link\" to={`/transaction/${transaction.id}`}>\n            {transaction.id}\n          </TransactionAddress>\n          <DataTimestamp>{timestamp}</DataTimestamp>\n        </TransactionHashColumn>\n      </TransactionRowColumn>\n      <TransactionRecipientsColumn>\n        <TransactionRecipientsWrapper>\n          <TransactionRecipientLabel>From:</TransactionRecipientLabel>\n          {transaction.inputs.map((input) =>\n            input.__typename === \"InputCoin\" ? (\n              <TransactionRecipientLink to={`/address/${input.owner}`}>\n                {input.owner}\n              </TransactionRecipientLink>\n            ) : (\n              input.__typename\n            ),\n          )}\n        </TransactionRecipientsWrapper>\n        <TransactionRecipientsWrapper>\n          <TransactionRecipientLabel>To:</TransactionRecipientLabel>\n          {transaction.outputs.map((output) =>\n            output.__typename === \"CoinOutput\" ? (\n              <TransactionRecipientLink to={`/address/${output.to}`}>\n                {output.to}\n              </TransactionRecipientLink>\n            ) : (\n              output.__typename\n            ),\n          )}\n        </TransactionRecipientsWrapper>\n      </TransactionRecipientsColumn>\n    </TransactionsDataBoxRow>\n  );\n};\n","import type * as Types from \"../../../api/__generated__/types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type HomePageTransactionsQueryVariables = Types.Exact<{\n  count?: Types.InputMaybe<Types.Scalars[\"Int\"]>;\n}>;\n\nexport type HomePageTransactionsQuery = {\n  __typename: \"Query\";\n  transactions: {\n    __typename: \"TransactionConnection\";\n    edges?: Array<{\n      __typename: \"TransactionEdge\";\n      node: {\n        __typename: \"Transaction\";\n        id: string;\n        inputAssetIds: Array<string>;\n        gasPrice: string;\n        gasLimit: string;\n        maturity: string;\n        isScript: boolean;\n        receiptsRoot?: string | null;\n        witnesses: Array<string>;\n        inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n        outputs: Array<\n          | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n          | {\n              __typename: \"ContractOutput\";\n              inputIndex: number;\n              balanceRoot: string;\n              stateRoot: string;\n            }\n          | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n        >;\n        inputs: Array<\n          | { __typename: \"InputCoin\"; owner: string }\n          | { __typename: \"InputContract\"; contract: { __typename: \"Contract\"; id: string } }\n        >;\n        status?:\n          | { __typename: \"FailureStatus\"; time: string }\n          | { __typename: \"SubmittedStatus\"; time: string }\n          | { __typename: \"SuccessStatus\"; time: string }\n          | null;\n      };\n    } | null> | null;\n  };\n};\n\nexport type HomePageBlocksQueryVariables = Types.Exact<{\n  count?: Types.InputMaybe<Types.Scalars[\"Int\"]>;\n}>;\n\nexport type HomePageBlocksQuery = {\n  __typename: \"Query\";\n  blocks: {\n    __typename: \"BlockConnection\";\n    edges?: Array<{\n      __typename: \"BlockEdge\";\n      cursor: string;\n      node: {\n        __typename: \"Block\";\n        id: string;\n        height: string;\n        time: string;\n        producer: string;\n        transactions: Array<{ __typename: \"Transaction\"; id: string }>;\n      };\n    } | null> | null;\n  };\n};\n\nexport type HomePageBlock = {\n  __typename: \"Block\";\n  id: string;\n  height: string;\n  time: string;\n  producer: string;\n  transactions: Array<{ __typename: \"Transaction\"; id: string }>;\n};\n\nexport type HomePageTransaction = {\n  __typename: \"Transaction\";\n  id: string;\n  inputAssetIds: Array<string>;\n  gasPrice: string;\n  gasLimit: string;\n  maturity: string;\n  isScript: boolean;\n  receiptsRoot?: string | null;\n  witnesses: Array<string>;\n  inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n  outputs: Array<\n    | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n    | { __typename: \"ContractOutput\"; inputIndex: number; balanceRoot: string; stateRoot: string }\n    | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n  >;\n  inputs: Array<\n    | { __typename: \"InputCoin\"; owner: string }\n    | { __typename: \"InputContract\"; contract: { __typename: \"Contract\"; id: string } }\n  >;\n  status?:\n    | { __typename: \"FailureStatus\"; time: string }\n    | { __typename: \"SubmittedStatus\"; time: string }\n    | { __typename: \"SuccessStatus\"; time: string }\n    | null;\n};\n\nexport const HomePageBlockFragmentDoc = gql`\n  fragment HomePageBlock on Block {\n    id\n    height\n    time\n    producer\n    transactions {\n      id\n    }\n  }\n`;\nexport const HomePageTransactionFragmentDoc = gql`\n  fragment HomePageTransaction on Transaction {\n    id\n    inputContracts {\n      id\n    }\n    inputAssetIds\n    gasPrice\n    gasLimit\n    maturity\n    isScript\n    receiptsRoot\n    witnesses\n    outputs {\n      __typename\n      ... on CoinOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractOutput {\n        inputIndex\n        balanceRoot\n        stateRoot\n      }\n      ... on WithdrawalOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ChangeOutput {\n        to\n        amount\n        assetId\n      }\n      ... on VariableOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractCreated {\n        contract {\n          id\n        }\n      }\n    }\n    inputs {\n      __typename\n      ... on InputCoin {\n        owner\n      }\n      ... on InputContract {\n        contract {\n          id\n        }\n      }\n    }\n    status {\n      ... on SubmittedStatus {\n        time\n      }\n      ... on SuccessStatus {\n        time\n      }\n      ... on FailureStatus {\n        time\n      }\n    }\n  }\n`;\nexport const HomePageTransactionsQueryDocument = gql`\n  query HomePageTransactionsQuery($count: Int) {\n    transactions(last: $count) {\n      edges {\n        node {\n          ...HomePageTransaction\n        }\n      }\n    }\n  }\n  ${HomePageTransactionFragmentDoc}\n`;\n\n/**\n * __useHomePageTransactionsQuery__\n *\n * To run a query within a React component, call `useHomePageTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useHomePageTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHomePageTransactionsQuery({\n *   variables: {\n *      count: // value for 'count'\n *   },\n * });\n */\nexport function useHomePageTransactionsQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    HomePageTransactionsQuery,\n    HomePageTransactionsQueryVariables\n  >,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<HomePageTransactionsQuery, HomePageTransactionsQueryVariables>(\n    HomePageTransactionsQueryDocument,\n    options,\n  );\n}\nexport function useHomePageTransactionsQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    HomePageTransactionsQuery,\n    HomePageTransactionsQueryVariables\n  >,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<HomePageTransactionsQuery, HomePageTransactionsQueryVariables>(\n    HomePageTransactionsQueryDocument,\n    options,\n  );\n}\nexport type HomePageTransactionsQueryHookResult = ReturnType<typeof useHomePageTransactionsQuery>;\nexport type HomePageTransactionsQueryLazyQueryHookResult = ReturnType<\n  typeof useHomePageTransactionsQueryLazyQuery\n>;\nexport type HomePageTransactionsQueryQueryResult = Apollo.QueryResult<\n  HomePageTransactionsQuery,\n  HomePageTransactionsQueryVariables\n>;\nexport const HomePageBlocksQueryDocument = gql`\n  query HomePageBlocksQuery($count: Int) {\n    blocks(last: $count) {\n      edges {\n        cursor\n        node {\n          ...HomePageBlock\n        }\n      }\n    }\n  }\n  ${HomePageBlockFragmentDoc}\n`;\n\n/**\n * __useHomePageBlocksQuery__\n *\n * To run a query within a React component, call `useHomePageBlocksQuery` and pass it any options that fit your needs.\n * When your component renders, `useHomePageBlocksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHomePageBlocksQuery({\n *   variables: {\n *      count: // value for 'count'\n *   },\n * });\n */\nexport function useHomePageBlocksQuery(\n  baseOptions?: Apollo.QueryHookOptions<HomePageBlocksQuery, HomePageBlocksQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<HomePageBlocksQuery, HomePageBlocksQueryVariables>(\n    HomePageBlocksQueryDocument,\n    options,\n  );\n}\nexport function useHomePageBlocksQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<HomePageBlocksQuery, HomePageBlocksQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<HomePageBlocksQuery, HomePageBlocksQueryVariables>(\n    HomePageBlocksQueryDocument,\n    options,\n  );\n}\nexport type HomePageBlocksQueryHookResult = ReturnType<typeof useHomePageBlocksQuery>;\nexport type HomePageBlocksQueryLazyQueryHookResult = ReturnType<\n  typeof useHomePageBlocksQueryLazyQuery\n>;\nexport type HomePageBlocksQueryQueryResult = Apollo.QueryResult<\n  HomePageBlocksQuery,\n  HomePageBlocksQueryVariables\n>;\n","import { useEffect, useState } from \"react\";\nimport { Header } from \"../../components/Header\";\nimport { Container, Content, DataContainer, Input, InputContainer, SearchIcon } from \"./components\";\nimport { RecentBlocks } from \"./RecentBlocks\";\nimport { RecentTransactions } from \"./RecentTransactions\";\nimport {\n  HomePageBlock,\n  HomePageTransaction,\n  useHomePageBlocksQuery,\n  useHomePageTransactionsQuery,\n} from \"./__generated__/operations\";\n\nexport function HomePage() {\n  const [blocks, setBlocks] = useState<HomePageBlock[]>([]);\n  const [transactions, setTransactions] = useState<HomePageTransaction[]>([]);\n  const transactionsQuery = useHomePageTransactionsQuery({ variables: { count: 50 } });\n  const blocksQuery = useHomePageBlocksQuery({ variables: { count: 5 } });\n\n  useEffect(() => {\n    if (blocksQuery.loading) return;\n    if (blocksQuery.error) return;\n    const edges: any[] = blocksQuery.data?.blocks?.edges || [];\n    const blocks: HomePageBlock[] = edges.map((edge) => edge.node);\n    setBlocks(blocks);\n  }, [blocksQuery.loading, blocksQuery.error, blocksQuery.data]);\n\n  useEffect(() => {\n    if (transactionsQuery.loading) return;\n    if (transactionsQuery.error) return;\n    const edges: any[] = transactionsQuery.data?.transactions?.edges || [];\n    const transactions: HomePageTransaction[] = edges.map((edge) => edge.node);\n    setTransactions(transactions);\n  }, [transactionsQuery.loading, transactionsQuery.data, transactionsQuery.error]);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <InputContainer>\n            <Input placeholder=\"Search an address, transaction or block\" />\n            <SearchIcon />\n          </InputContainer>\n          <DataContainer>\n            <RecentBlocks blocks={blocks} />\n            <RecentTransactions transactions={transactions} />\n          </DataContainer>\n        </Content>\n      </Container>\n    </>\n  );\n}\n","import styled from \"styled-components\";\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { CopyIcon, PlusIcon, QRIcon, ArrowIcon } from \"../../components/Icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const HeadlineContainer = styled.div`\n  margin: 0 0 52px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  @media screen and (max-width: 425px) {\n    margin: 0 0 40px;\n  }\n`;\n\nexport const HeadlineAddressContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nexport const HeadlineCoinsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  @media screen and (max-width: 1000px) {\n    margin: 16px 0 0;\n    align-items: flex-start;\n  }\n`;\n\nexport const HeadlineAddressHeader = styled.h2`\n  display: flex;\n  align-items: baseline;\n  flex-wrap: wrap;\n  margin: 0;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  white-space: break-spaces;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const HeadlineAddress = styled.span`\n  display: block;\n  margin: 4px 16px 0 0;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 560px) {\n    font-size: 15px;\n    margin: 4px 0 0 0;\n  }\n`;\n\nexport const Tooltip = styled.span`\n  padding: 2px 8px;\n  display: none;\n  position: absolute;\n  top: -28px;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #58c09b;\n  border-radius: 4px;\n  white-space: nowrap;\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nexport const HeadlineAddressButton = styled(ButtonReset)`\n  position: relative;\n  margin: 0 0 0 12px;\n  width: 24px;\n  height: 24px;\n  justify-content: center;\n  background-color: #58c09b;\n  border-radius: 12px;\n  color: #081c17;\n  margin: 8px 16px 0 0;\n\n  :first-of-type {\n  }\n\n  :hover {\n    box-shadow: 0 0 3px 0 #58c09b;\n  }\n\n  :hover ${Tooltip} {\n    display: block;\n  }\n`;\n\nexport const CopyButtonIcon = styled(CopyIcon)`\n  width: 14px !important;\n  height: 14px !important;\n`;\n\nexport const QRButtonIcon = styled(QRIcon)`\n  width: 14px !important;\n  height: 14px !important;\n`;\n\nexport const CoinsCounterLabel = styled.div`\n  margin: 0 0 12px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  border-radius: 13px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 16px;\n  color: #f8fefc;\n`;\n\nexport const CoinsCounter = styled.span`\n  margin: 0 0 0 4px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: SFProText;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 11px;\n  color: #021d17;\n  background-color: #f8fefc;\n  border-radius: 7px;\n`;\n\nexport const TokenDropdownContainer = styled.div`\n  position: relative;\n`;\n\nexport const TokenButtonSeparator = styled.span`\n  width: 1px;\n  height: 36px;\n  background-color: #808080;\n  transition: 0.2s ease-out;\n`;\n\nexport const TokenButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 0;\n  width: 190px;\n  height: 36px;\n  border-radius: 5px;\n  border: solid 1px #808080;\n  background-color: #192f2b;\n  box-shadow: ${({ isActive }) => (isActive ? \"0 0 2px 0 #58c09b\" : \"none\")};\n\n  :hover {\n    border: solid 1px #58c09b;\n  }\n\n  :hover ${TokenButtonSeparator} {\n    background-color: #58c09b;\n  }\n`;\n\nexport const TokenButtonSymbol = styled.span`\n  margin: 0 0 0 14px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: normal;\n  color: #f8fefc;\n`;\n\nexport const TokenButtonAmount = styled.span`\n  margin: 0 14px 0 0;\n  flex: 1 1 0;\n  font-family: SFProDisplay;\n  font-size: 17px;\n  font-weight: 600;\n  color: #f8fefc;\n  text-align: right;\n`;\n\nexport const TokenButtonIconContainer = styled.div`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #f9fefc;\n`;\n\nexport const TokenDropdownIcon = styled(ArrowIcon)`\n  transform: rotate(90deg);\n  width: 12px !important;\n  height: 12px !important;\n`;\n\nexport const TableContainer = styled.div`\n  padding: 8px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.2);\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const TableHeadlineContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  padding: 8px 16px 16px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 12px 16px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableHeadlinerContentItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1 0;\n\n  @media screen and (max-width: 768px) {\n    align-self: stretch;\n  }\n\n  @media screen and (max-width: 560px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableHeadlineTitle = styled.h3`\n  margin: 0 32px 0 0;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 600;\n  color: #f8fefc;\n`;\n\nexport const TableHeadlineDisclaimer = styled.span`\n  margin: 4px 0 0;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n  white-space: nowrap;\n`;\n\nexport const HeadlineHighlighedDisclaimer = styled.span`\n  color: #f8fefc;\n`;\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const TableHeadRow = styled.tr``;\n\nexport const TableRow = styled.tr`\n  td {\n    border-bottom: 1px solid #21302d;\n  }\n\n  :last-of-type td {\n    border: none;\n  }\n`;\n\nexport const TableHeadCell = styled.th`\n  padding: 20px 12px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  line-height: 16px;\n  font-weight: 600;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const TableCell = styled.td`\n  vertical-align: top;\n  padding: 18px 12px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  line-height: 15px;\n  text-align: left;\n  white-space: nowrap;\n  color: #f8fefc;\n`;\n\nconst BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TxHash = styled(BaseLink)`\n  display: block;\n  max-width: 124px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const InputsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const InputsAddresses = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputAddressContainer = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const InputAddressLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  line-height: 18px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const InputsExpandButton = styled(ButtonReset)`\n  justify-content: center;\n  margin: 0 0 0 40px;\n  width: 18px;\n  height: 18px;\n  background-color: #58c09b;\n  border-radius: 9px;\n  color: #081c17;\n\n  :hover {\n    box-shadow: 0 0 3px 0 #58c09b;\n  }\n`;\n\nexport const ExpandIcon = styled(PlusIcon)<{ rotated?: boolean }>`\n  width: 16px !important;\n  height: 16px !important;\n  transform: ${({ rotated }) => (rotated ? \"rotate(45deg)\" : \"rotate(0deg)\")};\n  transition: 0.2s ease-out;\n`;\n\nexport const TxRecipient = styled(BaseLink)`\n  display: block;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const BoldText = styled.span`\n  font-weight: 600;\n`;\n\nexport const TransactionValue = styled.span`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const CoinLink = styled(BaseLink)`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n  max-width: 60px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const TableNavigationButtons = styled.div`\n  margin: 4px 0 0;\n  display: flex;\n  font-family: SFProText;\n  font-size: 11px;\n  line-height: 14px;\n  font-weight: normal;\n  color: #808080;\n\n  @media screen and (max-width: 560px) {\n    margin: 12px 0 0;\n  }\n`;\n\nexport const TableNavigationButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  height: 13px;\n  color: ${({ isSelected }) => (isSelected ? \"#d1d4d7;\" : \"#808080\")};\n  background-color: ${({ isSelected }) => (isSelected ? \"#192f2b;\" : \"rgba(0, 0, 0, 0)\")};\n\n  :hover {\n    color: #d1d4d7;\n  }\n\n  :disabled {\n    color: #192f2b;\n  }\n`;\n\nexport const TableNavigationNumbersContainer = styled.div`\n  display: flex;\n  margin: 0 12px;\n`;\n\nexport const TableNavigationNumberButton = styled(TableNavigationButton)`\n  margin: 0 2px;\n  width: 13px;\n  justify-content: center;\n`;\n\nexport const TableNavigationTextButton = styled(TableNavigationButton)`\n  line-height: 14px;\n  margin: 0 12px;\n\n  @media screen and (max-width: 425px) {\n    :first-of-type {\n      margin: 0 12px 0 0;\n    }\n\n    :last-of-type {\n      margin: 0 0 0 12px;\n    }\n  }\n`;\n\nexport const TableNextNavigationTextButton = styled(TableNavigationTextButton)`\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0 40px 48px;\n  width: 100%;\n  max-width: 432px;\n  border-radius: 6px;\n  box-shadow: 0 0 25px 0 #58c09b;\n  border: solid 1px #58c09c;\n  background-color: #021d17;\n\n  @media screen and (max-width: 425px) {\n    padding: 0 24px 48px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 20px 0;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  text-align: center;\n  color: #f8fefc;\n`;\n\nexport const QRAddress = styled.p`\n  margin: 16px 0 40px;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  text-align: center;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const QRCodeContainer = styled.div`\n  margin: 0 auto;\n  width: fit-content;\n`;\n","import { Title, Container, QRAddress, QRCodeContainer } from \"./components\";\nimport { Modal } from \"../Base\";\nimport { useRef } from \"react\";\nimport { useOnClickOutside } from \"../../../hooks\";\nimport QRCode from \"qrcode.react\";\n\ninterface Props {\n  onClose: () => void;\n  address: string;\n}\n\nexport function QRModal(props: Props) {\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useOnClickOutside(contentRef, onClickOutside);\n\n  function onClickOutside() {\n    props.onClose();\n  }\n\n  return (\n    <Modal>\n      <Container ref={contentRef}>\n        <Title>QR Code</Title>\n        <QRAddress>{props.address}</QRAddress>\n        <QRCodeContainer>\n          <QRCode value={props.address} fgColor=\"#f8fefc\" bgColor=\"#021d17\" />\n        </QRCodeContainer>\n      </Container>\n    </Modal>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const TableContainer = styled.div`\n  padding: 8px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.2);\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const TableHeadlineContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  padding: 8px 16px 16px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 12px 16px;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableCounterText = styled.span`\n  margin: 4px 0 0;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n  white-space: nowrap;\n`;\n\nexport const TableHeadlineTitle = styled.h3`\n  margin: 0 32px 0 0;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 600;\n  color: #f8fefc;\n`;\n\nexport const TableHeadlinerContentItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1 0;\n\n  @media screen and (max-width: 768px) {\n    align-self: stretch;\n  }\n\n  @media screen and (max-width: 560px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nexport const TableHeadRow = styled.tr``;\n\nexport const TableHeadCell = styled.th`\n  padding: 20px 12px;\n  background-color: #03261e;\n  font-family: SFProText;\n  font-size: 13px;\n  line-height: 16px;\n  font-weight: 600;\n  text-align: left;\n  color: #f8fefc;\n`;\n\nexport const TableRow = styled.tr`\n  td {\n    border-bottom: 1px solid #21302d;\n  }\n\n  :last-of-type td {\n    border: none;\n  }\n`;\n\nexport const TableCell = styled.td<{ bold?: boolean }>`\n  vertical-align: top;\n  padding: 18px 12px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: ${({ bold }) => (bold ? \"600\" : \"normal\")};\n  line-height: 15px;\n  text-align: left;\n  white-space: nowrap;\n  color: #f8fefc;\n`;\n","import type * as Types from \"../../../api/__generated__/types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type AddressPageQueryVariables = Types.Exact<{\n  first?: Types.InputMaybe<Types.Scalars[\"Int\"]>;\n  owner: Types.Scalars[\"Address\"];\n}>;\n\nexport type AddressPageQuery = {\n  __typename: \"Query\";\n  transactionsByOwner: {\n    __typename: \"TransactionConnection\";\n    edges?: Array<{\n      __typename: \"TransactionEdge\";\n      node: {\n        __typename: \"Transaction\";\n        id: string;\n        inputAssetIds: Array<string>;\n        gasPrice: string;\n        gasLimit: string;\n        maturity: string;\n        isScript: boolean;\n        receiptsRoot?: string | null;\n        witnesses: Array<string>;\n        inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n        outputs: Array<\n          | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n          | {\n              __typename: \"ContractOutput\";\n              inputIndex: number;\n              balanceRoot: string;\n              stateRoot: string;\n            }\n          | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n          | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n        >;\n        inputs: Array<\n          | {\n              __typename: \"InputCoin\";\n              utxoId: string;\n              owner: string;\n              amount: string;\n              assetId: string;\n              witnessIndex: number;\n              maturity: string;\n              predicate: string;\n              predicateData: string;\n            }\n          | {\n              __typename: \"InputContract\";\n              utxoId: string;\n              balanceRoot: string;\n              stateRoot: string;\n              contract: { __typename: \"Contract\"; id: string };\n            }\n        >;\n        status?:\n          | { __typename: \"FailureStatus\"; time: string }\n          | { __typename: \"SubmittedStatus\"; time: string }\n          | { __typename: \"SuccessStatus\"; time: string }\n          | null;\n      };\n    } | null> | null;\n  };\n};\n\nexport type AddressPageTransaction = {\n  __typename: \"Transaction\";\n  id: string;\n  inputAssetIds: Array<string>;\n  gasPrice: string;\n  gasLimit: string;\n  maturity: string;\n  isScript: boolean;\n  receiptsRoot?: string | null;\n  witnesses: Array<string>;\n  inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n  outputs: Array<\n    | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n    | { __typename: \"ContractOutput\"; inputIndex: number; balanceRoot: string; stateRoot: string }\n    | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n  >;\n  inputs: Array<\n    | {\n        __typename: \"InputCoin\";\n        utxoId: string;\n        owner: string;\n        amount: string;\n        assetId: string;\n        witnessIndex: number;\n        maturity: string;\n        predicate: string;\n        predicateData: string;\n      }\n    | {\n        __typename: \"InputContract\";\n        utxoId: string;\n        balanceRoot: string;\n        stateRoot: string;\n        contract: { __typename: \"Contract\"; id: string };\n      }\n  >;\n  status?:\n    | { __typename: \"FailureStatus\"; time: string }\n    | { __typename: \"SubmittedStatus\"; time: string }\n    | { __typename: \"SuccessStatus\"; time: string }\n    | null;\n};\n\nexport const AddressPageTransactionFragmentDoc = gql`\n  fragment AddressPageTransaction on Transaction {\n    id\n    inputContracts {\n      id\n    }\n    inputAssetIds\n    gasPrice\n    gasLimit\n    maturity\n    isScript\n    receiptsRoot\n    witnesses\n    outputs {\n      __typename\n      ... on CoinOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractOutput {\n        inputIndex\n        balanceRoot\n        stateRoot\n      }\n      ... on WithdrawalOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ChangeOutput {\n        to\n        amount\n        assetId\n      }\n      ... on VariableOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractCreated {\n        contract {\n          id\n        }\n      }\n    }\n    inputs {\n      __typename\n      ... on InputCoin {\n        utxoId\n        owner\n        amount\n        assetId\n        witnessIndex\n        maturity\n        predicate\n        predicateData\n      }\n      ... on InputContract {\n        utxoId\n        balanceRoot\n        stateRoot\n        contract {\n          id\n        }\n      }\n    }\n    status {\n      ... on SubmittedStatus {\n        time\n      }\n      ... on SuccessStatus {\n        time\n      }\n      ... on FailureStatus {\n        time\n      }\n    }\n  }\n`;\nexport const AddressPageQueryDocument = gql`\n  query AddressPageQuery($first: Int, $owner: Address!) {\n    transactionsByOwner(first: $first, owner: $owner) {\n      edges {\n        node {\n          ...AddressPageTransaction\n        }\n      }\n    }\n  }\n  ${AddressPageTransactionFragmentDoc}\n`;\n\n/**\n * __useAddressPageQuery__\n *\n * To run a query within a React component, call `useAddressPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressPageQuery({\n *   variables: {\n *      first: // value for 'first'\n *      owner: // value for 'owner'\n *   },\n * });\n */\nexport function useAddressPageQuery(\n  baseOptions: Apollo.QueryHookOptions<AddressPageQuery, AddressPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<AddressPageQuery, AddressPageQueryVariables>(\n    AddressPageQueryDocument,\n    options,\n  );\n}\nexport function useAddressPageQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<AddressPageQuery, AddressPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<AddressPageQuery, AddressPageQueryVariables>(\n    AddressPageQueryDocument,\n    options,\n  );\n}\nexport type AddressPageQueryHookResult = ReturnType<typeof useAddressPageQuery>;\nexport type AddressPageQueryLazyQueryHookResult = ReturnType<typeof useAddressPageQueryLazyQuery>;\nexport type AddressPageQueryQueryResult = Apollo.QueryResult<\n  AddressPageQuery,\n  AddressPageQueryVariables\n>;\n","import { useParams } from \"react-router-dom\";\nimport { useMemo, useState } from \"react\";\nimport { Header } from \"../../components/Header\";\nimport {\n  Container,\n  Content,\n  CopyButtonIcon,\n  Tooltip,\n  HeadlineAddress,\n  HeadlineAddressButton,\n  HeadlineAddressContainer,\n  HeadlineAddressHeader,\n  HeadlineCoinsContainer,\n  HeadlineContainer,\n  QRButtonIcon,\n  CoinsCounterLabel,\n  CoinsCounter,\n  TokenDropdownContainer,\n  TokenButton,\n  TokenButtonSymbol,\n  TokenButtonAmount,\n  TokenButtonSeparator,\n  TokenButtonIconContainer,\n  TokenDropdownIcon,\n  TableHeadlineDisclaimer,\n  HeadlineHighlighedDisclaimer,\n  TxHash,\n  TxRecipient,\n  TransactionValue,\n  CoinLink,\n  TableNavigationButtons,\n  TableNavigationNumberButton,\n  TableNavigationTextButton,\n  TableNavigationNumbersContainer,\n  TableNextNavigationTextButton,\n} from \"./components\";\nimport { QRModal } from \"../../components/Modals/QRModal\";\nimport * as TableUI from \"../../components/Table/components\";\nimport { dateDiffRelative, getTextForRelativeTimeDifference } from \"../../utils/date\";\nimport { AddressPageTransaction, useAddressPageQuery } from \"./__generated__/operations\";\n\nexport function AddressPage() {\n  const { address } = useParams() as any;\n  const [copyTooltip] = useState(\"Copy address\");\n  const [modal, setModal] = useState(false);\n  const { loading, data } = useAddressPageQuery({\n    variables: { first: 10, owner: address },\n  });\n  const transactions = useMemo<AddressPageTransaction[]>(() => {\n    return data?.transactionsByOwner!.edges!.map((edge) => edge!.node) ?? [];\n  }, [data]);\n\n  function onClose() {\n    setModal(false);\n  }\n\n  function showModal() {\n    setModal(true);\n  }\n\n  function onClickCopy() {\n    navigator.clipboard.writeText(address);\n  }\n\n  if (loading) {\n    return (\n      <>\n        <Header />\n        <Container>\n          <Content>\n            <HeadlineContainer>\n              <HeadlineAddressContainer>\n                <HeadlineAddressHeader>\n                  {`Address:  `}\n                  <HeadlineAddress>{address}</HeadlineAddress>\n                </HeadlineAddressHeader>\n              </HeadlineAddressContainer>\n            </HeadlineContainer>\n          </Content>\n        </Container>\n      </>\n    );\n  }\n  return (\n    <>\n      {modal && <QRModal onClose={onClose} address={address} />}\n      <Header />\n      <Container>\n        <Content>\n          <HeadlineContainer>\n            <HeadlineAddressContainer>\n              <HeadlineAddressHeader>\n                {`Address:  `}\n                <HeadlineAddress>{address}</HeadlineAddress>\n              </HeadlineAddressHeader>\n              <HeadlineAddressButton\n                onClick={() => {\n                  onClickCopy();\n                }}\n              >\n                <CopyButtonIcon />\n                <Tooltip>{copyTooltip}</Tooltip>\n              </HeadlineAddressButton>\n              <HeadlineAddressButton onClick={showModal}>\n                <QRButtonIcon />\n                <Tooltip>Click to copy QR code</Tooltip>\n              </HeadlineAddressButton>\n            </HeadlineAddressContainer>\n            <HeadlineCoinsContainer>\n              <CoinsCounterLabel>\n                Coins:\n                <CoinsCounter>3</CoinsCounter>\n              </CoinsCounterLabel>\n              <TokenDropdownContainer>\n                <TokenButton>\n                  <TokenButtonSymbol>ETH:</TokenButtonSymbol>\n                  <TokenButtonAmount>0</TokenButtonAmount>\n                  <TokenButtonSeparator></TokenButtonSeparator>\n                  <TokenButtonIconContainer>\n                    <TokenDropdownIcon />\n                  </TokenButtonIconContainer>\n                </TokenButton>\n              </TokenDropdownContainer>\n            </HeadlineCoinsContainer>\n          </HeadlineContainer>\n          <TransactionsTable transactions={transactions} />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nexport function TransactionsTable({ transactions }: { transactions: AddressPageTransaction[] }) {\n  function trimAddress(address: string) {\n    if (!address) {\n      return \"\";\n    }\n\n    return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n  }\n\n  return (\n    <>\n      <TableUI.TableContainer>\n        <TableUI.TableHeadlineContainer>\n          <TableUI.TableHeadlineTitle>Transactions</TableUI.TableHeadlineTitle>\n          <TableUI.TableHeadlinerContentItem>\n            <TableHeadlineDisclaimer>\n              {`Showing `}\n              <HeadlineHighlighedDisclaimer>\n                {transactions?.length || \"0\"}\n              </HeadlineHighlighedDisclaimer>\n              {` out of `}\n              <HeadlineHighlighedDisclaimer>\n                {transactions?.length || \"0\"}\n              </HeadlineHighlighedDisclaimer>\n              {` transactions`}\n            </TableHeadlineDisclaimer>\n          </TableUI.TableHeadlinerContentItem>\n        </TableUI.TableHeadlineContainer>\n        <TableUI.TableWrapper>\n          <TableUI.Table>\n            <TableUI.TableHeadRow>\n              <TableUI.TableHeadCell>Tx Hash</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>Type</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>Age</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>From</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>To</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>Value</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>Coin</TableUI.TableHeadCell>\n              <TableUI.TableHeadCell>Fee (USD)</TableUI.TableHeadCell>\n            </TableUI.TableHeadRow>\n            {transactions.map((transaction) => (\n              <TableUI.TableRow key={transaction.id}>\n                <TableUI.TableCell>\n                  <TxHash to={`/transaction/${transaction.id}`}>{transaction.id}</TxHash>\n                </TableUI.TableCell>\n                <TableUI.TableCell>{transaction.isScript ? \"Script\" : \"Create\"}</TableUI.TableCell>\n                <TableUI.TableCell>\n                  {transaction.status ? (\n                    <>\n                      {getTextForRelativeTimeDifference(\n                        dateDiffRelative(new Date(), new Date(transaction.status.time)),\n                      )}\n                    </>\n                  ) : null}\n                </TableUI.TableCell>\n                <TableUI.TableCell>\n                  {transaction.inputs.map((input, idx) =>\n                    (() => {\n                      switch (input.__typename) {\n                        case \"InputCoin\": {\n                          return (\n                            <TxRecipient key={idx} to={`/address/${input.owner}`}>\n                              {trimAddress(input.owner)}\n                            </TxRecipient>\n                          );\n                        }\n                        case \"InputContract\": {\n                          return (\n                            <TxRecipient key={idx} to={`/address/${input.contract.id}`}>\n                              {trimAddress(input.contract.id)}\n                            </TxRecipient>\n                          );\n                        }\n                        default: {\n                          // @ts-ignore\n                          return input.__typename;\n                        }\n                      }\n                    })(),\n                  )}\n                </TableUI.TableCell>\n                <TableUI.TableCell>\n                  {transaction.outputs.length > 0\n                    ? transaction.outputs.map((output, idx) =>\n                        (() => {\n                          if (output.__typename === \"CoinOutput\") {\n                            return (\n                              <TxRecipient key={idx} to={`/address/${output.to}`}>\n                                {trimAddress(output.to)}\n                              </TxRecipient>\n                            );\n                          }\n                          return output.__typename;\n                        })(),\n                      )\n                    : \"N/A\"}\n                </TableUI.TableCell>\n                <TableUI.TableCell>\n                  {transaction.outputs.length > 0\n                    ? transaction.outputs.map((output, idx) =>\n                        (() => {\n                          if (output.__typename === \"CoinOutput\") {\n                            return <TransactionValue key={idx}>{output.amount}</TransactionValue>;\n                          }\n                          return `${output.__typename}`;\n                        })(),\n                      )\n                    : \"N/A\"}\n                </TableUI.TableCell>\n                <TableUI.TableCell>\n                  {transaction.outputs.map((output, idx) =>\n                    (() => {\n                      if (output.__typename === \"CoinOutput\") {\n                        return (\n                          <CoinLink key={idx} to={`/coin`}>\n                            {output.assetId}\n                          </CoinLink>\n                        );\n                      }\n                      return output.__typename;\n                    })(),\n                  )}\n                </TableUI.TableCell>\n                <TableUI.TableCell>N/A</TableUI.TableCell>\n              </TableUI.TableRow>\n            ))}\n          </TableUI.Table>\n        </TableUI.TableWrapper>\n      </TableUI.TableContainer>\n    </>\n  );\n}\n\nfunction TableNavigation() {\n  const pages = [1, 2, 3, 4];\n  const [selectedPage, selectPage] = useState(1);\n\n  function onSelectPage(idx: number) {\n    selectPage(idx);\n  }\n\n  function onClickPrevPage() {\n    selectPage((prevPage) => prevPage - 1);\n  }\n\n  function onClickNextPage() {\n    selectPage((prevPage) => prevPage + 1);\n  }\n\n  function onClickLastPage() {\n    selectPage(pages[pages.length - 1]);\n  }\n\n  function onClickFirstPage() {\n    selectPage(1);\n  }\n\n  return (\n    <TableNavigationButtons>\n      <TableNavigationTextButton disabled={selectedPage === 1} onClick={onClickFirstPage}>\n        First\n      </TableNavigationTextButton>\n      <TableNextNavigationTextButton disabled={selectedPage === 1} onClick={onClickPrevPage}>\n        Previous\n      </TableNextNavigationTextButton>\n      <TableNavigationNumbersContainer>\n        {pages.map((pageIdx) => (\n          <TableNavigationNumberButton\n            key={pageIdx}\n            isSelected={pageIdx === selectedPage}\n            onClick={() => {\n              onSelectPage(pageIdx);\n            }}\n          >\n            {pageIdx}\n          </TableNavigationNumberButton>\n        ))}\n      </TableNavigationNumbersContainer>\n      <TableNextNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickNextPage}\n      >\n        Next\n      </TableNextNavigationTextButton>\n      <TableNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickLastPage}\n      >\n        Last\n      </TableNavigationTextButton>\n    </TableNavigationButtons>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { ArrowIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  @media screen and (max-width: 768px) {\n    margin: 0 0 24px;\n  }\n`;\n\nexport const BlockDataContainer = styled.div`\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 768px) {\n    padding: 8px 24px;\n  }\n`;\n\nexport const BlockDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  flex: 0 0 250px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    flex: 1 1 0;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  flex: 1 1 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProducerLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHash = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const EtherscanBlockLink = styled.a`\n  margin: 0 0 0 8px;\n  color: #58c09b;\n\n  svg {\n    height: 12px !important;\n    width: 12px !important;\n  }\n`;\n\nexport const AddressesCount = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const TransactionsCount = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHeightContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px 0 0;\n  }\n`;\n\nexport const BlockHeight = styled.div`\n  margin: 0 12px;\n  text-align: center;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const BlockNavigationButton = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  justify-content: center;\n  border-radius: 2px;\n  border: solid 0.2px #58c09b;\n  background-color: #03261e;\n  color: #58c09b;\n\n  :hover {\n    box-shadow: 0 0 2px 0 #58c09b;\n  }\n`;\n\nexport const BlockNavigationIcon = styled(ArrowIcon)<{ rotate?: boolean }>`\n  width: 6px !important;\n  height: 6px !important;\n  transform: ${({ rotate }) => (rotate ? \"rotate(180deg)\" : \"none\")};\n`;\n","import type * as Types from \"../../../api/__generated__/types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type BlockPageQueryVariables = Types.Exact<{\n  height?: Types.InputMaybe<Types.Scalars[\"U64\"]>;\n  previousHeight?: Types.InputMaybe<Types.Scalars[\"U64\"]>;\n}>;\n\nexport type BlockPageQuery = {\n  __typename: \"Query\";\n  block?: {\n    __typename: \"Block\";\n    id: string;\n    height: string;\n    time: string;\n    producer: string;\n    transactions: Array<{ __typename: \"Transaction\" }>;\n  } | null;\n  previousBlock?: {\n    __typename: \"Block\";\n    id: string;\n    height: string;\n    time: string;\n    producer: string;\n    transactions: Array<{ __typename: \"Transaction\" }>;\n  } | null;\n};\n\nexport type BlockPageBlock = {\n  __typename: \"Block\";\n  id: string;\n  height: string;\n  time: string;\n  producer: string;\n  transactions: Array<{ __typename: \"Transaction\" }>;\n};\n\nexport const BlockPageBlockFragmentDoc = gql`\n  fragment BlockPageBlock on Block {\n    id\n    height\n    time\n    producer\n    transactions {\n      __typename\n    }\n  }\n`;\nexport const BlockPageQueryDocument = gql`\n  query BlockPageQuery($height: U64, $previousHeight: U64) {\n    block(height: $height) {\n      ...BlockPageBlock\n    }\n    previousBlock: block(height: $previousHeight) {\n      ...BlockPageBlock\n    }\n  }\n  ${BlockPageBlockFragmentDoc}\n`;\n\n/**\n * __useBlockPageQuery__\n *\n * To run a query within a React component, call `useBlockPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlockPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlockPageQuery({\n *   variables: {\n *      height: // value for 'height'\n *      previousHeight: // value for 'previousHeight'\n *   },\n * });\n */\nexport function useBlockPageQuery(\n  baseOptions?: Apollo.QueryHookOptions<BlockPageQuery, BlockPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<BlockPageQuery, BlockPageQueryVariables>(BlockPageQueryDocument, options);\n}\nexport function useBlockPageQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<BlockPageQuery, BlockPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<BlockPageQuery, BlockPageQueryVariables>(\n    BlockPageQueryDocument,\n    options,\n  );\n}\nexport type BlockPageQueryHookResult = ReturnType<typeof useBlockPageQuery>;\nexport type BlockPageQueryLazyQueryHookResult = ReturnType<typeof useBlockPageQueryLazyQuery>;\nexport type BlockPageQueryQueryResult = Apollo.QueryResult<BlockPageQuery, BlockPageQueryVariables>;\n","import { Header } from \"../../components/Header\";\nimport {\n  AddressesCount,\n  BlockDataContainer,\n  BlockDataRow,\n  BlockHash,\n  BlockHeight,\n  BlockHeightContainer,\n  BlockNavigationButton,\n  BlockNavigationIcon,\n  BlockNumber,\n  Container,\n  Content,\n  EtherscanBlockLink,\n  ProducerLink,\n  RowKeyColumn,\n  Title,\n  TransactionsCount,\n} from \"./components\";\nimport { useParams } from \"react-router-dom\";\nimport { ExternalLinkIcon } from \"../../components/Icons\";\nimport { useBlockPageQuery } from \"./__generated__/operations\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nexport function BlockPage() {\n  const { block } = useParams() as any;\n\n  const { data, loading } = useBlockPageQuery({\n    variables: {\n      height: BigNumber.from(block).toString(),\n      previousHeight: BigNumber.from(block).sub(1).toString(),\n    },\n  });\n\n  const bl = data?.block;\n  const prevBl = data?.previousBlock;\n\n  if (loading)\n    return (\n      <>\n        <Header />\n        <Container>\n          <Content>\n            <Title>{`Block:  #${block}`}</Title>\n            Loading\n          </Content>\n        </Container>\n      </>\n    );\n\n  if (!bl)\n    return (\n      <>\n        <Header />\n        <Container>\n          <Content>\n            <Title>{`Block:  #${block}`}</Title>\n            Not found\n          </Content>\n        </Container>\n      </>\n    );\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>{`Block:  #${block}`}</Title>\n          <BlockDataContainer>\n            <BlockDataRow>\n              <RowKeyColumn>Block height:</RowKeyColumn>\n              <BlockHeightContainer>\n                <BlockNavigationButton to={`/block/${parseInt(block) - 1}`}>\n                  <BlockNavigationIcon rotate />\n                </BlockNavigationButton>\n                <BlockHeight>{bl.height}</BlockHeight>\n                <BlockNavigationButton to={`/block/${parseInt(block) + 1}`}>\n                  <BlockNavigationIcon />\n                </BlockNavigationButton>\n              </BlockHeightContainer>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Block producer:</RowKeyColumn>\n              <ProducerLink to=\"/address/0xc5d2460186f7233c927e7db2dcc703c0e500\">\n                {bl.producer}\n              </ProducerLink>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Previous block hash:</RowKeyColumn>\n              <BlockHash to={`/block/${prevBl?.height}`}>{prevBl?.id}</BlockHash>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Ethereum block number:</RowKeyColumn>\n              <BlockNumber>\n                TBD\n                <EtherscanBlockLink\n                  href={`https://etherscan.io/block/${block}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <ExternalLinkIcon />\n                </EtherscanBlockLink>\n              </BlockNumber>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Number of addresses:</RowKeyColumn>\n              <AddressesCount>TBD</AddressesCount>\n            </BlockDataRow>\n            <BlockDataRow>\n              <RowKeyColumn>Number of transactions:</RowKeyColumn>\n              <TransactionsCount to={`/block/${block}/transactions`}>\n                {bl.transactions?.length}\n              </TransactionsCount>\n            </BlockDataRow>\n          </BlockDataContainer>\n        </Content>\n      </Container>\n    </>\n  );\n}\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { ArrowIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled.div`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 250px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    width: 128px;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? \"#1e2e2b\" : \"#081C17\")};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled.div`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  display: block;\n  width: 170px;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 72px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? \"#eafff8\" : \"#808080\")};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"solid 1px #f9fefc\" : \"solid 1px rgba(0, 0, 0, 0)\"};\n  text-shadow: ${({ isSelected }) => (isSelected ? \"0 0 6px #e9fff8\" : \"none\")};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const ScriptTextarea = styled.textarea`\n  padding: 24px;\n  height: 200px;\n  width: 100%;\n  background-color: #03261e;\n  border: 0;\n  color: #ffffff;\n  resize: none;\n  font-family: SFProDisplay;\n\n  :focus {\n    border: 0;\n    outline: 0;\n  }\n`;\n\nexport const ContractTextarea = styled.textarea`\n  height: 200px;\n  width: 100%;\n  background-color: transparent;\n  border: 0;\n  color: #ffffff;\n  resize: none;\n  font-family: SFProDisplay;\n\n  :focus {\n    border: 0;\n    outline: 0;\n  }\n`;\n","export const trimAddress = (address: string) => {\n  if (!address) {\n    return \"\";\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n","import type * as Types from \"../../../api/__generated__/types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type TransactionPageQueryVariables = Types.Exact<{\n  id: Types.Scalars[\"TransactionId\"];\n}>;\n\nexport type TransactionPageQuery = {\n  __typename: \"Query\";\n  transaction?: {\n    __typename: \"Transaction\";\n    id: string;\n    inputAssetIds: Array<string>;\n    gasPrice: string;\n    gasLimit: string;\n    maturity: string;\n    isScript: boolean;\n    receiptsRoot?: string | null;\n    script?: string | null;\n    scriptData?: string | null;\n    witnesses: Array<string>;\n    bytecodeWitnessIndex?: number | null;\n    inputContracts: Array<{ __typename: \"Contract\"; id: string; bytecode: string }>;\n    staticContracts?: Array<{ __typename: \"Contract\"; id: string; bytecode: string }> | null;\n    outputs: Array<\n      | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n      | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n      | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n      | { __typename: \"ContractOutput\"; inputIndex: number; balanceRoot: string; stateRoot: string }\n      | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n      | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n    >;\n    inputs: Array<\n      | {\n          __typename: \"InputCoin\";\n          utxoId: string;\n          owner: string;\n          amount: string;\n          assetId: string;\n          witnessIndex: number;\n          maturity: string;\n          predicate: string;\n          predicateData: string;\n        }\n      | {\n          __typename: \"InputContract\";\n          utxoId: string;\n          balanceRoot: string;\n          stateRoot: string;\n          contract: { __typename: \"Contract\"; id: string };\n        }\n    >;\n    status?:\n      | { __typename: \"FailureStatus\"; time: string }\n      | { __typename: \"SubmittedStatus\"; time: string }\n      | { __typename: \"SuccessStatus\"; time: string }\n      | null;\n  } | null;\n};\n\nexport type InputFragment_InputCoin_ = {\n  __typename: \"InputCoin\";\n  utxoId: string;\n  owner: string;\n  amount: string;\n  assetId: string;\n  witnessIndex: number;\n  maturity: string;\n  predicate: string;\n  predicateData: string;\n};\n\nexport type InputFragment_InputContract_ = {\n  __typename: \"InputContract\";\n  utxoId: string;\n  balanceRoot: string;\n  stateRoot: string;\n  contract: { __typename: \"Contract\"; id: string };\n};\n\nexport type InputFragment = InputFragment_InputCoin_ | InputFragment_InputContract_;\n\nexport type OutputFragment_ChangeOutput_ = {\n  __typename: \"ChangeOutput\";\n  to: string;\n  amount: string;\n  assetId: string;\n};\n\nexport type OutputFragment_CoinOutput_ = {\n  __typename: \"CoinOutput\";\n  to: string;\n  amount: string;\n  assetId: string;\n};\n\nexport type OutputFragment_ContractCreated_ = {\n  __typename: \"ContractCreated\";\n  contract: { __typename: \"Contract\"; id: string };\n};\n\nexport type OutputFragment_ContractOutput_ = {\n  __typename: \"ContractOutput\";\n  inputIndex: number;\n  balanceRoot: string;\n  stateRoot: string;\n};\n\nexport type OutputFragment_VariableOutput_ = {\n  __typename: \"VariableOutput\";\n  to: string;\n  amount: string;\n  assetId: string;\n};\n\nexport type OutputFragment_WithdrawalOutput_ = {\n  __typename: \"WithdrawalOutput\";\n  to: string;\n  amount: string;\n  assetId: string;\n};\n\nexport type OutputFragment =\n  | OutputFragment_ChangeOutput_\n  | OutputFragment_CoinOutput_\n  | OutputFragment_ContractCreated_\n  | OutputFragment_ContractOutput_\n  | OutputFragment_VariableOutput_\n  | OutputFragment_WithdrawalOutput_;\n\nexport const InputFragmentDoc = gql`\n  fragment InputFragment on Input {\n    ... on InputCoin {\n      utxoId\n      owner\n      amount\n      assetId\n      witnessIndex\n      maturity\n      predicate\n      predicateData\n    }\n    ... on InputContract {\n      utxoId\n      balanceRoot\n      stateRoot\n      contract {\n        id\n      }\n    }\n  }\n`;\nexport const OutputFragmentDoc = gql`\n  fragment OutputFragment on Output {\n    ... on CoinOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ContractOutput {\n      inputIndex\n      balanceRoot\n      stateRoot\n    }\n    ... on WithdrawalOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ChangeOutput {\n      to\n      amount\n      assetId\n    }\n    ... on VariableOutput {\n      to\n      amount\n      assetId\n    }\n    ... on ContractCreated {\n      contract {\n        id\n      }\n    }\n  }\n`;\nexport const TransactionPageQueryDocument = gql`\n  query TransactionPageQuery($id: TransactionId!) {\n    transaction(id: $id) {\n      id\n      inputContracts {\n        id\n        bytecode\n      }\n      staticContracts {\n        id\n        bytecode\n      }\n      inputAssetIds\n      gasPrice\n      gasLimit\n      maturity\n      isScript\n      receiptsRoot\n      script\n      scriptData\n      witnesses\n      bytecodeWitnessIndex\n      outputs {\n        ...OutputFragment\n      }\n      inputs {\n        ...InputFragment\n      }\n      status {\n        ... on SubmittedStatus {\n          time\n        }\n        ... on SuccessStatus {\n          time\n        }\n        ... on FailureStatus {\n          time\n        }\n      }\n    }\n  }\n  ${OutputFragmentDoc}\n  ${InputFragmentDoc}\n`;\n\n/**\n * __useTransactionPageQuery__\n *\n * To run a query within a React component, call `useTransactionPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useTransactionPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTransactionPageQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useTransactionPageQuery(\n  baseOptions: Apollo.QueryHookOptions<TransactionPageQuery, TransactionPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<TransactionPageQuery, TransactionPageQueryVariables>(\n    TransactionPageQueryDocument,\n    options,\n  );\n}\nexport function useTransactionPageQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<TransactionPageQuery, TransactionPageQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<TransactionPageQuery, TransactionPageQueryVariables>(\n    TransactionPageQueryDocument,\n    options,\n  );\n}\nexport type TransactionPageQueryHookResult = ReturnType<typeof useTransactionPageQuery>;\nexport type TransactionPageQueryLazyQueryHookResult = ReturnType<\n  typeof useTransactionPageQueryLazyQuery\n>;\nexport type TransactionPageQueryQueryResult = Apollo.QueryResult<\n  TransactionPageQuery,\n  TransactionPageQueryVariables\n>;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { ArrowIcon, FileIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled.div`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    padding: 8px 0;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 280px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 220px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin: 0 0 4px;\n    width: 100%;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  width: calc(100% - 280px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 220px);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport const WrapText = styled.span`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const RowValueLink = styled(Link)`\n  display: block;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? \"#1e2e2b\" : \"#081C17\")};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  max-width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    max-width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled.div`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  flex: 0 0 140px;\n\n  @media screen and (max-width: 425px) {\n    flex: 0 0 120px;\n  }\n`;\n\nexport const UTXODetailsValue = styled.span`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 24px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? \"#eafff8\" : \"#808080\")};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"solid 1px #f9fefc\" : \"solid 1px rgba(0, 0, 0, 0)\"};\n  text-shadow: ${({ isSelected }) => (isSelected ? \"0 0 6px #e9fff8\" : \"none\")};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const Witnesses = styled.div``;\n\nexport const WitnessContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 0 2px;\n`;\n\nexport const WitnessIndex = styled.span`\n  flex-shrink: 0;\n  width: 24px;\n  text-align: center;\n`;\n\nexport const WitnessIconContainer = styled.div`\n  flex-shrink: 0;\n  margin: 0 6px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 7px;\n  background-color: #1e2e2b;\n`;\n\nexport const WitnessIcon = styled(FileIcon)`\n  width: 8px !important;\n  width: 8px !important;\n  color: #f8fefc;\n`;\n\nexport const WitnessAddress = styled.span`\n  flex: 1 1 0;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import { useState } from \"react\";\nimport { Header } from \"../../components/Header\";\nimport {\n  Container,\n  Content,\n  RowKeyColumn,\n  RowValueColumn,\n  Title,\n  TitleTransaction,\n  TransactionDataContainer,\n  TransactionDataRow,\n  TransactionStatus,\n  UTXOContainer,\n  DetailsButtonContainer,\n  DetailsButton,\n  UTXOBoxesContainer,\n  UTXOBoxesColumn,\n  UTXOBoxContainer,\n  UTXOHeadlineContainer,\n  UTXOHeadlineColumn,\n  UTXOTitle,\n  UTXOHash,\n  HeadlineText,\n  UTXODetailsContainer,\n  UTXODetailsRow,\n  UTXODetailsKey,\n  UTXODetailsLink,\n  UTXOSeparatorColumn,\n  UTXOSeparatorArrow,\n  ScriptsContainer,\n  ScriptTitle,\n  ScriptContainer,\n  ScriptTabsContainer,\n  ScriptTabButton,\n  ScriptTextarea,\n  UTXOHeadlineColumn2,\n  ContractTextarea,\n} from \"./components\";\nimport { useParams } from \"react-router-dom\";\nimport { ExpandIcon, ShrinkIcon } from \"../../components/Icons\";\nimport { trimAddress } from \"../../utils\";\nimport { InputFragment, OutputFragment, useTransactionPageQuery } from \"./__generated__/operations\";\nimport { UTXODetailsValue } from \"../CreateTransactionPage/components\";\n\nexport function TransactionPage() {\n  const { transaction } = useParams() as any;\n  const { data } = useTransactionPageQuery({ variables: { id: transaction } });\n  const tx = data?.transaction;\n\n  if (!tx) return <></>;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>\n            <span>Transaction:</span>\n            <TitleTransaction>{transaction}</TitleTransaction>\n          </Title>\n          <TransactionDataContainer>\n            <TransactionDataRow>\n              <RowKeyColumn>Type:</RowKeyColumn>\n              <RowValueColumn>{tx.isScript ? \"Script\" : \"Create\"}</RowValueColumn>\n            </TransactionDataRow>\n            {tx.status ? (\n              <TransactionDataRow>\n                <RowKeyColumn>Status:</RowKeyColumn>\n                <TransactionStatus>{tx.status.__typename.replace(\"Status\", \"\")}</TransactionStatus>\n              </TransactionDataRow>\n            ) : null}\n            <TransactionDataRow>\n              <RowKeyColumn>Maturity:</RowKeyColumn>\n              <RowValueColumn>{tx.maturity}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Price:</RowKeyColumn>\n              <RowValueColumn>{tx.gasPrice}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Limit:</RowKeyColumn>\n              <RowValueColumn>{tx.gasLimit}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Used:</RowKeyColumn>\n              <RowValueColumn>0</RowValueColumn>\n            </TransactionDataRow>\n          </TransactionDataContainer>\n          <UTXOComponent outputs={tx.outputs || []} inputs={tx.inputs || []} />\n          {tx.isScript ? <ScriptsComponent tx={tx} /> : <ContractComponent tx={tx} />}\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction ContractComponent({ tx }: { tx: any }) {\n  return tx.witnesses.map((witness: string, index: number) => (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Witness #{index}</UTXOTitle>\n        </UTXOHeadlineColumn>\n      </UTXOHeadlineContainer>\n      <UTXODetailsContainer>\n        <ContractTextarea readOnly={true} value={witness} />\n      </UTXODetailsContainer>\n    </UTXOBoxContainer>\n  ));\n}\n\nfunction ScriptsComponent({ tx }: { tx: any }) {\n  return (\n    <ScriptsContainer>\n      <ScriptTitle>Script Byte Code:</ScriptTitle>\n      <ScriptComponent tabs={[\"Assembly\", \"Hex\"]} contents={[\"\", tx.script]} />\n      <ScriptTitle>Script Data:</ScriptTitle>\n      <ScriptComponent tabs={[\"ABI Decoded\", \"Raw Hex\"]} contents={[\"\", tx.scriptData]} />\n    </ScriptsContainer>\n  );\n}\n\nfunction ScriptComponent({ tabs, contents }: { tabs: string[]; contents: string[] }) {\n  const [selectedTab, setSelectedTab] = useState(1);\n\n  return (\n    <ScriptContainer>\n      <ScriptTabsContainer>\n        {tabs.map((tabItem, idx) => (\n          <ScriptTabButton\n            key={idx}\n            isSelected={selectedTab === idx}\n            onClick={() => {\n              setSelectedTab(idx);\n            }}\n          >\n            {tabItem}\n          </ScriptTabButton>\n        ))}\n      </ScriptTabsContainer>\n      <ScriptTextarea readOnly={true} value={contents[selectedTab]} />\n    </ScriptContainer>\n  );\n}\n\nfunction UTXOComponent({\n  inputs,\n  outputs,\n}: {\n  inputs: InputFragment[];\n  outputs: OutputFragment[];\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  function onClickDetails() {\n    setExpanded((prevExpanded) => !prevExpanded);\n  }\n\n  if (!outputs.length) return null;\n\n  return (\n    <UTXOContainer>\n      <DetailsButtonContainer>\n        <DetailsButton onClick={onClickDetails} isActive={expanded}>\n          DETAILS\n          {expanded ? <ShrinkIcon /> : <ExpandIcon />}\n        </DetailsButton>\n      </DetailsButtonContainer>\n      <UTXOBoxesContainer>\n        <UTXOBoxesColumn>\n          {inputs.map((input, idx) => (\n            <UTXOInputBox key={idx} idx={idx} input={input} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n        <UTXOSeparatorColumn>\n          <UTXOSeparatorArrow />\n        </UTXOSeparatorColumn>\n        <UTXOBoxesColumn>\n          {outputs.map((output, idx) => (\n            <UTXOOutputBox key={idx} index={idx} output={output} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n      </UTXOBoxesContainer>\n    </UTXOContainer>\n  );\n}\n\nfunction UTXOInputBox({\n  input,\n  expanded,\n  idx,\n}: {\n  input: InputFragment;\n  expanded: boolean;\n  idx: number;\n}) {\n  switch (input.__typename) {\n    case \"InputCoin\": {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHash to={`/transaction/${input.utxoId}`}>{input.utxoId}</UTXOHash>\n            </UTXOHeadlineColumn>\n            <UTXOHeadlineColumn2>\n              <HeadlineText>Value</HeadlineText>\n              <HeadlineText>{input.amount}</HeadlineText>\n            </UTXOHeadlineColumn2>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Owner:</UTXODetailsKey>\n                <UTXODetailsLink to={`/address/${input.utxoId}`}>\n                  {trimAddress(input.owner)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Amount:</UTXODetailsKey>\n                {input.amount}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Coin:</UTXODetailsKey>\n                <UTXODetailsLink to={`/coin/${input.assetId}`}>\n                  {trimAddress(input.assetId)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate bytecode:</UTXODetailsKey>\n                {input.predicate}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate data:</UTXODetailsKey>\n                {input.predicateData}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate length:</UTXODetailsKey>\n                {0}\n                {/* {TBD} */}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Witness Index:</UTXODetailsKey>\n                {input.witnessIndex}\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    case \"InputContract\": {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHash to={`/transaction/${input.utxoId}`}>{input.utxoId}</UTXOHash>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n                <UTXODetailsLink to={`/contract/${input.contract.id}`}>\n                  {trimAddress(input.contract.id)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.balanceRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>State Root:</UTXODetailsKey>\n                <UTXODetailsValue>{trimAddress(input.stateRoot)}</UTXODetailsValue>\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutput({ output }: { output: OutputFragment }) {\n  switch (output.__typename) {\n    case \"ContractCreated\": {\n      return (\n        <UTXODetailsRow>\n          <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n          <UTXODetailsLink to={`/contract/${output.contract.id}`}>\n            {output.contract.id}\n          </UTXODetailsLink>\n        </UTXODetailsRow>\n      );\n    }\n    case \"ContractOutput\": {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.balanceRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.stateRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Input index:</UTXODetailsKey>\n            <UTXODetailsValue>{output.inputIndex}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    case \"CoinOutput\":\n    case \"ChangeOutput\": {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>To:</UTXODetailsKey>\n            <UTXODetailsLink to={`/address/${output.to}`}>{trimAddress(output.to)}</UTXODetailsLink>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Amount:</UTXODetailsKey>\n            <UTXODetailsValue>{output.amount}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Coin:</UTXODetailsKey>\n            <UTXODetailsLink to={`/coin/${output.assetId}`}>\n              {trimAddress(output.assetId)}\n            </UTXODetailsLink>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutputBox({\n  output,\n  expanded,\n  index,\n}: {\n  output: OutputFragment;\n  expanded: boolean;\n  index: number;\n}) {\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Output #{index}</UTXOTitle>\n          <UTXOHash to={`/`}>{output.__typename}</UTXOHash>\n        </UTXOHeadlineColumn>\n        {output.__typename === \"CoinOutput\" && (\n          <UTXOHeadlineColumn2>\n            <HeadlineText>Amount</HeadlineText>\n            <HeadlineText>{output.amount}</HeadlineText>\n          </UTXOHeadlineColumn2>\n        )}\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXOOutput output={output} />\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n","export const trimAddress = (address: string) => {\n  if (!address) {\n    return \"\";\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const GreenLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n","import styled from \"styled-components\";\nimport { GreenLink } from \"../../components/Link/components\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 8px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n`;\n\nexport const Subtitle = styled.span`\n  margin: 0 0 32px;\n  display: block;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const TxHashLink = styled(GreenLink)`\n  display: block;\n  max-width: 124px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TxRecipientLink = styled(GreenLink)`\n  display: block;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const TxValue = styled.span`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const CoinLink = styled(GreenLink)`\n  display: block;\n  font-weight: 600;\n  margin: 0 0 12px;\n  max-width: 80px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const HeadlineTransactionsNumber = styled.span`\n  color: #f8fefc;\n`;\n","import type * as Types from \"../../../api/__generated__/types\";\n\nimport { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nconst defaultOptions = {} as const;\nexport type BlockTransactionsPageQueryVariables = Types.Exact<{\n  height?: Types.InputMaybe<Types.Scalars[\"U64\"]>;\n}>;\n\nexport type BlockTransactionsPageQuery = {\n  __typename: \"Query\";\n  block?: {\n    __typename: \"Block\";\n    id: string;\n    height: string;\n    time: string;\n    producer: string;\n    transactions: Array<{\n      __typename: \"Transaction\";\n      id: string;\n      inputAssetIds: Array<string>;\n      gasPrice: string;\n      gasLimit: string;\n      maturity: string;\n      isScript: boolean;\n      receiptsRoot?: string | null;\n      witnesses: Array<string>;\n      inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n      outputs: Array<\n        | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n        | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n        | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n        | {\n            __typename: \"ContractOutput\";\n            inputIndex: number;\n            balanceRoot: string;\n            stateRoot: string;\n          }\n        | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n        | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n      >;\n      inputs: Array<\n        | { __typename: \"InputCoin\"; owner: string }\n        | { __typename: \"InputContract\"; contract: { __typename: \"Contract\"; id: string } }\n      >;\n      status?:\n        | { __typename: \"FailureStatus\"; time: string }\n        | { __typename: \"SubmittedStatus\"; time: string }\n        | { __typename: \"SuccessStatus\"; time: string }\n        | null;\n    }>;\n  } | null;\n};\n\nexport type BlockTransactionFragment = {\n  __typename: \"Transaction\";\n  id: string;\n  inputAssetIds: Array<string>;\n  gasPrice: string;\n  gasLimit: string;\n  maturity: string;\n  isScript: boolean;\n  receiptsRoot?: string | null;\n  witnesses: Array<string>;\n  inputContracts: Array<{ __typename: \"Contract\"; id: string }>;\n  outputs: Array<\n    | { __typename: \"ChangeOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"CoinOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"ContractCreated\"; contract: { __typename: \"Contract\"; id: string } }\n    | { __typename: \"ContractOutput\"; inputIndex: number; balanceRoot: string; stateRoot: string }\n    | { __typename: \"VariableOutput\"; to: string; amount: string; assetId: string }\n    | { __typename: \"WithdrawalOutput\"; to: string; amount: string; assetId: string }\n  >;\n  inputs: Array<\n    | { __typename: \"InputCoin\"; owner: string }\n    | { __typename: \"InputContract\"; contract: { __typename: \"Contract\"; id: string } }\n  >;\n  status?:\n    | { __typename: \"FailureStatus\"; time: string }\n    | { __typename: \"SubmittedStatus\"; time: string }\n    | { __typename: \"SuccessStatus\"; time: string }\n    | null;\n};\n\nexport const BlockTransactionFragmentDoc = gql`\n  fragment BlockTransactionFragment on Transaction {\n    id\n    inputContracts {\n      id\n    }\n    inputAssetIds\n    gasPrice\n    gasLimit\n    maturity\n    isScript\n    receiptsRoot\n    witnesses\n    outputs {\n      __typename\n      ... on CoinOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractOutput {\n        inputIndex\n        balanceRoot\n        stateRoot\n      }\n      ... on WithdrawalOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ChangeOutput {\n        to\n        amount\n        assetId\n      }\n      ... on VariableOutput {\n        to\n        amount\n        assetId\n      }\n      ... on ContractCreated {\n        contract {\n          id\n        }\n      }\n    }\n    inputs {\n      __typename\n      ... on InputCoin {\n        owner\n      }\n      ... on InputContract {\n        contract {\n          id\n        }\n      }\n    }\n    status {\n      ... on SubmittedStatus {\n        time\n      }\n      ... on SuccessStatus {\n        time\n      }\n      ... on FailureStatus {\n        time\n      }\n    }\n  }\n`;\nexport const BlockTransactionsPageQueryDocument = gql`\n  query BlockTransactionsPageQuery($height: U64) {\n    block(height: $height) {\n      id\n      height\n      time\n      producer\n      transactions {\n        ...BlockTransactionFragment\n      }\n    }\n  }\n  ${BlockTransactionFragmentDoc}\n`;\n\n/**\n * __useBlockTransactionsPageQuery__\n *\n * To run a query within a React component, call `useBlockTransactionsPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useBlockTransactionsPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useBlockTransactionsPageQuery({\n *   variables: {\n *      height: // value for 'height'\n *   },\n * });\n */\nexport function useBlockTransactionsPageQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    BlockTransactionsPageQuery,\n    BlockTransactionsPageQueryVariables\n  >,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>(\n    BlockTransactionsPageQueryDocument,\n    options,\n  );\n}\nexport function useBlockTransactionsPageQueryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    BlockTransactionsPageQuery,\n    BlockTransactionsPageQueryVariables\n  >,\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<BlockTransactionsPageQuery, BlockTransactionsPageQueryVariables>(\n    BlockTransactionsPageQueryDocument,\n    options,\n  );\n}\nexport type BlockTransactionsPageQueryHookResult = ReturnType<typeof useBlockTransactionsPageQuery>;\nexport type BlockTransactionsPageQueryLazyQueryHookResult = ReturnType<\n  typeof useBlockTransactionsPageQueryLazyQuery\n>;\nexport type BlockTransactionsPageQueryQueryResult = Apollo.QueryResult<\n  BlockTransactionsPageQuery,\n  BlockTransactionsPageQueryVariables\n>;\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { useParams } from \"react-router-dom\";\nimport { Header } from \"../../components/Header\";\nimport {\n  Table,\n  TableCell,\n  TableCounterText,\n  TableHeadCell,\n  TableHeadlineContainer,\n  TableHeadlinerContentItem,\n  TableHeadlineTitle,\n  TableHeadRow,\n  TableRow,\n  TableWrapper,\n} from \"../../components/Table/components\";\nimport { trimAddress } from \"../../utils/address\";\nimport { dateDiffRelative, getTextForRelativeTimeDifference } from \"../../utils/date\";\nimport { TableContainer } from \"../AddressPage/components\";\nimport {\n  CoinLink,\n  Container,\n  Content,\n  HeadlineTransactionsNumber,\n  Subtitle,\n  Title,\n  TxHashLink,\n  TxRecipientLink,\n  TxValue,\n} from \"./components\";\nimport {\n  BlockTransactionFragment,\n  useBlockTransactionsPageQuery,\n} from \"./__generated__/operations\";\n\nexport function BlockTransactionsPage() {\n  const { block } = useParams() as any;\n  const { data } = useBlockTransactionsPageQuery({\n    variables: { height: BigNumber.from(block).toString() },\n  });\n  const bl = data?.block;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>Transaction list</Title>\n          <Subtitle>{`Block: #${block}`}</Subtitle>\n          <Transactions transactions={bl?.transactions || []} />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nconst Transactions: React.FC<{ transactions: BlockTransactionFragment[] }> = ({ transactions }) => {\n  return (\n    <TableContainer>\n      <TableHeadlineContainer>\n        <TableHeadlineTitle>Transactions</TableHeadlineTitle>\n        <TableHeadlinerContentItem>\n          <TableCounterText>\n            {`Showing `}\n            <HeadlineTransactionsNumber>1</HeadlineTransactionsNumber>\n            {` out of `}\n            <HeadlineTransactionsNumber>1</HeadlineTransactionsNumber>\n            {` transactions`}\n          </TableCounterText>\n        </TableHeadlinerContentItem>\n      </TableHeadlineContainer>\n      <TableWrapper>\n        <Table>\n          <thead>\n            <TableHeadRow>\n              <TableHeadCell>Tx Hash</TableHeadCell>\n              <TableHeadCell>Type</TableHeadCell>\n              <TableHeadCell>Age</TableHeadCell>\n              <TableHeadCell>From</TableHeadCell>\n              <TableHeadCell>To</TableHeadCell>\n              <TableHeadCell>Value</TableHeadCell>\n              <TableHeadCell>Coin</TableHeadCell>\n              <TableHeadCell>Fee (USD)</TableHeadCell>\n            </TableHeadRow>\n          </thead>\n          <tbody>\n            {transactions.map((transaction) => (\n              <TableRow key={transaction.id}>\n                <TableCell>\n                  <TxHashLink to={`/transaction/${transaction.id}`}>{transaction.id}</TxHashLink>\n                </TableCell>\n                <TableCell>{transaction.isScript ? \"Script\" : \"Create\"}</TableCell>\n                <TableCell>\n                  {transaction.status ? (\n                    <>\n                      {getTextForRelativeTimeDifference(\n                        dateDiffRelative(new Date(), new Date(transaction.status.time)),\n                      )}\n                    </>\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {transaction.inputs.map((input, idx) =>\n                    (() => {\n                      switch (input.__typename) {\n                        case \"InputCoin\": {\n                          return (\n                            <TxRecipientLink key={idx} to={`/address/${input.owner}`}>\n                              {trimAddress(input.owner)}\n                            </TxRecipientLink>\n                          );\n                        }\n                        case \"InputContract\": {\n                          return (\n                            <TxRecipientLink key={idx} to={`/address/${input.contract.id}`}>\n                              {trimAddress(input.contract.id)}\n                            </TxRecipientLink>\n                          );\n                        }\n                        default: {\n                          // @ts-ignore\n                          return input.__typename;\n                        }\n                      }\n                    })(),\n                  )}\n                </TableCell>\n                <TableCell>\n                  {transaction.outputs.map((output, idx) =>\n                    (() => {\n                      if (output.__typename === \"CoinOutput\") {\n                        return (\n                          <TxRecipientLink key={idx} to={`/address/${output.to}`}>\n                            {trimAddress(output.to)}\n                          </TxRecipientLink>\n                        );\n                      }\n                      return output.__typename;\n                    })(),\n                  )}\n                </TableCell>\n                <TableCell>\n                  {transaction.outputs.map((output, idx) =>\n                    (() => {\n                      if (output.__typename === \"CoinOutput\") {\n                        return <TxValue key={idx}>{output.amount}</TxValue>;\n                      }\n                      return `N/A ${output.__typename}`;\n                    })(),\n                  )}\n                </TableCell>\n                <TableCell>\n                  {transaction.outputs.map((output, idx) =>\n                    (() => {\n                      if (output.__typename === \"CoinOutput\") {\n                        return (\n                          <CoinLink key={idx} to={`/coin`}>\n                            {output.assetId}\n                          </CoinLink>\n                        );\n                      }\n                      return \"N/A\";\n                    })(),\n                  )}\n                </TableCell>\n                <TableCell bold>N/A</TableCell>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </TableWrapper>\n    </TableContainer>\n  );\n};\n","import { useState } from \"react\";\nimport { Header } from \"../../components/Header\";\nimport {\n  Container,\n  Content,\n  RowKeyColumn,\n  RowValueColumn,\n  Title,\n  TitleTransaction,\n  TransactionDataContainer,\n  TransactionDataRow,\n  UTXOContainer,\n  DetailsButtonContainer,\n  DetailsButton,\n  UTXOBoxesContainer,\n  UTXOBoxesColumn,\n  UTXOBoxContainer,\n  UTXOHeadlineContainer,\n  UTXOHeadlineColumn,\n  UTXOTitle,\n  UTXOHash,\n  UTXODetailsContainer,\n  UTXODetailsRow,\n  UTXODetailsKey,\n  UTXODetailsLink,\n  UTXOSeparatorColumn,\n  UTXOSeparatorArrow,\n  RowValueLink,\n  WrapText,\n  WitnessContainer,\n  WitnessIndex,\n  WitnessIconContainer,\n  WitnessAddress,\n  UTXODetailsValue,\n  WitnessIcon,\n} from \"./components\";\nimport { useParams } from \"react-router-dom\";\nimport { ExpandIcon, ShrinkIcon } from \"../../components/Icons\";\n\nexport function CreateTransactionPage() {\n  const { transaction } = useParams() as any;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>\n            <span>Transaction:</span>\n            <TitleTransaction>{transaction}</TitleTransaction>\n          </Title>\n          <TransactionDataContainer>\n            <TransactionDataRow>\n              <RowKeyColumn>Type:</RowKeyColumn>\n              <RowValueColumn>Create</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Maturity:</RowKeyColumn>\n              <RowValueColumn>24</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Price:</RowKeyColumn>\n              <RowValueColumn>34 gwei</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Limit:</RowKeyColumn>\n              <RowValueColumn>32</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Used:</RowKeyColumn>\n              <RowValueColumn>23</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Static Contracts (1):</RowKeyColumn>\n              <RowValueColumn>\n                <RowValueLink to=\"/contract/0xc5d2460186f7233c927e7db2dcc703c0e500\">\n                  0xc5d2460186f7233c927e7db2dcc703c0e500\n                </RowValueLink>\n              </RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Bytecode Length:</RowKeyColumn>\n              <RowValueColumn>32 Bytes</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Salt:</RowKeyColumn>\n              <RowValueColumn>\n                <WrapText>\n                  07739c9276903c4c1d305bb27b6a133a8328a4350c2222589d32889b74202c1d\n                </WrapText>\n              </RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Witnesses (3):</RowKeyColumn>\n              <RowValueColumn>\n                <WitnessContainer>\n                  <WitnessIndex>[0]</WitnessIndex>\n                  <WitnessIconContainer>\n                    <WitnessIcon />\n                  </WitnessIconContainer>\n                  <WitnessAddress>0xc5d2460186f7233c927e7db2dcc703c0e500</WitnessAddress>\n                </WitnessContainer>\n                <WitnessContainer>\n                  <WitnessIndex>[1]</WitnessIndex>\n                  <WitnessIconContainer>\n                    <WitnessIcon />\n                  </WitnessIconContainer>\n                  <WitnessAddress>0xc5d2460186f7233c927e7db2dcc703c0e500</WitnessAddress>\n                </WitnessContainer>\n                <WitnessContainer>\n                  <WitnessIndex>[2]</WitnessIndex>\n                  <WitnessIconContainer>\n                    <WitnessIcon />\n                  </WitnessIconContainer>\n                  <WitnessAddress>0xc5d2460186f7233c927e7db2dcc703c0e500</WitnessAddress>\n                </WitnessContainer>\n              </RowValueColumn>\n            </TransactionDataRow>\n          </TransactionDataContainer>\n          <UTXOComponent />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction UTXOComponent() {\n  const [expanded, setExpanded] = useState(false);\n\n  function onClickDetails() {\n    setExpanded((prevExpanded) => !prevExpanded);\n  }\n\n  return (\n    <UTXOContainer>\n      <DetailsButtonContainer>\n        <DetailsButton onClick={onClickDetails} isActive={expanded}>\n          DETAILS\n          {expanded ? <ShrinkIcon /> : <ExpandIcon />}\n        </DetailsButton>\n      </DetailsButtonContainer>\n      <UTXOBoxesContainer>\n        <UTXOBoxesColumn>\n          {Inputs.map((inputItem, idx) => (\n            <UTXOInputBox key={idx} data={inputItem} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n        <UTXOSeparatorColumn>\n          <UTXOSeparatorArrow />\n        </UTXOSeparatorColumn>\n        <UTXOBoxesColumn>\n          {Outputs.map((outputItem, idx) => (\n            <UTXOOutputBox key={idx} data={outputItem} expanded={expanded} />\n          ))}\n        </UTXOBoxesColumn>\n      </UTXOBoxesContainer>\n    </UTXOContainer>\n  );\n}\n\ninterface UTXOInputData {\n  title: string;\n  hash: string;\n  contractId: string;\n  balanceRoot: string;\n  stateRoot: string;\n}\n\nconst Inputs: UTXOInputData[] = [\n  {\n    title: \"Input #1\",\n    hash: \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n    contractId: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n    balanceRoot: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n    stateRoot: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n  },\n];\n\ninterface UTXOInputProps {\n  data: UTXOInputData;\n  expanded: boolean;\n}\n\nfunction UTXOInputBox(props: UTXOInputProps) {\n  const { data, expanded } = props;\n\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>{data.title}</UTXOTitle>\n          <UTXOHash to={`/transaction/${data.hash}`}>{data.hash}</UTXOHash>\n        </UTXOHeadlineColumn>\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXODetailsRow>\n            <UTXODetailsKey>ContractID:</UTXODetailsKey>\n            <UTXODetailsLink to={`/contract/${data.contractId}`}>{data.contractId}</UTXODetailsLink>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>{data.balanceRoot}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{data.stateRoot}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n\ninterface UTXOOutputData {\n  title: string;\n  hash: string;\n  contractId: string;\n  balanceRoot: string;\n  stateRoot: string;\n}\n\nconst Outputs: UTXOOutputData[] = [\n  {\n    title: \"Input #1\",\n    hash: \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n    contractId: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n    balanceRoot: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n    stateRoot: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n  },\n];\n\ninterface UTXOOutputProps {\n  data: UTXOOutputData;\n  expanded: boolean;\n}\n\nfunction UTXOOutputBox(props: UTXOOutputProps) {\n  const { data, expanded } = props;\n\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>{data.title}</UTXOTitle>\n          <UTXOHash to={`/transaction/${data.hash}`}>{data.hash}</UTXOHash>\n        </UTXOHeadlineColumn>\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXODetailsRow>\n            <UTXODetailsKey>ContractID:</UTXODetailsKey>\n            <UTXODetailsLink to={`/contract/${data.contractId}`}>{data.contractId}</UTXODetailsLink>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>{data.balanceRoot}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{data.stateRoot}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { LogoIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  margin: 0 0 48px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  @media screen and (max-width: 425px) {\n    margin: 0 0 32px;\n  }\n`;\n\nexport const CoinSymbolContainer = styled.div`\n  margin: 0 0 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 22px;\n  height: 22px;\n  background-color: #fff;\n  border-radius: 11px;\n`;\n\nexport const CoinName = styled.span`\n  margin: 0 0 0 8px;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const CoinIcon = styled(LogoIcon)``;\n\nexport const CoinDetailsContainer = styled.div`\n  margin: 0 0 40px;\n  padding: 20px 24px;\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const CoinDetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 24px;\n\n  :last-of-type {\n    margin: 0;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const KeyLabel = styled.span`\n  width: 260px;\n  display: block;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const KeyValue = styled.div`\n  width: calc(100% - 200px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 425px) {\n    margin: 4px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const ContractLink = styled(Link)`\n  display: inline-block;\n  width: 100%;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TableHeadlineDisclaimer = styled.span`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n`;\n\nexport const TableTabsContainer = styled.div`\n  position: relative;\n  display: flex;\n  margin: 0 0 4px;\n  ::after {\n    content: \"\";\n    position: absolute;\n    height: 1px;\n    left: -8px;\n    right: -8px;\n    bottom: 0;\n    background-color: #21302d;\n    z-index: -1;\n  }\n`;\n\nexport const TableTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  padding: 14px 18px 18px 18px;\n  min-width: 64px;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? \"#eafff8\" : \"#808080\")};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"solid 1px #f9fefc\" : \"solid 1px rgba(0, 0, 0, 0)\"};\n  text-shadow: ${({ isSelected }) => (isSelected ? \"0 0 6px #e9fff8\" : \"none\")};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n","export const Transactions: {\n  hash: string;\n  type: string;\n  timestamp: string;\n  subTransactions: {\n    from: string;\n    to?: string;\n    value?: number;\n    coin?: string;\n    fee?: number;\n  }[];\n}[] = [\n  {\n    hash: \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n    type: \"Script\",\n    timestamp: \"30 sec ago\",\n    subTransactions: [\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        to: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        value: 300,\n        coin: \"USDC\",\n        fee: 0.2,\n      },\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        to: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        value: 43,\n        coin: \"DAI\",\n      },\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        to: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        value: 0.00000123,\n        coin: \"ETH\",\n      },\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        to: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        value: 1246344,\n        coin: \"ETH\",\n      },\n    ],\n  },\n  {\n    hash: \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n    type: \"Script\",\n    timestamp: \"2 days 3 hrs ago\",\n    subTransactions: [\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        to: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        value: 300,\n        coin: \"USDC\",\n        fee: 1.44,\n      },\n    ],\n  },\n  {\n    hash: \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n    type: \"Create\",\n    timestamp: \"1 year 45 days ago\",\n    subTransactions: [\n      {\n        from: \"0xc5d2460186f7233c927e7db2dcc703c0e500\",\n        fee: 0.77,\n      },\n    ],\n  },\n];\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Header } from \"../../components/Header\";\nimport {\n  CoinDetailsContainer,\n  CoinDetailsRow,\n  KeyLabel,\n  KeyValue,\n  Container,\n  Content,\n  ContractLink,\n  TableHeadlineDisclaimer,\n  TableTabsContainer,\n  TableTabButton,\n} from \"./components\";\nimport {\n  TableContainer,\n  TableHeadlineContainer,\n  TableHeadlinerContentItem,\n  Table,\n  HeadlineHighlighedDisclaimer,\n  TableHeadRow,\n  TableHeadCell,\n  TableCell,\n  TableRow,\n  TransactionValue,\n  TxHash,\n  TableNavigationButtons,\n  TableNavigationNumbersContainer,\n  TableNavigationNumberButton,\n  TableNavigationTextButton,\n  TxRecipient,\n  BoldText,\n  CoinLink,\n  TableWrapper,\n  TableNextNavigationTextButton,\n  HeadlineContainer,\n  HeadlineAddressContainer,\n  HeadlineAddressHeader,\n  HeadlineAddressButton,\n  CopyButtonIcon,\n  HeadlineAddress,\n  Tooltip,\n  TokenButtonSymbol,\n  TokenButtonSeparator,\n  QRButtonIcon,\n  CoinsCounter,\n  TokenButton,\n  TokenButtonAmount,\n  TokenButtonIconContainer,\n  HeadlineCoinsContainer,\n  CoinsCounterLabel,\n  TokenDropdownContainer,\n  TokenDropdownIcon,\n} from \"../AddressPage/components\";\nimport { Transactions } from \"../AddressPage/constants\";\nimport { QRModal } from \"../../components/Modals/QRModal\";\n\nexport function ContractPage() {\n  const { contract } = useParams() as any;\n  const [copyTooltip] = useState(\"Copy address\");\n  const [modal, setModal] = useState(false);\n\n  function onClose() {\n    setModal(false);\n  }\n\n  function showModal() {\n    setModal(true);\n  }\n\n  function onClickCopy() {\n    navigator.clipboard.writeText(contract);\n  }\n\n  return (\n    <>\n      {modal && <QRModal onClose={onClose} address={contract} />}\n      <Header />\n      <Container>\n        <Content>\n          <HeadlineContainer>\n            <HeadlineAddressContainer>\n              <HeadlineAddressHeader>\n                {`Contract:  `}\n                <HeadlineAddress>{contract}</HeadlineAddress>\n              </HeadlineAddressHeader>\n              <HeadlineAddressButton\n                onClick={() => {\n                  onClickCopy();\n                }}\n              >\n                <CopyButtonIcon />\n                <Tooltip>{copyTooltip}</Tooltip>\n              </HeadlineAddressButton>\n              <HeadlineAddressButton onClick={showModal}>\n                <QRButtonIcon />\n                <Tooltip>Click to copy QR code</Tooltip>\n              </HeadlineAddressButton>\n            </HeadlineAddressContainer>\n            <HeadlineCoinsContainer>\n              <CoinsCounterLabel>\n                Coins:\n                <CoinsCounter>3</CoinsCounter>\n              </CoinsCounterLabel>\n              <TokenDropdownContainer>\n                <TokenButton>\n                  <TokenButtonSymbol>ETH:</TokenButtonSymbol>\n                  <TokenButtonAmount>435.3</TokenButtonAmount>\n                  <TokenButtonSeparator></TokenButtonSeparator>\n                  <TokenButtonIconContainer>\n                    <TokenDropdownIcon />\n                  </TokenButtonIconContainer>\n                </TokenButton>\n              </TokenDropdownContainer>\n            </HeadlineCoinsContainer>\n          </HeadlineContainer>\n          <CoinDetailsContainer>\n            <CoinDetailsRow>\n              <KeyLabel>Creation Tx hash::</KeyLabel>\n              <KeyValue>\n                <ContractLink to={`/transaction/0xc5d2460186f7233c927e7db2dcc703c0e500}`}>\n                  0xc5d2460186f7233c927e7db2dcc703c0e500\n                </ContractLink>\n              </KeyValue>\n            </CoinDetailsRow>\n            <CoinDetailsRow>\n              <KeyLabel>Created on::</KeyLabel>\n              <KeyValue>2020-06-05 13:40 (UTC) </KeyValue>\n            </CoinDetailsRow>\n          </CoinDetailsContainer>\n          <TransactionsTable />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nexport function TransactionsTable() {\n  function trimAddress(address: string) {\n    if (!address) {\n      return \"\";\n    }\n\n    return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n  }\n\n  return (\n    <TableContainer>\n      <TableTabsContainer>\n        <TableTabButton isSelected>Transactions</TableTabButton>\n        <TableTabButton>Info</TableTabButton>\n      </TableTabsContainer>\n      <TableHeadlineContainer>\n        <TableHeadlinerContentItem>\n          <TableHeadlineDisclaimer>\n            {`Showing `}\n            <HeadlineHighlighedDisclaimer>3</HeadlineHighlighedDisclaimer>\n            {` out of `}\n            <HeadlineHighlighedDisclaimer>3</HeadlineHighlighedDisclaimer>\n            {` transactions`}\n          </TableHeadlineDisclaimer>\n          <TableNavigation />\n        </TableHeadlinerContentItem>\n      </TableHeadlineContainer>\n      <TableWrapper>\n        <Table>\n          <TableHeadRow>\n            <TableHeadCell>Tx Hash</TableHeadCell>\n            <TableHeadCell>Type</TableHeadCell>\n            <TableHeadCell>Age</TableHeadCell>\n            <TableHeadCell>From</TableHeadCell>\n            <TableHeadCell>To</TableHeadCell>\n            <TableHeadCell>Value</TableHeadCell>\n            <TableHeadCell>Coin</TableHeadCell>\n            <TableHeadCell>Fee (USD)</TableHeadCell>\n          </TableHeadRow>\n          {Transactions.map((transaction, idx) => (\n            <TableRow key={idx}>\n              <TableCell>\n                <TxHash to={`/transaction/${transaction.hash}`}>{transaction.hash}</TxHash>\n              </TableCell>\n              <TableCell>{transaction.type}</TableCell>\n              <TableCell>{transaction.timestamp}</TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subtransaction, idx) => (\n                  <TxRecipient key={idx} to={`/address/${subtransaction.from}`}>\n                    {trimAddress(subtransaction.from)}\n                  </TxRecipient>\n                ))}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subtransaction, idx) =>\n                  subtransaction.to ? (\n                    <TxRecipient key={idx} to={`/address/${subtransaction.to}`}>\n                      {trimAddress(subtransaction.from)}\n                    </TxRecipient>\n                  ) : (\n                    <BoldText>N/A</BoldText>\n                  ),\n                )}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) => (\n                  <TransactionValue key={idx}>\n                    {subTransaction.value ? subTransaction.value : \"N/A\"}\n                  </TransactionValue>\n                ))}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) =>\n                  subTransaction.coin ? (\n                    <CoinLink key={idx} to={`/coin/${subTransaction.coin}`}>\n                      {subTransaction.coin ? subTransaction.coin : \"N/A\"}\n                    </CoinLink>\n                  ) : (\n                    <BoldText>N/A</BoldText>\n                  ),\n                )}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) => (\n                  <TransactionValue key={idx}>\n                    {subTransaction.fee ? `$${subTransaction.fee.toFixed(2)}` : \"\"}\n                  </TransactionValue>\n                ))}\n              </TableCell>\n            </TableRow>\n          ))}\n        </Table>\n      </TableWrapper>\n    </TableContainer>\n  );\n}\n\nfunction TableNavigation() {\n  const pages = [1, 2, 3, 4];\n  const [selectedPage, selectPage] = useState(1);\n\n  function onSelectPage(idx: number) {\n    selectPage(idx);\n  }\n\n  function onClickPrevPage() {\n    selectPage((prevPage) => prevPage - 1);\n  }\n\n  function onClickNextPage() {\n    selectPage((prevPage) => prevPage + 1);\n  }\n\n  function onClickLastPage() {\n    selectPage(pages[pages.length - 1]);\n  }\n\n  function onClickFirstPage() {\n    selectPage(1);\n  }\n\n  return (\n    <TableNavigationButtons>\n      <TableNavigationTextButton disabled={selectedPage === 1} onClick={onClickFirstPage}>\n        First\n      </TableNavigationTextButton>\n      <TableNextNavigationTextButton disabled={selectedPage === 1} onClick={onClickPrevPage}>\n        Previous\n      </TableNextNavigationTextButton>\n      <TableNavigationNumbersContainer>\n        {pages.map((pageIdx) => (\n          <TableNavigationNumberButton\n            key={pageIdx}\n            isSelected={pageIdx === selectedPage}\n            onClick={() => {\n              onSelectPage(pageIdx);\n            }}\n          >\n            {pageIdx}\n          </TableNavigationNumberButton>\n        ))}\n      </TableNavigationNumbersContainer>\n      <TableNextNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickNextPage}\n      >\n        Next\n      </TableNextNavigationTextButton>\n      <TableNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickLastPage}\n      >\n        Last\n      </TableNavigationTextButton>\n    </TableNavigationButtons>\n  );\n}\n","import { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport \"./App.css\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { AddressPage } from \"./pages/AddressPage\";\nimport { BlockPage } from \"./pages/BlockPage\";\nimport { TransactionPage } from \"./pages/TransactionPage\";\nimport { BlockTransactionsPage } from \"./pages/BlockTransactionsPage\";\nimport { CreateTransactionPage } from \"./pages/CreateTransactionPage\";\nimport { ContractPage } from \"./pages/ContractPage\";\nimport { ChainProvider } from \"./contexts/network\";\n\nconst { REACT_APP_GRAPHQL_API_ENDPOINT, PUBLIC_URL } = process.env;\n\nconst client = new ApolloClient({\n  uri: REACT_APP_GRAPHQL_API_ENDPOINT,\n  cache: new InMemoryCache(),\n  // We can configure for each schema the keys to cache, without\n  // this config for each one objects without id, will not work\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: \"no-cache\",\n      errorPolicy: \"ignore\",\n    },\n    query: {\n      fetchPolicy: \"no-cache\",\n      errorPolicy: \"all\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ChainProvider>\n        <Router basename={PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path={\"/address/:address\"} component={AddressPage} />\n            <Route path={\"/block/:block/transactions\"} component={BlockTransactionsPage} />\n            <Route path={\"/block/:block\"} component={BlockPage} />\n            <Route path={\"/transaction/:transaction\"} component={TransactionPage} />\n            <Route path={\"/create-transaction/:transaction\"} component={CreateTransactionPage} />\n            <Route path={\"/contract/:contract\"} component={ContractPage} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </ChainProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./resources/fonts\";\nimport \"./fonts.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}