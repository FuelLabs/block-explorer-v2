{"version":3,"file":"static/js/910.684f65ef.chunk.js","mappings":"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","sources":["pages/CreateTransactionPage/components.tsx","utils.ts","pages/TransactionPage/__generated__/operations.ts","pages/TransactionPage/components.tsx","pages/TransactionPage/index.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { ArrowIcon, FileIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled.div`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    padding: 8px 0;\n  }\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 280px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 220px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin: 0 0 4px;\n    width: 100%;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  width: calc(100% - 280px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 220px);\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport const WrapText = styled.span`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const RowValueLink = styled(Link)`\n  display: block;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? \"#1e2e2b\" : \"#081C17\")};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  max-width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    max-width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled.div`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  flex: 0 0 140px;\n\n  @media screen and (max-width: 425px) {\n    flex: 0 0 120px;\n  }\n`;\n\nexport const UTXODetailsValue = styled.span`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 24px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? \"#eafff8\" : \"#808080\")};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"solid 1px #f9fefc\" : \"solid 1px rgba(0, 0, 0, 0)\"};\n  text-shadow: ${({ isSelected }) => (isSelected ? \"0 0 6px #e9fff8\" : \"none\")};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const Witnesses = styled.div``;\n\nexport const WitnessContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 0 2px;\n`;\n\nexport const WitnessIndex = styled.span`\n  flex-shrink: 0;\n  width: 24px;\n  text-align: center;\n`;\n\nexport const WitnessIconContainer = styled.div`\n  flex-shrink: 0;\n  margin: 0 6px;\n  width: 14px;\n  height: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 7px;\n  background-color: #1e2e2b;\n`;\n\nexport const WitnessIcon = styled(FileIcon)`\n  width: 8px !important;\n  width: 8px !important;\n  color: #f8fefc;\n`;\n\nexport const WitnessAddress = styled.span`\n  flex: 1 1 0;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","export const trimAddress = (address: string) => {\n  if (!address) {\n    return '';\n  }\n\n  return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n};\n","import type * as Types from '../../../api/__generated__/types';\n\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport type TransactionPageQueryVariables = Types.Exact<{\n  id: Types.Scalars['TransactionId'];\n}>;\n\n\nexport type TransactionPageQuery = { __typename: 'Query', transaction?: { __typename: 'Transaction', id: string, inputAssetIds: Array<string>, gasPrice: string, gasLimit: string, maturity: string, isScript: boolean, receiptsRoot?: string | null, script?: string | null, scriptData?: string | null, witnesses: Array<string>, bytecodeWitnessIndex?: number | null, inputContracts: Array<{ __typename: 'Contract', id: string, bytecode: string }>, staticContracts?: Array<{ __typename: 'Contract', id: string, bytecode: string }> | null, outputs: Array<{ __typename: 'ChangeOutput', to: string, amount: string, assetId: string } | { __typename: 'CoinOutput', to: string, amount: string, assetId: string } | { __typename: 'ContractCreated', contract: { __typename: 'Contract', id: string } } | { __typename: 'ContractOutput', inputIndex: number, balanceRoot: string, stateRoot: string } | { __typename: 'VariableOutput', to: string, amount: string, assetId: string } | { __typename: 'WithdrawalOutput', to: string, amount: string, assetId: string }>, inputs: Array<{ __typename: 'InputCoin', utxoId: string, owner: string, amount: string, assetId: string, witnessIndex: number, maturity: string, predicate: string, predicateData: string } | { __typename: 'InputContract', utxoId: string, balanceRoot: string, stateRoot: string, contract: { __typename: 'Contract', id: string } }>, status?: { __typename: 'FailureStatus', time: string } | { __typename: 'SubmittedStatus', time: string } | { __typename: 'SuccessStatus', time: string } | null } | null };\n\nexport type InputFragment_InputCoin_ = { __typename: 'InputCoin', utxoId: string, owner: string, amount: string, assetId: string, witnessIndex: number, maturity: string, predicate: string, predicateData: string };\n\nexport type InputFragment_InputContract_ = { __typename: 'InputContract', utxoId: string, balanceRoot: string, stateRoot: string, contract: { __typename: 'Contract', id: string } };\n\nexport type InputFragment = InputFragment_InputCoin_ | InputFragment_InputContract_;\n\nexport type OutputFragment_ChangeOutput_ = { __typename: 'ChangeOutput', to: string, amount: string, assetId: string };\n\nexport type OutputFragment_CoinOutput_ = { __typename: 'CoinOutput', to: string, amount: string, assetId: string };\n\nexport type OutputFragment_ContractCreated_ = { __typename: 'ContractCreated', contract: { __typename: 'Contract', id: string } };\n\nexport type OutputFragment_ContractOutput_ = { __typename: 'ContractOutput', inputIndex: number, balanceRoot: string, stateRoot: string };\n\nexport type OutputFragment_VariableOutput_ = { __typename: 'VariableOutput', to: string, amount: string, assetId: string };\n\nexport type OutputFragment_WithdrawalOutput_ = { __typename: 'WithdrawalOutput', to: string, amount: string, assetId: string };\n\nexport type OutputFragment = OutputFragment_ChangeOutput_ | OutputFragment_CoinOutput_ | OutputFragment_ContractCreated_ | OutputFragment_ContractOutput_ | OutputFragment_VariableOutput_ | OutputFragment_WithdrawalOutput_;\n\nexport const InputFragmentDoc = gql`\n    fragment InputFragment on Input {\n  ... on InputCoin {\n    utxoId\n    owner\n    amount\n    assetId\n    witnessIndex\n    maturity\n    predicate\n    predicateData\n  }\n  ... on InputContract {\n    utxoId\n    balanceRoot\n    stateRoot\n    contract {\n      id\n    }\n  }\n}\n    `;\nexport const OutputFragmentDoc = gql`\n    fragment OutputFragment on Output {\n  ... on CoinOutput {\n    to\n    amount\n    assetId\n  }\n  ... on ContractOutput {\n    inputIndex\n    balanceRoot\n    stateRoot\n  }\n  ... on WithdrawalOutput {\n    to\n    amount\n    assetId\n  }\n  ... on ChangeOutput {\n    to\n    amount\n    assetId\n  }\n  ... on VariableOutput {\n    to\n    amount\n    assetId\n  }\n  ... on ContractCreated {\n    contract {\n      id\n    }\n  }\n}\n    `;\nexport const TransactionPageQueryDocument = gql`\n    query TransactionPageQuery($id: TransactionId!) {\n  transaction(id: $id) {\n    id\n    inputContracts {\n      id\n      bytecode\n    }\n    staticContracts {\n      id\n      bytecode\n    }\n    inputAssetIds\n    gasPrice\n    gasLimit\n    maturity\n    isScript\n    receiptsRoot\n    script\n    scriptData\n    witnesses\n    bytecodeWitnessIndex\n    outputs {\n      ...OutputFragment\n    }\n    inputs {\n      ...InputFragment\n    }\n    status {\n      ... on SubmittedStatus {\n        time\n      }\n      ... on SuccessStatus {\n        time\n      }\n      ... on FailureStatus {\n        time\n      }\n    }\n  }\n}\n    ${OutputFragmentDoc}\n${InputFragmentDoc}`;\n\n/**\n * __useTransactionPageQuery__\n *\n * To run a query within a React component, call `useTransactionPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useTransactionPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTransactionPageQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useTransactionPageQuery(baseOptions: Apollo.QueryHookOptions<TransactionPageQuery, TransactionPageQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<TransactionPageQuery, TransactionPageQueryVariables>(TransactionPageQueryDocument, options);\n      }\nexport function useTransactionPageQueryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<TransactionPageQuery, TransactionPageQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<TransactionPageQuery, TransactionPageQueryVariables>(TransactionPageQueryDocument, options);\n        }\nexport type TransactionPageQueryHookResult = ReturnType<typeof useTransactionPageQuery>;\nexport type TransactionPageQueryLazyQueryHookResult = ReturnType<typeof useTransactionPageQueryLazyQuery>;\nexport type TransactionPageQueryQueryResult = Apollo.QueryResult<TransactionPageQuery, TransactionPageQueryVariables>;","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { ButtonReset } from \"../../components/Button/components\";\nimport { ArrowIcon } from \"../../components/Icons\";\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: baseline;\n  margin: 0 0 40px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  span:first-of-type {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TitleTransaction = styled.span`\n  width: calc(100% - 160px);\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  @media screen and (max-width: 425px) {\n    margin: 8px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const TransactionDataContainer = styled.div`\n  margin: 0 0 36px;\n  padding: 16px 32px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  border: solid 0.5px #808080;\n  border-radius: 8px;\n\n  @media screen and (max-width: 425px) {\n    padding: 12px 24px;\n  }\n`;\n\nexport const TransactionDataRow = styled.div`\n  padding: 12px 0;\n  display: flex;\n`;\n\nexport const RowKeyColumn = styled.div`\n  width: 250px;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 160px;\n  }\n\n  @media screen and (max-width: 425px) {\n    width: 128px;\n  }\n`;\n\nexport const RowValueColumn = styled.div`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n`;\n\nexport const TransactionStatus = styled.span`\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: #58c09b;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #021d17;\n`;\n\nexport const BaseLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOContainer = styled.div``;\n\nexport const DetailsButtonContainer = styled.div`\n  margin: 0 0 36px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const DetailsButton = styled(ButtonReset)<{ isActive?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 1px;\n  border: solid 1px #57c09b;\n  background-color: ${({ isActive }) => (isActive ? \"#1e2e2b\" : \"#081C17\")};\n  font-family: SFProDisplay;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 13px;\n  color: #57c09b;\n\n  :hover {\n    background-color: #1e2e2b;\n  }\n\n  :active {\n    background-color: #294842;\n  }\n\n  svg {\n    width: 12px !important;\n    height: 12px !important;\n    margin: 0 0 0 6px;\n  }\n`;\n\nexport const UTXOBoxesContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const UTXOBoxesColumn = styled.div`\n  width: calc((100% - 98px) / 2);\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\nexport const UTXOSeparatorColumn = styled.div`\n  margin: 0 34px;\n\n  @media screen and (max-width: 768px) {\n    margin: 4px auto 24px;\n  }\n`;\nexport const UTXOBoxContainer = styled.div`\n  margin: 0 0 24px;\n  border: solid 3px #03261e;\n`;\n\nexport const UTXOHeadlineContainer = styled.div`\n  padding: 16px 16px 16px 24px;\n  display: flex;\n  justify-content: space-between;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n  background-color: #03261e;\n`;\n\nexport const UTXOHeadlineColumn = styled.div`\n  width: calc(100% - 100px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const UTXOHeadlineColumn2 = styled.div`\n  width: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const UTXOTitle = styled.span`\n  margin: 0 0 6px;\n  display: block;\n  font-weight: 600;\n`;\n\nexport const UTXOHash = styled(BaseLink)`\n  display: block;\n  font-size: 13px;\n  line-height: 15px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const HeadlineText = styled.span`\n  display: block;\n`;\n\nexport const UTXODetailsContainer = styled.div`\n  padding: 32px 16px 24px 40px;\n\n  @media screen and (max-width: 425px) {\n    padding: 24px 16px 24px 24px;\n  }\n`;\n\nexport const UTXODetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 16px;\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 15px;\n  color: #f8fefc;\n\n  :last-of-type {\n    margin: 0;\n  }\n`;\n\nexport const UTXODetailsKey = styled.span`\n  display: block;\n  width: 170px;\n`;\n\nexport const UTXODetailsLink = styled(Link)`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: 500;\n  color: #58c09b;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const UTXOSeparatorArrow = styled(ArrowIcon)`\n  margin: 72px 0 0;\n  width: 26px !important;\n  height: 26px !important;\n  color: #58c09b;\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n    transform: rotate(90deg);\n  }\n`;\n\nexport const ScriptsContainer = styled.div`\n  margin: 12px 0 0;\n`;\n\nexport const ScriptTitle = styled.span`\n  display: block;\n  margin: 0 0 28px;\n  font-family: SFProText;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 21px;\n  color: #f8fefc;\n`;\n\nexport const ScriptContainer = styled.div`\n  margin: 0 0 36px;\n  max-width: 442px;\n  border: solid 1px #1e2e2b;\n`;\n\nexport const ScriptTabsContainer = styled.div`\n  display: flex;\n`;\n\nexport const ScriptTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  flex: 1 1 0;\n  padding: 12px 0;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? \"#eafff8\" : \"#808080\")};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"solid 1px #f9fefc\" : \"solid 1px rgba(0, 0, 0, 0)\"};\n  text-shadow: ${({ isSelected }) => (isSelected ? \"0 0 6px #e9fff8\" : \"none\")};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n\nexport const ScriptPlaceholder = styled.div`\n  height: 236px;\n  background-color: #1e2e2b;\n`;\n\nexport const ScriptTextarea = styled.textarea`\n  padding: 24px;\n  height: 200px;\n  width: 100%;\n  background-color: #03261e;\n  border: 0;\n  color: #ffffff;\n  resize: none;\n  font-family: SFProDisplay;\n\n  :focus {\n    border: 0;\n    outline: 0;\n  }\n`;\n\nexport const ContractTextarea = styled.textarea`\n  height: 200px;\n  width: 100%;\n  background-color: transparent;\n  border: 0;\n  color: #ffffff;\n  resize: none;\n  font-family: SFProDisplay;\n\n  :focus {\n    border: 0;\n    outline: 0;\n  }\n`;\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Header } from \"../../components/Header\";\nimport { ExpandIcon, ShrinkIcon } from \"../../components/Icons\";\nimport { trimAddress } from \"../../utils\";\nimport { UTXODetailsValue } from \"../CreateTransactionPage/components\";\n\nimport type { InputFragment, OutputFragment } from \"./__generated__/operations\";\nimport { useTransactionPageQuery } from \"./__generated__/operations\";\nimport {\n  Container,\n  Content,\n  RowKeyColumn,\n  RowValueColumn,\n  Title,\n  TitleTransaction,\n  TransactionDataContainer,\n  TransactionDataRow,\n  TransactionStatus,\n  UTXOContainer,\n  DetailsButtonContainer,\n  DetailsButton,\n  UTXOBoxesContainer,\n  UTXOBoxesColumn,\n  UTXOBoxContainer,\n  UTXOHeadlineContainer,\n  UTXOHeadlineColumn,\n  UTXOTitle,\n  UTXOHash,\n  HeadlineText,\n  UTXODetailsContainer,\n  UTXODetailsRow,\n  UTXODetailsKey,\n  UTXODetailsLink,\n  UTXOSeparatorColumn,\n  UTXOSeparatorArrow,\n  ScriptsContainer,\n  ScriptTitle,\n  ScriptContainer,\n  ScriptTabsContainer,\n  ScriptTabButton,\n  ScriptTextarea,\n  UTXOHeadlineColumn2,\n  ContractTextarea,\n} from \"./components\";\n\nexport default function TransactionPage() {\n  const { transaction } = useParams() as any;\n  const { data } = useTransactionPageQuery({ variables: { id: transaction } });\n  const tx = data?.transaction;\n\n  if (!tx) return null;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Content>\n          <Title>\n            <span>Transaction:</span>\n            <TitleTransaction>{transaction}</TitleTransaction>\n          </Title>\n          <TransactionDataContainer>\n            <TransactionDataRow>\n              <RowKeyColumn>Type:</RowKeyColumn>\n              <RowValueColumn>\n                {tx.isScript ? \"Script\" : \"Create\"}\n              </RowValueColumn>\n            </TransactionDataRow>\n            {tx.status ? (\n              <TransactionDataRow>\n                <RowKeyColumn>Status:</RowKeyColumn>\n                <TransactionStatus>\n                  {tx.status.__typename.replace(\"Status\", \"\")}\n                </TransactionStatus>\n              </TransactionDataRow>\n            ) : null}\n            <TransactionDataRow>\n              <RowKeyColumn>Maturity:</RowKeyColumn>\n              <RowValueColumn>{tx.maturity}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Price:</RowKeyColumn>\n              <RowValueColumn>{tx.gasPrice}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Limit:</RowKeyColumn>\n              <RowValueColumn>{tx.gasLimit}</RowValueColumn>\n            </TransactionDataRow>\n            <TransactionDataRow>\n              <RowKeyColumn>Gas Used:</RowKeyColumn>\n              <RowValueColumn>0</RowValueColumn>\n            </TransactionDataRow>\n          </TransactionDataContainer>\n          <UTXOComponent outputs={tx.outputs || []} inputs={tx.inputs || []} />\n          {tx.isScript ? (\n            <ScriptsComponent tx={tx} />\n          ) : (\n            <ContractComponent tx={tx} />\n          )}\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nfunction ContractComponent({ tx }: { tx: any }) {\n  return tx.witnesses.map((witness: string, index: number) => (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Witness #{index}</UTXOTitle>\n        </UTXOHeadlineColumn>\n      </UTXOHeadlineContainer>\n      <UTXODetailsContainer>\n        <ContractTextarea readOnly value={witness} />\n      </UTXODetailsContainer>\n    </UTXOBoxContainer>\n  ));\n}\n\nfunction ScriptsComponent({ tx }: { tx: any }) {\n  return (\n    <ScriptsContainer>\n      <ScriptTitle>Script Byte Code:</ScriptTitle>\n      <ScriptComponent tabs={[\"Assembly\", \"Hex\"]} contents={[\"\", tx.script]} />\n      <ScriptTitle>Script Data:</ScriptTitle>\n      <ScriptComponent\n        tabs={[\"ABI Decoded\", \"Raw Hex\"]}\n        contents={[\"\", tx.scriptData]}\n      />\n    </ScriptsContainer>\n  );\n}\n\nfunction ScriptComponent({\n  tabs,\n  contents,\n}: {\n  tabs: string[];\n  contents: string[];\n}) {\n  const [selectedTab, setSelectedTab] = useState(1);\n\n  return (\n    <ScriptContainer>\n      <ScriptTabsContainer>\n        {tabs.map((tabItem, idx) => (\n          <ScriptTabButton\n            key={idx}\n            isSelected={selectedTab === idx}\n            onClick={() => {\n              setSelectedTab(idx);\n            }}\n          >\n            {tabItem}\n          </ScriptTabButton>\n        ))}\n      </ScriptTabsContainer>\n      <ScriptTextarea readOnly value={contents[selectedTab]} />\n    </ScriptContainer>\n  );\n}\n\nfunction UTXOComponent({\n  inputs,\n  outputs,\n}: {\n  inputs: InputFragment[];\n  outputs: OutputFragment[];\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  const onClickDetails = () => {\n    setExpanded((prevExpanded) => !prevExpanded);\n  };\n\n  if (!outputs.length) return null;\n\n  return (\n    <UTXOContainer>\n      <DetailsButtonContainer>\n        <DetailsButton onClick={onClickDetails} isActive={expanded}>\n          DETAILS\n          {expanded ? <ShrinkIcon /> : <ExpandIcon />}\n        </DetailsButton>\n      </DetailsButtonContainer>\n      <UTXOBoxesContainer>\n        <UTXOBoxesColumn>\n          {inputs.map((input, idx) => (\n            <UTXOInputBox\n              key={idx}\n              idx={idx}\n              input={input}\n              expanded={expanded}\n            />\n          ))}\n        </UTXOBoxesColumn>\n        <UTXOSeparatorColumn>\n          <UTXOSeparatorArrow />\n        </UTXOSeparatorColumn>\n        <UTXOBoxesColumn>\n          {outputs.map((output, idx) => (\n            <UTXOOutputBox\n              key={idx}\n              index={idx}\n              output={output}\n              expanded={expanded}\n            />\n          ))}\n        </UTXOBoxesColumn>\n      </UTXOBoxesContainer>\n    </UTXOContainer>\n  );\n}\n\nfunction UTXOInputBox({\n  input,\n  expanded,\n  idx,\n}: {\n  input: InputFragment;\n  expanded: boolean;\n  idx: number;\n}) {\n  switch (input.__typename) {\n    case \"InputCoin\": {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHash to={`/transaction/${input.utxoId}`}>\n                {input.utxoId}\n              </UTXOHash>\n            </UTXOHeadlineColumn>\n            <UTXOHeadlineColumn2>\n              <HeadlineText>Value</HeadlineText>\n              <HeadlineText>{input.amount}</HeadlineText>\n            </UTXOHeadlineColumn2>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Owner:</UTXODetailsKey>\n                <UTXODetailsLink to={`/address/${input.utxoId}`}>\n                  {trimAddress(input.owner)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Amount:</UTXODetailsKey>\n                {input.amount}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Coin:</UTXODetailsKey>\n                <UTXODetailsLink to={`/coin/${input.assetId}`}>\n                  {trimAddress(input.assetId)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate bytecode:</UTXODetailsKey>\n                {input.predicate}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate data:</UTXODetailsKey>\n                {input.predicateData}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Predicate length:</UTXODetailsKey>\n                {0}\n                {/* {TBD} */}\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Witness Index:</UTXODetailsKey>\n                {input.witnessIndex}\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    case \"InputContract\": {\n      return (\n        <UTXOBoxContainer>\n          <UTXOHeadlineContainer>\n            <UTXOHeadlineColumn>\n              <UTXOTitle>{`Input #${idx}`}</UTXOTitle>\n              <UTXOHash to={`/transaction/${input.utxoId}`}>\n                {input.utxoId}\n              </UTXOHash>\n            </UTXOHeadlineColumn>\n          </UTXOHeadlineContainer>\n          {expanded && (\n            <UTXODetailsContainer>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n                <UTXODetailsLink to={`/contract/${input.contract.id}`}>\n                  {trimAddress(input.contract.id)}\n                </UTXODetailsLink>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n                <UTXODetailsValue>\n                  {trimAddress(input.balanceRoot)}\n                </UTXODetailsValue>\n              </UTXODetailsRow>\n              <UTXODetailsRow>\n                <UTXODetailsKey>State Root:</UTXODetailsKey>\n                <UTXODetailsValue>\n                  {trimAddress(input.stateRoot)}\n                </UTXODetailsValue>\n              </UTXODetailsRow>\n            </UTXODetailsContainer>\n          )}\n        </UTXOBoxContainer>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutput({ output }: { output: OutputFragment }) {\n  switch (output.__typename) {\n    case \"ContractCreated\": {\n      return (\n        <UTXODetailsRow>\n          <UTXODetailsKey>Contract Id:</UTXODetailsKey>\n          <UTXODetailsLink to={`/contract/${output.contract.id}`}>\n            {output.contract.id}\n          </UTXODetailsLink>\n        </UTXODetailsRow>\n      );\n    }\n    case \"ContractOutput\": {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Balance Root:</UTXODetailsKey>\n            <UTXODetailsValue>\n              {trimAddress(output.balanceRoot)}\n            </UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>State Root:</UTXODetailsKey>\n            <UTXODetailsValue>{trimAddress(output.stateRoot)}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Input index:</UTXODetailsKey>\n            <UTXODetailsValue>{output.inputIndex}</UTXODetailsValue>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    case \"CoinOutput\":\n    case \"ChangeOutput\": {\n      return (\n        <>\n          <UTXODetailsRow>\n            <UTXODetailsKey>To:</UTXODetailsKey>\n            <UTXODetailsLink to={`/address/${output.to}`}>\n              {trimAddress(output.to)}\n            </UTXODetailsLink>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Amount:</UTXODetailsKey>\n            <UTXODetailsValue>{output.amount}</UTXODetailsValue>\n          </UTXODetailsRow>\n          <UTXODetailsRow>\n            <UTXODetailsKey>Coin:</UTXODetailsKey>\n            <UTXODetailsLink to={`/coin/${output.assetId}`}>\n              {trimAddress(output.assetId)}\n            </UTXODetailsLink>\n          </UTXODetailsRow>\n        </>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nfunction UTXOOutputBox({\n  output,\n  expanded,\n  index,\n}: {\n  output: OutputFragment;\n  expanded: boolean;\n  index: number;\n}) {\n  return (\n    <UTXOBoxContainer>\n      <UTXOHeadlineContainer>\n        <UTXOHeadlineColumn>\n          <UTXOTitle>Output #{index}</UTXOTitle>\n          <UTXOHash to=\"/\">{output.__typename}</UTXOHash>\n        </UTXOHeadlineColumn>\n        {output.__typename === \"CoinOutput\" && (\n          <UTXOHeadlineColumn2>\n            <HeadlineText>Amount</HeadlineText>\n            <HeadlineText>{output.amount}</HeadlineText>\n          </UTXOHeadlineColumn2>\n        )}\n      </UTXOHeadlineContainer>\n      {expanded && (\n        <UTXODetailsContainer>\n          <UTXOOutput output={output} />\n        </UTXODetailsContainer>\n      )}\n    </UTXOBoxContainer>\n  );\n}\n"],"names":["Container","styled","Content","Title","TitleTransaction","TransactionDataContainer","TransactionDataRow","RowKeyColumn","RowValueColumn","WrapText","RowValueLink","Link","BaseLink","UTXOContainer","DetailsButtonContainer","DetailsButton","ButtonReset","isActive","UTXOBoxesContainer","UTXOBoxesColumn","UTXOSeparatorColumn","UTXOBoxContainer","UTXOHeadlineContainer","UTXOHeadlineColumn","UTXOTitle","UTXOHash","UTXODetailsContainer","UTXODetailsRow","UTXODetailsKey","UTXODetailsValue","UTXODetailsLink","UTXOSeparatorArrow","ArrowIcon","WitnessContainer","isSelected","WitnessIndex","WitnessIconContainer","WitnessIcon","FileIcon","WitnessAddress","trimAddress","address","slice","length","defaultOptions","InputFragmentDoc","gql","OutputFragmentDoc","TransactionPageQueryDocument","TransactionStatus","UTXOHeadlineColumn2","HeadlineText","ScriptsContainer","ScriptTitle","ScriptContainer","ScriptTabsContainer","ScriptTabButton","ScriptTextarea","ContractTextarea","TransactionPage","transaction","useParams","data","baseOptions","options","Apollo","useTransactionPageQuery","variables","id","tx","Header","isScript","status","__typename","replace","maturity","gasPrice","gasLimit","UTXOComponent","outputs","inputs","ScriptsComponent","ContractComponent","witnesses","map","witness","index","readOnly","value","ScriptComponent","tabs","contents","script","scriptData","useState","selectedTab","setSelectedTab","tabItem","idx","onClick","expanded","setExpanded","prevExpanded","input","UTXOInputBox","output","UTXOOutputBox","to","utxoId","amount","owner","assetId","predicate","predicateData","witnessIndex","contract","balanceRoot","stateRoot","UTXOOutput","inputIndex"],"sourceRoot":""}