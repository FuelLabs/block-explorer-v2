{"version":3,"file":"static/js/343.17ad460a.chunk.js","mappings":"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","sources":["components/Modals/QRModal/components.tsx","components/Modals/QRModal/index.tsx","pages/AddressPage/constants.ts","pages/ContractPage/components.tsx","pages/ContractPage/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 40px 48px;\n  width: 100%;\n  max-width: 432px;\n  border-radius: 6px;\n  box-shadow: 0 0 25px 0 #58c09b;\n  border: solid 1px #58c09c;\n  background-color: #021d17;\n\n  @media screen and (max-width: 425px) {\n    padding: 0 24px 48px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 20px 0;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  text-align: center;\n  color: #f8fefc;\n`;\n\nexport const QRAddress = styled.p`\n  margin: 16px 0 40px;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  text-align: center;\n  color: #f8fefc;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const QRCodeContainer = styled.div`\n  margin: 0 auto;\n  width: fit-content;\n`;\n","import QRCode from 'qrcode.react';\nimport { useRef } from 'react';\n\nimport { useOnClickOutside } from '../../../hooks';\nimport { Modal } from '../Base';\n\nimport { Title, Container, QRAddress, QRCodeContainer } from './components';\n\ninterface Props {\n  onClose: () => void;\n  address: string;\n}\n\nexport function QRModal(props: Props) {\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useOnClickOutside(contentRef, onClickOutside);\n\n  function onClickOutside() {\n    props.onClose();\n  }\n\n  return (\n    <Modal>\n      <Container ref={contentRef}>\n        <Title>QR Code</Title>\n        <QRAddress>{props.address}</QRAddress>\n        <QRCodeContainer>\n          <QRCode value={props.address} fgColor=\"#f8fefc\" bgColor=\"#021d17\" />\n        </QRCodeContainer>\n      </Container>\n    </Modal>\n  );\n}\n","export const Transactions: {\n  hash: string;\n  type: string;\n  timestamp: string;\n  subTransactions: {\n    from: string;\n    to?: string;\n    value?: number;\n    coin?: string;\n    fee?: number;\n  }[];\n}[] = [\n  {\n    hash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',\n    type: 'Script',\n    timestamp: '30 sec ago',\n    subTransactions: [\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        to: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        value: 300,\n        coin: 'USDC',\n        fee: 0.2,\n      },\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        to: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        value: 43,\n        coin: 'DAI',\n      },\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        to: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        value: 0.00000123,\n        coin: 'ETH',\n      },\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        to: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        value: 1246344,\n        coin: 'ETH',\n      },\n    ],\n  },\n  {\n    hash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',\n    type: 'Script',\n    timestamp: '2 days 3 hrs ago',\n    subTransactions: [\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        to: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        value: 300,\n        coin: 'USDC',\n        fee: 1.44,\n      },\n    ],\n  },\n  {\n    hash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470',\n    type: 'Create',\n    timestamp: '1 year 45 days ago',\n    subTransactions: [\n      {\n        from: '0xc5d2460186f7233c927e7db2dcc703c0e500',\n        fee: 0.77,\n      },\n    ],\n  },\n];\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { ButtonReset } from '../../components/Button/components';\nimport { LogoIcon } from '../../components/Icons';\nimport { StandardSurface } from '../../components/Surface/components';\n\nexport const Container = styled.section``;\n\nexport const Content = styled.div`\n  padding: 56px 32px;\n  width: 100%;\n  max-width: 1240px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 425px) {\n    padding: 40px 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  margin: 0 0 48px;\n  font-family: SFProDisplay;\n  font-size: 25px;\n  font-weight: 600;\n  line-height: 30px;\n  color: #f8fefc;\n  white-space: break-spaces;\n\n  @media screen and (max-width: 425px) {\n    margin: 0 0 32px;\n  }\n`;\n\nexport const CoinSymbolContainer = styled.div`\n  margin: 0 0 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 22px;\n  height: 22px;\n  background-color: #fff;\n  border-radius: 11px;\n`;\n\nexport const CoinName = styled.span`\n  margin: 0 0 0 8px;\n  font-family: SFProText;\n  font-size: 17px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n`;\n\nexport const CoinIcon = styled(LogoIcon)``;\n\nexport const CoinDetailsContainer = styled(StandardSurface)`\n  margin: 0 0 40px;\n  padding: 20px 24px;\n  border: solid 1px #808080;\n  border-radius: 8px;\n`;\n\nexport const CoinDetailsRow = styled.div`\n  display: flex;\n  margin: 0 0 24px;\n\n  :last-of-type {\n    margin: 0;\n  }\n\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n`;\n\nexport const KeyLabel = styled.span`\n  width: 260px;\n  display: block;\n  font-family: SFProText;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const KeyValue = styled.div`\n  width: calc(100% - 200px);\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #f8fefc;\n\n  @media screen and (max-width: 425px) {\n    margin: 4px 0 0;\n    width: 100%;\n  }\n`;\n\nexport const ContractLink = styled(Link)`\n  display: inline-block;\n  width: 100%;\n  font-family: SFProText;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 18px;\n  color: #58c09b;\n  transition: 0.2s ease-out;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  :hover {\n    text-shadow: 0 0 6px #58c09b;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #4fad83;\n    color: #4fad83;\n  }\n`;\n\nexport const TableHeadlineDisclaimer = styled.span`\n  font-family: SFProText;\n  font-size: 13px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  color: #808080;\n`;\n\nexport const TableTabsContainer = styled.div`\n  position: relative;\n  display: flex;\n  margin: 0 0 4px;\n  ::after {\n    content: '';\n    position: absolute;\n    height: 1px;\n    left: -8px;\n    right: -8px;\n    bottom: 0;\n    background-color: #21302d;\n    z-index: -1;\n  }\n`;\n\nexport const TableTabButton = styled(ButtonReset)<{ isSelected?: boolean }>`\n  padding: 14px 18px 18px 18px;\n  min-width: 64px;\n  justify-content: center;\n  font-family: SFProText;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 500;\n  color: ${({ isSelected }) => (isSelected ? '#eafff8' : '#808080')};\n  transition: 0.2s ease-out;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? 'solid 1px #f9fefc' : 'solid 1px rgba(0, 0, 0, 0)'};\n  text-shadow: ${({ isSelected }) => (isSelected ? '0 0 6px #e9fff8' : 'none')};\n\n  :hover {\n    text-shadow: 0 0 6px #f9fefc;\n    color: #f8fefc;\n  }\n\n  :active {\n    text-shadow: 0 0 6px #e9fff8;\n    color: #eafff8;\n  }\n`;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Header } from '../../components/Header';\nimport { QRModal } from '../../components/Modals/QRModal';\nimport {\n  TableContainer,\n  TableHeadlineContainer,\n  TableHeadlinerContentItem,\n  Table,\n  HeadlineHighlighedDisclaimer,\n  TableHeadRow,\n  TableHeadCell,\n  TableCell,\n  TableRow,\n  TransactionValue,\n  TxHash,\n  TableNavigationButtons,\n  TableNavigationNumbersContainer,\n  TableNavigationNumberButton,\n  TableNavigationTextButton,\n  TxRecipient,\n  BoldText,\n  CoinLink,\n  TableWrapper,\n  TableNextNavigationTextButton,\n  HeadlineContainer,\n  HeadlineAddressContainer,\n  HeadlineAddressHeader,\n  HeadlineAddressButton,\n  CopyButtonIcon,\n  HeadlineAddress,\n  Tooltip,\n  TokenButtonSymbol,\n  TokenButtonSeparator,\n  QRButtonIcon,\n  CoinsCounter,\n  TokenButton,\n  TokenButtonAmount,\n  TokenButtonIconContainer,\n  HeadlineCoinsContainer,\n  CoinsCounterLabel,\n  TokenDropdownContainer,\n  TokenDropdownIcon,\n} from '../AddressPage/components';\nimport { Transactions } from '../AddressPage/constants';\n\nimport {\n  CoinDetailsContainer,\n  CoinDetailsRow,\n  KeyLabel,\n  KeyValue,\n  Container,\n  Content,\n  ContractLink,\n  TableHeadlineDisclaimer,\n  TableTabsContainer,\n  TableTabButton,\n} from './components';\n\nexport default function ContractPage() {\n  const { contract } = useParams() as any;\n  const [copyTooltip] = useState('Copy address');\n  const [modal, setModal] = useState(false);\n\n  const onClose = () => {\n    setModal(false);\n  };\n\n  const showModal = () => {\n    setModal(true);\n  };\n\n  const onClickCopy = () => {\n    navigator.clipboard.writeText(contract);\n  };\n\n  return (\n    <>\n      {modal && <QRModal onClose={onClose} address={contract} />}\n      <Header />\n      <Container>\n        <Content>\n          <HeadlineContainer>\n            <HeadlineAddressContainer>\n              <HeadlineAddressHeader>\n                {`Contract:  `}\n                <HeadlineAddress>{contract}</HeadlineAddress>\n              </HeadlineAddressHeader>\n              <HeadlineAddressButton\n                onClick={() => {\n                  onClickCopy();\n                }}\n              >\n                <CopyButtonIcon />\n                <Tooltip>{copyTooltip}</Tooltip>\n              </HeadlineAddressButton>\n              <HeadlineAddressButton onClick={showModal}>\n                <QRButtonIcon />\n                <Tooltip>Click to copy QR code</Tooltip>\n              </HeadlineAddressButton>\n            </HeadlineAddressContainer>\n            <HeadlineCoinsContainer>\n              <CoinsCounterLabel>\n                Coins:\n                <CoinsCounter>3</CoinsCounter>\n              </CoinsCounterLabel>\n              <TokenDropdownContainer>\n                <TokenButton>\n                  <TokenButtonSymbol>ETH:</TokenButtonSymbol>\n                  <TokenButtonAmount>435.3</TokenButtonAmount>\n                  <TokenButtonSeparator />\n                  <TokenButtonIconContainer>\n                    <TokenDropdownIcon />\n                  </TokenButtonIconContainer>\n                </TokenButton>\n              </TokenDropdownContainer>\n            </HeadlineCoinsContainer>\n          </HeadlineContainer>\n          <CoinDetailsContainer>\n            <CoinDetailsRow>\n              <KeyLabel>Creation Tx hash::</KeyLabel>\n              <KeyValue>\n                <ContractLink to=\"/transaction/0xc5d2460186f7233c927e7db2dcc703c0e500}\">\n                  0xc5d2460186f7233c927e7db2dcc703c0e500\n                </ContractLink>\n              </KeyValue>\n            </CoinDetailsRow>\n            <CoinDetailsRow>\n              <KeyLabel>Created on::</KeyLabel>\n              <KeyValue>2020-06-05 13:40 (UTC) </KeyValue>\n            </CoinDetailsRow>\n          </CoinDetailsContainer>\n          <TransactionsTable />\n        </Content>\n      </Container>\n    </>\n  );\n}\n\nexport function TransactionsTable() {\n  function trimAddress(address: string) {\n    if (!address) {\n      return '';\n    }\n\n    return `${address.slice(0, 6)}...${address.slice(-6, address.length - 1)}`;\n  }\n\n  return (\n    <TableContainer>\n      <TableTabsContainer>\n        <TableTabButton isSelected>Transactions</TableTabButton>\n        <TableTabButton>Info</TableTabButton>\n      </TableTabsContainer>\n      <TableHeadlineContainer>\n        <TableHeadlinerContentItem>\n          <TableHeadlineDisclaimer>\n            {`Showing `}\n            <HeadlineHighlighedDisclaimer>3</HeadlineHighlighedDisclaimer>\n            {` out of `}\n            <HeadlineHighlighedDisclaimer>3</HeadlineHighlighedDisclaimer>\n            {` transactions`}\n          </TableHeadlineDisclaimer>\n          <TableNavigation />\n        </TableHeadlinerContentItem>\n      </TableHeadlineContainer>\n      <TableWrapper>\n        <Table>\n          <TableHeadRow>\n            <TableHeadCell>Tx Hash</TableHeadCell>\n            <TableHeadCell>Type</TableHeadCell>\n            <TableHeadCell>Age</TableHeadCell>\n            <TableHeadCell>From</TableHeadCell>\n            <TableHeadCell>To</TableHeadCell>\n            <TableHeadCell>Value</TableHeadCell>\n            <TableHeadCell>Coin</TableHeadCell>\n            <TableHeadCell>Fee (USD)</TableHeadCell>\n          </TableHeadRow>\n          {Transactions.map((transaction, idx) => (\n            <TableRow key={idx}>\n              <TableCell>\n                <TxHash to={`/transaction/${transaction.hash}`}>{transaction.hash}</TxHash>\n              </TableCell>\n              <TableCell>{transaction.type}</TableCell>\n              <TableCell>{transaction.timestamp}</TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subtransaction, idx) => (\n                  <TxRecipient key={idx} to={`/address/${subtransaction.from}`}>\n                    {trimAddress(subtransaction.from)}\n                  </TxRecipient>\n                ))}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subtransaction, idx) =>\n                  subtransaction.to ? (\n                    <TxRecipient key={idx} to={`/address/${subtransaction.to}`}>\n                      {trimAddress(subtransaction.from)}\n                    </TxRecipient>\n                  ) : (\n                    <BoldText>N/A</BoldText>\n                  )\n                )}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) => (\n                  <TransactionValue key={idx}>\n                    {subTransaction.value ? subTransaction.value : 'N/A'}\n                  </TransactionValue>\n                ))}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) =>\n                  subTransaction.coin ? (\n                    <CoinLink key={idx} to={`/coin/${subTransaction.coin}`}>\n                      {subTransaction.coin ? subTransaction.coin : 'N/A'}\n                    </CoinLink>\n                  ) : (\n                    <BoldText>N/A</BoldText>\n                  )\n                )}\n              </TableCell>\n              <TableCell>\n                {transaction.subTransactions.map((subTransaction, idx) => (\n                  <TransactionValue key={idx}>\n                    {subTransaction.fee ? `$${subTransaction.fee.toFixed(2)}` : ''}\n                  </TransactionValue>\n                ))}\n              </TableCell>\n            </TableRow>\n          ))}\n        </Table>\n      </TableWrapper>\n    </TableContainer>\n  );\n}\n\nfunction TableNavigation() {\n  const pages = [1, 2, 3, 4];\n  const [selectedPage, selectPage] = useState(1);\n\n  const onSelectPage = (idx: number) => {\n    selectPage(idx);\n  };\n\n  const onClickPrevPage = () => {\n    selectPage((prevPage) => prevPage - 1);\n  };\n\n  const onClickNextPage = () => {\n    selectPage((prevPage) => prevPage + 1);\n  };\n\n  const onClickLastPage = () => {\n    selectPage(pages[pages.length - 1]);\n  };\n\n  const onClickFirstPage = () => {\n    selectPage(1);\n  };\n\n  return (\n    <TableNavigationButtons>\n      <TableNavigationTextButton disabled={selectedPage === 1} onClick={onClickFirstPage}>\n        First\n      </TableNavigationTextButton>\n      <TableNextNavigationTextButton disabled={selectedPage === 1} onClick={onClickPrevPage}>\n        Previous\n      </TableNextNavigationTextButton>\n      <TableNavigationNumbersContainer>\n        {pages.map((pageIdx) => (\n          <TableNavigationNumberButton\n            key={pageIdx}\n            isSelected={pageIdx === selectedPage}\n            onClick={() => {\n              onSelectPage(pageIdx);\n            }}\n          >\n            {pageIdx}\n          </TableNavigationNumberButton>\n        ))}\n      </TableNavigationNumbersContainer>\n      <TableNextNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickNextPage}\n      >\n        Next\n      </TableNextNavigationTextButton>\n      <TableNavigationTextButton\n        disabled={selectedPage === pages[pages.length - 1]}\n        onClick={onClickLastPage}\n      >\n        Last\n      </TableNavigationTextButton>\n    </TableNavigationButtons>\n  );\n}\n"],"names":["Container","styled","Title","QRAddress","QRCodeContainer","QRModal","props","contentRef","useRef","useOnClickOutside","onClose","ref","address","value","fgColor","bgColor","Transactions","hash","type","timestamp","subTransactions","from","to","coin","fee","Content","CoinDetailsContainer","LogoIcon","StandardSurface","CoinDetailsRow","KeyLabel","KeyValue","ContractLink","Link","TableHeadlineDisclaimer","TableTabsContainer","TableTabButton","ButtonReset","isSelected","ContractPage","contract","useParams","useState","copyTooltip","modal","setModal","Header","onClick","navigator","clipboard","writeText","TransactionsTable","trimAddress","slice","length","TableNavigation","map","transaction","idx","subtransaction","subTransaction","toFixed","pages","selectedPage","selectPage","disabled","prevPage","pageIdx"],"sourceRoot":""}