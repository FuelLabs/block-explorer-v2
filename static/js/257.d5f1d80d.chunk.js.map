{"version":3,"file":"static/js/257.d5f1d80d.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/bn.js/lib/bn.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js"],"sourcesContent":["export const version = \"bignumber/5.6.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        logger.checkNew(new.target, BigNumber);\n\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bytes/5.6.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.6.0\";\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"names":["version","BN","_BN","logger","Logger","_constructorGuard","MAX_SAFE","isBigNumberish","value","BigNumber","isBigNumber","match","isHexString","isBytes","_warnedToStringRadix","constructorGuard","hex","checkNew","throwError","operation","this","_hex","_isBigNumber","Object","freeze","toBigNumber","toBN","fromTwos","toTwos","from","substring","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","BigInt","e","arguments","length","warn","key","type","toHexString","toHex","throwArgumentError","String","anyValue","hexlify","fault","params","isHexable","addSlice","array","slice","args","Array","prototype","call","Uint8Array","apply","isInteger","constructor","i","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","push","allowMissingPrefix","hexPad","HexCharacters","Math","floor","toLowerCase","hexZeroPad","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","join","fromCharCode","message","_checkNormalize","HEX","defineProperty","enumerable","writable","logLevel","level","console","log","_log","levels","DEBUG","INFO","WARNING","code","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","reason","url","NUMERIC_FAULT","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","len","min","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","modn","idivn","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","_createClass","protoProps","staticProps"],"sourceRoot":""}