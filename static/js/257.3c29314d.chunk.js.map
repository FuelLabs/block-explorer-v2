{"version":3,"file":"static/js/257.3c29314d.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/bn.js/lib/bn.js"],"sourcesContent":["export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["version","BN","_BN","logger","Logger","_constructorGuard","MAX_SAFE","isBigNumberish","value","BigNumber","isBigNumber","match","isHexString","isBytes","_warnedToStringRadix","constructorGuard","hex","throwError","operation","this","_hex","_isBigNumber","Object","freeze","toBigNumber","toBN","fromTwos","toTwos","from","substring","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","BigInt","e","arguments","length","warn","key","type","toHexString","toHex","throwArgumentError","String","anyValue","hexlify","fault","params","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","b","len","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}