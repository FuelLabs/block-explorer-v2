{"version":3,"file":"static/js/963.acb109c0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/bn.js/lib/bn.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.6.0\";\n","export const version = \"bytes/5.6.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bignumber/5.6.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        logger.checkNew(new.target, BigNumber);\n\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","push","join","String","fromCharCode","message","_checkNormalize","HEX","Logger","version","this","value","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","Uint8Array","hex","JSON","stringify","toString","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","warn","logger","isHexable","toHexString","isInteger","isBytes","constructor","v","isHexString","match","HexCharacters","hexlify","options","checkSafeUint53","Math","floor","allowMissingPrefix","substring","hexPad","result","BN","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","checkNew","_hex","_isBigNumber","freeze","toBigNumber","toBN","fromTwos","toTwos","from","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","BigInt","e","arguments","type","toHex","anyValue","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","len","min","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","modn","idivn","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","ushln","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}